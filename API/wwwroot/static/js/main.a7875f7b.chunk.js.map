{"version":3,"sources":["assets/g1.png","assets/g2.png","assets/map.png","serviceWorker.ts","app/layout/common/LoadingSpinner.tsx","app/API/agents.ts","app/stores/userStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/menuBarStore.ts","app/stores/employeeStore.ts","app/stores/companyStore.ts","app/stores/timeSheetStore.ts","app/stores/myDataStore.ts","app/stores/managerStore.ts","app/stores/adminStore.ts","app/stores/manageEmployeeStore.ts","app/stores/officeStore.ts","app/stores/policyStore.ts","app/stores/leavesStore.ts","app/stores/financesStore.ts","app/stores/customerStore.ts","app/stores/rootStore.ts","app/common/modals/ModalContainer.tsx","app/common/form/TextInput.tsx","app/layout/common/ErrorMessage.tsx","app/features/forms/LoginForm.tsx","app/features/forms/registerForm.tsx","app/views/home.tsx","app/authentication/AuthorizeRoute.tsx","app/common/error/NotFound.tsx","app/components/TextIcon.jsx","app/layout/common/SideMenu.tsx","app/layout/common/Notification.tsx","app/layout/common/TopMenu.tsx","app/layout/admin/adminLayout.tsx","app/layout/admin/ProfileLayout.tsx","app/components/EmployeeList.tsx","app/constants/MediaScreen.ts","app/components/MyMenu.tsx","app/components/ProfilePhotoText.tsx","app/components/ProfileHeader.tsx","app/layout/common/ProfileLayout.tsx","app/views/UserProfile.tsx","app/components/customer/CustomerList.tsx","app/components/dashnoard/GlobalStorageUsageChart.tsx","app/components/dashnoard/RecentActivity.tsx","app/components/dashnoard/StorageUsageByCustomerChart.tsx","app/views/AdminProfile.tsx","app/features/forms/AddCustomer.tsx","app/views/admin/ManageCustomers.tsx","app/components/customer/CustomerDetails.tsx","app/components/MapsContainer.tsx","app/components/customer/CustomerDocList.tsx","app/common/upload/UploadWidget.tsx","app/components/customer/DocumentUpload.tsx","app/views/CustomerPage.tsx","app/common/form/SelectInput.tsx","app/layout/admin/ManageEmployeeLayout.tsx","app/features/forms/AddEmployee.tsx","app/components/user/UsersList.tsx","app/views/admin/ManageUsers.tsx","app/layout/common/App.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","LoadingSpinner","inverted","content","Dimmer","active","Loader","axios","defaults","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","undefined","message","toast","status","data","history","push","removeItem","info","method","errors","hasOwnProperty","responseBody","url","get","then","body","post","put","values","formData","FormData","append","departmentId","email","firstName","lastName","reportsTo","role","salary","toString","schedulePolicy","title","contractDoc","create","update","customerId","list","companyId","listCustomerDocs","employeeId","getDetails","search","edit","jobTitleId","schedulePolicyId","Current","login","register","find","listEmployees","findAll","officeId","getAll","employeeID","UserStore","rootStore","this","user","observable","computed","action","a","agents","runInAction","console","log","commonStore","setToken","modalStore","closeModal","toLowerCase","CommonStore","reaction","setItem","appLoaded","ModalStore","shallow","open","modal","MenuBarStore","sideMenuVisible","employeeMenuItemVis","screenSize","searchBarVisible","EmployeeStore","Date","file","contractFile","userRoles","newDate","startDate","employee","tabSelected","tabIndex","formValues","userStore","getUser","CompanyStore","CompanyData","TimeSheetStore","getWeek","now","weekDateRange","format","startOfWeek","addDays","endOfWeek","MyDataStore","readOnlyFlag","ManagerStore","department","departmentData","AdminStore","companyData","company","tempManagersList","managersList","ManageEmployeeStore","employeesData","OfficeStore","isMainHQ","departments","departmentList","isMainHR","result","officeList","PolicyStore","titleId","jobTitleOptions","schedulePolicyOptions","LeavesStore","leavesData","toDate","fromDate","Error","dateError","FinancesStore","CustomerStore","customer","customerList","configure","enforceActions","RootStoreContext","createContext","customerStore","menuBarStore","employeeStore","companyStore","timeSheetStore","myDataStore","managerStore","adminStore","manageEmployeeStore","officeStore","policyStore","leavesStore","expensesStore","observer","useContext","Modal","className","onClose","size","Content","TextInput","input","width","readOnly","type","placeholder","label","pattern","meta","touched","Form","Field","Label","basic","color","ErrorMessage","text","Message","Header","statusText","validate","combineValidators","isRequired","password","LoginForm","Login","onSubmit","catch","FORM_ERROR","render","handleSubmit","submitting","submitError","invalid","pristine","dirtySinceLastSubmit","as","textAlign","name","component","defaultValue","Button","disabled","loading","fluid","icon","to","repeatEmail","composeValidators","matchesField","repeatPassword","RegisterForm","isLoggedIn","openModal","Segment","vertical","Container","displayName","Link","onClick","Component","rest","props","NotFound","Icon","Inline","goBack","primary","TextIcon","style","alignSelf","paddingLeft","colorTxt","styleTT","borderRadius","padding","display","Popup","hideText","trigger","toolTipContent","position","hidden","children","useState","activeItem","setActiveItem","handleItemClick","event","Menu","fixed","borderless","Item","Notification","pinned","logout","floating","circular","Image","src","Dropdown","simple","direction","marginTop","ProfileLayout","EmployeeList","loadEmployeesData","setLoading","useEffect","AppMedia","createMedia","breakpoints","mobile","computer","largeScreen","widescreen","MediaContextProvider","pathname","Grid","centered","columns","Column","pointing","secondary","marginLeft","verticalAlign","List","UserProfile","CustomerList","Search","Table","Row","HeaderCell","Body","Cell","labelPosition","uuidv4","Footer","colSpan","pagination","GlobalStorageUsageChart","g1","Feed","Event","image","Summary","date","StorageUsageByCustomerChart","g2","AdminProfile","addCustomer","Group","widths","ManageCustomers","CustomerDetails","Description","MapsContainer","map","CustomerDocList","dropzoneStyles","border","borderColor","paddingTop","height","dropzoneActive","UploadWidget","setFiles","setContractFile","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","accept","getRootProps","getInputProps","isDragActive","DocumentUpload","files","length","CustomerPage","SelectInput","options","Select","value","onChange","e","office","validateViewOnly","SubmitEmployeeDetails","listJobTitles","listSchedulePolicy","GetCompanyDetail","GetNonBasicUsers","isDepartmentLoading","viewUserFlag","setViewUserFlag","header","setHeader","userId","params","path","includes","UsersList","striped","withRouter","setAppLoaded","finally","exact","home","ManageUsers","AddEmployee","dateFnsLocalizer","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iGAAAA,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,yWCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mICFSC,EAb4D,SAAC,GAGrE,IAAD,IAFJC,gBAEI,SADJC,EACI,EADJA,QAEA,OAEE,kBAACC,EAAA,EAAD,CAAQC,QAAM,EAACH,SAAUA,GACvB,kBAACI,EAAA,EAAD,CAAQH,QAASA,M,wGCavBI,IAAMC,SAASC,QAAU,4BACzBF,IAAMG,aAAaC,QAAQC,KACzB,SAACC,GACC,IAAMC,EAAQjB,OAAOkB,aAAaC,QAAQ,OAE1C,OADIF,IAAOD,EAAOI,QAAQC,cAAf,iBAAyCJ,IAC7CD,KAET,SAACM,GACC,OAAOC,QAAQC,OAAOF,MAI1BZ,IAAMG,aAAaY,SAASV,SAAIW,GAAW,SAACJ,GACpB,kBAAlBA,EAAMK,SAAgCL,EAAMG,UAC9CG,IAAMN,MAAM,6CAFsC,MAIVA,EAAMG,SAAxCI,EAJ4C,EAI5CA,OAAQC,EAJoC,EAIpCA,KAAMd,EAJ8B,EAI9BA,OAAQI,EAJsB,EAItBA,QAuB9B,MAtBe,MAAXS,GACFE,GAAQC,KAAK,QAGF,MAAXH,GAEE,2EADFT,EAAQ,sBAGRpB,OAAOkB,aAAae,WAAW,OAC/BF,GAAQC,KAAK,KACbJ,IAAMM,KAAK,iDAGA,MAAXL,GACkB,QAAlBb,EAAOmB,QACPL,EAAKM,OAAOC,eAAe,OAE3BN,GAAQC,KAAK,QAEA,MAAXH,GACFD,IAAMN,MAAM,oDAERA,EAAMG,YAGd,I,qQAAMa,GAAe,SAACb,GAAD,OAA6BA,EAASK,MAQrDhB,GACC,SAACyB,GAAD,OAAiB7B,IAAM8B,IAAID,GAAKE,KAAKH,KADtCxB,GAEE,SAACyB,EAAaG,GAAd,OAA2BhC,IAAMiC,KAAKJ,EAAKG,GAAMD,KAAKH,KAFxDxB,GAGC,SAACyB,EAAaG,GAAd,OAA2BhC,IAAMkC,IAAIL,EAAKG,GAAMD,KAAKH,KAHtDxB,GAKU,SAACyB,EAAaM,GAC1B,IAAIC,EAAW,IAAIC,SAanB,OAZAD,EAASE,OAAO,eAAgBH,EAAOI,cACvCH,EAASE,OAAO,QAASH,EAAOK,OAChCJ,EAASE,OAAO,YAAaH,EAAOM,WACpCL,EAASE,OAAO,WAAYH,EAAOO,UACnCN,EAASE,OAAO,YAAaH,EAAOQ,WACpCP,EAASE,OAAO,OAAQH,EAAOS,MAC/BR,EAASE,OAAO,SAAUH,EAAOU,OAAOC,YACxCV,EAASE,OAAO,iBAAkBH,EAAOY,gBAEzCX,EAASE,OAAO,QAASH,EAAOa,OAChCZ,EAASE,OAAO,cAAeH,EAAOc,YAAY,IAE3CjD,IACJiC,KAAKJ,EAAKO,EAAU,CACnB1B,QAAS,CAAE,eAAgB,yBAE5BqB,KAAKH,KAkHG,GAbE,CACfsB,OAAQ,SAAC9B,GAAD,OACNhB,GAAA,2BAAyCgB,IAC3C+B,OAAQ,SAACC,EAAoBhC,GAArB,OACNhB,GAAA,4CAAiDgD,GAAchC,IACjEiC,KAAM,SAACC,GAAD,OACJlD,GAAA,mCAAwCkD,KAE1CC,iBAAkB,SAACH,GAAD,OAChBhD,GAAA,6CAAkDgD,MAIvC,GAxBA,CACbhD,QAAS,SAACgB,GAAD,OACPhB,GAAa,0BAA2BgB,IAC1CiC,KAAM,SAACG,GAAD,OACJpD,GAAA,oCAAyCoD,MAoB9B,GA7FE,CACfC,WAAY,SAACD,GAAD,OACVpD,GAAA,gCAAqCoD,KACvCN,OAAQ,SAAC9B,GAAD,OACNhB,GAAqB,yBAA0BgB,IACjD+B,OAAQ,SAACK,EAAoBpC,GAArB,OACNhB,GAAA,oCAAyCoD,GAAcpC,IACzDsC,OAAQ,SAACtC,GAAD,OACNhB,GAAA,2BAAgCgB,MAqFrB,GArCE,CACf8B,OAAQ,SAAC9B,GAAD,OACNhB,GAAA,4BAA0CgB,IAC5CuC,KAAM,SAACC,EAAoBxC,GAArB,OACJhB,GAAA,oCAAyCwD,GAAcxC,IACzDiC,KAAM,SAACC,GAAD,OACJlD,GAAA,kCAAuCkD,KACzCxB,IAAK,SAAC8B,GAAD,OACHxD,GAAA,iCAAsCwD,MA6B3B,GAhDQ,CACrBV,OAAQ,SAAC9B,GAAD,OACNhB,GAAA,iCAA+CgB,IACjD+B,OAAQ,SAACU,EAA0BzC,GAA3B,OACNhB,GAAA,yCAA8CyD,GAAoBzC,IACpEU,IAAK,SAAC8B,GAAD,OACHxD,GAAA,iCAAsCwD,KACxCP,KAAM,SAACC,GAAD,OACJlD,GAAA,uCAA4CkD,MAwCjC,GA7GF,CACXQ,QAAS,kBAAsB1D,GAAY,uBAC3C2D,MAAO,SAAC3C,GAAD,OACLhB,GAAa,cAAegB,IAC9B4C,SAAU,SAAC5C,GAAD,OAA2BhB,GAAa,oBAAqBgB,KAyG1D,GA9DC,CACd8B,OAAQ,SAAC9B,GAAD,OACNhB,GAAa,uBAAwBgB,IACvC6C,KAAM,SAACT,GAAD,OACJpD,GAAA,qCAA0CoD,KAC5CU,cAAe,SAACZ,GAAD,OACblD,GAAA,uCAA4CkD,MAwDjC,GAlFI,CACjBJ,OAAQ,SAAC9B,GAAD,OAAuBhB,GAAA,yBAAuCgB,IACtE6C,KAAM,SAAC1B,GAAD,OACJnC,GAAA,qCAA0CmC,KAC5CY,OAAQ,SAACZ,EAAsBnB,GAAvB,OACNhB,GAAA,2CAAgDmC,GAAgBnB,IAClE+C,QAAS,SAACC,GAAD,OACPhE,GAAA,4CAAiDgE,MA2EtC,GAxEA,CACblB,OAAQ,SAAC9B,GAAD,OAAmBhB,GAAa,oBAAqBgB,IAC7D+B,OAAQ,SAACiB,EAAkBhD,GAAnB,OACNhB,GAAA,uCAA4CgE,GAAYhD,IAC1D6C,KAAM,SAACG,GAAD,OACJhE,GAAA,oCAAyCgE,KAC3CC,OAAQ,SAACC,GAAD,OACNlE,GAAA,8BAAmCkE,MAiExB,GAjBD,CACZjB,KAAM,kBAAwBjD,GAAY,uBAgB7B,GAlGO,CACpBiD,KAAM,SAACC,GAAD,OACJlD,GAAA,qCAA0CkD,MC3GzBiB,I,aAGnB,WAAYC,GAAuB,yBAFnCA,eAEkC,4KAChCC,KAAKD,UAAYA,E,uDAMjB,QAASC,KAAKC,S,uCAHfC,c,yEAAgC,Q,sCAEhCC,Y,0GAIAC,U,2HAAe,WAAO1C,GAAP,iBAAA2C,EAAA,+EAEOC,GAAYhB,MAAM5B,GAFzB,OAENuC,EAFM,OAGZM,uBAAY,WACV,EAAKN,KAAOA,KAEdO,QAAQC,IAAI,qBAAsB,EAAKR,MAEvC,EAAKF,UAAUW,YAAYC,SAASV,EAAKnE,OACzC,EAAKiE,UAAUa,WAAWC,aAIxBjE,GAAQC,KAAR,qBAAiB,EAAKoD,YAAtB,aAAiB,EAAW9B,KAAK,GAAG2C,cAApC,gBAbU,uH,+FAmBfV,U,2HAAkB,WAAO1C,GAAP,SAAA2C,EAAA,+EAEIC,GAAYf,SAAS7B,GAFzB,cAIf,EAAKqC,UAAUa,WAAWC,aAJX,oH,8FAUlBT,U,0GAAiB,4BAAAC,EAAA,+EAEKC,GAAYjB,UAFjB,OAERY,EAFQ,OAGdM,uBAAY,WACV,EAAKN,KAAOA,KAJA,gDAOdO,QAAQC,IAAR,MAPc,4D,oCAUjBL,U,oFAAgB,WACf,EAAKL,UAAUW,YAAYC,SAAS,MACpC,EAAKV,KAAO,KACZrD,GAAQC,KAAK,S,GC3DIkE,I,EAEjB,WAAYhB,GAAuB,IAAD,gCADlCA,eACkC,oJAC9BC,KAAKD,UAAYA,EAEjBiB,oBACI,kBAAM,EAAKlF,SACX,SAAAA,GACQA,EACAjB,OAAOkB,aAAakF,QAAQ,MAAOnF,GAEnCjB,OAAOkB,aAAae,WAAW,W,mCAM9CoD,c,yEAAkCrF,OAAOkB,aAAaC,QAAQ,U,uCAC9DkE,c,yEAAuB,K,sCAEvBE,U,oFAAkB,SAACtE,GAChB,EAAKA,MAAQA,M,0CAGhBsE,U,oFAAsB,WACnB,EAAKc,WAAY,M,GCzBJC,I,EAOlBjB,aAAWkB,Q,EAJZ,WAAYrB,GAAuB,yBAFnCA,eAEkC,8GAChCC,KAAKD,UAAYA,G,8GAGS,CAC1BsB,MAAM,EACN9D,KAAM,S,uCAGP6C,U,oFAAmB,SAACjF,GACnB,EAAKmG,MAAM/D,KAAOpC,EAClB,EAAKmG,MAAMD,MAAO,M,wCAGnBjB,U,oFAAoB,WACnB,EAAKkB,MAAM/D,KAAO,KAClB,EAAK+D,MAAMD,MAAO,M,GCnBDE,I,EAGnB,WAAYxB,GAAuB,yBAFnCA,eAEkC,kRAChCC,KAAKD,UAAYA,G,6CAElBG,c,yEAAsC,K,8CACtCA,c,yEAAuC,K,iDACvCA,c,yEAA0C,K,4CAE1CE,U,0GAAwB,sBAAAC,EAAA,+EACvBE,uBAAY,kBAAO,EAAKiB,iBAAmB,EAAKA,oBADzB,8C,oDAItBpB,U,0GAAgC,sBAAAC,EAAA,+EACjCE,uBAAY,kBAAO,EAAKkB,qBAAuB,EAAKA,wBADnB,8C,gDAKlCrB,U,2HAA4B,WAAOsB,GAAP,SAAArB,EAAA,sDACvBqB,EAAa,KACfnB,uBAAY,kBAAO,EAAKoB,kBAAmB,KAC3CpB,uBAAY,kBAAO,EAAKiB,iBAAkB,OAE1CjB,uBAAY,kBAAO,EAAKiB,iBAAkB,KAC1CjB,uBAAY,kBAAO,EAAKoB,kBAAmB,MANlB,2C,4DCZVC,I,EAGnB,WAAY7B,GAAuB,yBAFnCA,eAEkC,shBAChCC,KAAKD,UAAYA,G,sCAGlBG,c,wEAA8B,O,0CAC9BA,c,yEAAmC,K,uCACnCA,c,wEAAgC,M,2CAChCA,c,wEAAkC,M,wCAClCA,c,yEAA6B,IAAI2B,Q,uCAEjC3B,c,yEAAiD,Q,8CAEjDE,U,2HAAyB,WAAO0B,GAAP,SAAAzB,EAAA,sDACxB,EAAK0B,aAAeD,EADI,2C,oGAIzB1B,U,0GAAsB,4BAAAC,EAAA,+EAEAC,GAAa1B,OAFb,QAEbjC,EAFa,SAKjB4D,uBAAY,WACV,EAAKyB,UAAYrF,KANF,uH,2CAYtByD,U,2HAAsB,WAAO6B,GAAP,SAAA5B,EAAA,sDACrBE,uBAAY,WACV,EAAK2B,UAAYD,KAFE,2C,kGAKtB7B,U,2HAAoB,WAAOP,GAAP,eAAAQ,EAAA,+EAESC,GAAgBtB,WAAWa,GAFpC,cAEbsC,EAFa,SAIf5B,uBAAY,WACV,EAAK4B,SAAWA,KALH,kBAOVA,GAPU,oG,iGAYpB/B,U,2HAAmB,WAAOgC,GAAP,SAAA/B,EAAA,sDAClBE,uBAAY,WACV,EAAK8B,SAAWD,KAFA,2C,6GAKnBhC,U,2HAA+B,WAC9BrB,EACAuD,GAF8B,SAAAjC,EAAA,+EAKPC,GAAgB5B,OAAOK,EAAYuD,GAL5B,eAMhB,EAAKvC,UAAUwC,UAAUC,UANT,oH,+GAW/BpC,U,2HAA+B,WAAOzD,GAAP,SAAA0D,EAAA,sEAM5B1D,EAAK6B,YAAc,EAAKuD,aAExBvB,QAAQC,IAAI9D,GARgB,SAUvB2D,GAAgB7B,OAAO9B,GAVA,2H,4DClEb8F,I,GAGnB,WAAY1C,GAAuB,yBAFnCA,eAEkC,+IAChCC,KAAKD,UAAYA,G,2CAGlBG,c,yEAAmD,Q,uDAEnDE,U,gHAAiC,WAAOsB,GAAP,SAAArB,EAAA,sDACVE,uBAAY,eADF,2C,6GAKjCH,U,2HAA8B,WAAOzD,GAAP,SAAA0D,EAAA,sEAE3BE,uBAAY,eAFe,SAwBVD,GAAe7B,OAAO,EAAKiE,aAxBjB,eAyBjBlC,QAAQC,IAAI,SAzBK,oH,8GCjBZkC,I,GAGnB,WAAY5C,GAAuB,yBAFnCA,eAEkC,sKAChCC,KAAKD,UAAYA,G,2CAGlBG,c,yEAAiC0C,aAAQf,KAAKgB,U,6CAC9C3C,c,wEAAqC,M,8CAErCE,U,0GAAwB,sBAAAC,EAAA,sDACvB,IACEE,uBAAY,WACV,EAAKuC,cAAc,GAAKC,aACtB,IAAIlB,KAAKmB,aAAYnB,KAAKgB,QAC1B,SAEF,EAAKC,cAAc,GAAKC,aACtB,IAAIlB,KAAKoB,aAAQD,aAAYnB,KAAKgB,OAAQ,IAC1C,SAEF,EAAKC,cAAc,GAAKC,aACtB,IAAIlB,KAAKoB,aAAQD,aAAYnB,KAAKgB,OAAQ,IAC1C,SAEF,EAAKC,cAAc,GAAKC,aACtB,IAAIlB,KAAKoB,aAAQD,aAAYnB,KAAKgB,OAAQ,IAC1C,SAEF,EAAKC,cAAc,GAAKC,aACtB,IAAIlB,KAAKoB,aAAQD,aAAYnB,KAAKgB,OAAQ,IAC1C,SAEF,EAAKC,cAAc,GAAKC,aACtB,IAAIlB,KAAKoB,aAAQD,aAAYnB,KAAKgB,OAAQ,IAC1C,SAEF,EAAKC,cAAc,GAAKC,aACtB,IAAIlB,KAAKqB,aAAUrB,KAAKgB,QACxB,YAGJ,MAAO1G,IAhCc,8C,0CAmCxBiE,U,gHAAoB,WAAOzD,GAAP,SAAA0D,EAAA,sDAEnBG,QAAQC,IAAI9D,GAFO,2C,6DC7CFwG,I,GAGnB,WAAYpD,GAAuB,yBAFnCA,eAEkC,2HAChCC,KAAKD,UAAYA,G,4CAGlBG,c,yEAAmC,K,2CAEnCE,U,0GAAqB,sBAAAC,EAAA,sDACpBE,uBAAY,WACV,EAAK6C,cAAgB,EAAKA,gBAFR,8C,2CAOrBhD,U,0GAAqB,sBAAAC,EAAA,sDACpBE,uBAAY,WACV,EAAK6C,cAAgB,EAAKA,gBAFR,8C,ICfHC,I,GAGnB,WAAYtD,GAAuB,yBAFnCA,eAEkC,uKAChCC,KAAKD,UAAYA,G,wCAGlBG,c,wEAA8B,O,8CAC9BA,c,yEAAgD,Q,yCAEhDE,U,2HAAmB,WAAOgC,GAAP,SAAA/B,EAAA,sDAClBE,uBAAY,WACV,EAAK8B,SAAWD,KAFA,2C,2GAMnBhC,U,2HAA4B,WAAOH,GAAP,eAAAI,EAAA,kEAIL,YAAjBJ,EAAK9B,KAAK,GAJY,gCAKEmC,GAAkBd,KAAKS,EAAKnC,cAL9B,OAKjBwF,EALiB,6BAWvB/C,uBAAY,WACR,EAAKgD,eAAiBD,KAZH,8H,6DChBVE,I,GAEnB,WAAYzD,GAAuB,yBADnCA,eACkC,yKAChCC,KAAKD,UAAYA,G,uCAGlBG,c,yEAAsC,Q,4CACtCA,c,wEAAmC,M,gDAEnCE,U,2HAA0B,WAAOrB,GAAP,eAAAsB,EAAA,+EAEGC,GAAed,KAAKT,GAFvB,QAEjB0E,EAFiB,SAIrBlD,uBAAY,WACV,EAAKmD,QAAUD,KALI,uG,yGAW1BrD,U,2HAA0B,WAAOvB,GAAP,eAAAwB,EAAA,+EAEQC,GAAqB1B,KAAKC,GAFlC,QAEjB8E,EAFiB,SAKrBpD,uBAAY,WACV,EAAKqD,aAAeD,KAND,oH,6DChBRE,I,GAGnB,WAAY9D,GAAuB,yBAFnCA,eAEkC,qIAChCC,KAAKD,UAAYA,G,8CAElBG,c,yEAAgD,Q,6CAChDA,c,wEAA+C,M,iDAE/CE,U,2HAA2B,WAAOH,GAAP,eAAAI,EAAA,+EAiBIC,GAAeb,cAAcQ,EAAKpB,WAjBtC,QAiBlBiF,EAjBkB,SAoBpBvD,uBAAY,WACV,EAAKuD,cAAgBA,KArBH,oH,6DCZTC,I,GAGnB,WAAYhE,GAAuB,yBAFnCA,eAEkC,qaAChCC,KAAKD,UAAYA,G,wCAElBG,c,yEAA+B,K,0CAC/BA,c,wEAAuC,M,8CACvCA,c,wEAA2C,M,6CAC3CA,c,yEAA4C,Q,4CAC5CE,U,oFAAsB,WACrB,EAAK4D,UAAY,EAAKA,a,+CAEvB5D,U,2HAAyB,WAAOT,GAAP,eAAAU,EAAA,+EAEIC,GAAkBZ,QAAQC,GAF9B,QAEhBsE,EAFgB,SAIpB1D,uBAAY,WACV,EAAK2D,eAAiBD,KALJ,oH,qGAazB7D,U,2HAAsB,WAAOzD,GAAP,SAAA0D,EAAA,sEAKnB1D,EAAKwH,SAAW,EAAKH,SALF,SAOG1D,GAAc7B,OAAO9B,GAPxB,kI,4GAYtByD,U,0GACqB,sBAAAC,EAAA,+EACpBE,uBAAY,WACV,EAAK2D,eAAiB,OAFJ,8C,2CAKrB9D,U,0GAAqB,8BAAAC,EAAA,+EAECC,GAAcV,OAAd,UACjB,EAAKG,UAAUwC,UAAUtC,YADR,aACjB,EAA+BlB,YAHf,QAEdqF,EAFc,SAMhB7D,uBAAY,WACV,EAAK8D,WAAaD,KAPJ,0G,+CAcrBhE,U,gHAAyB,WAAOzD,GAAP,SAAA0D,EAAA,sEAEtBG,QAAQC,IAAI9D,GAFU,SAID2D,GAAkB7B,OAAO9B,GAJxB,kI,6DCvDP2H,I,GAGnB,WAAYvE,GAAuB,yBAFnCA,eAEkC,ucAChCC,KAAKD,UAAYA,G,+CAElBG,c,wEAAkD,M,qDAClDA,c,wEAA8D,M,8CAE9DE,U,gHAAwB,WAAOzD,GAAP,SAAA0D,EAAA,+EAEAC,GAAgB7B,OAAO9B,GAFvB,gI,uGAQxByD,U,gHAAwB,WAAOmE,EAAiB5H,GAAxB,SAAA0D,EAAA,+EAEAC,GAAgBpB,KAAKqF,EAAS5H,GAF9B,gI,sGAQxByD,U,gHAAqB,WAAOmE,GAAP,eAAAlE,EAAA,+EAEGC,GAAgBjD,IAAIkH,GAFvB,OAEZH,EAFY,OAGlB5D,QAAQC,IAAI2D,GAHM,oH,sGASrBhE,U,2HAAuB,WAAOvB,GAAP,eAAAwB,EAAA,sEAGpBG,QAAQC,IAAI5B,GAHQ,SAKCyB,GAAgB1B,KAAKC,GALtB,QAKduF,EALc,SAOlB7D,uBAAY,WACV,EAAKiE,gBAAkBJ,KARP,oH,6GAiBvBhE,U,gHAA8B,WAAOzD,GAAP,SAAA0D,EAAA,6DAC7BG,QAAQC,IAAI9D,GADiB,SAGN2D,GAAsB7B,OAAO9B,GAHvB,yD,0GAM9ByD,U,+FAA2B,sBAAAC,EAAA,6F,oDAE3BD,U,+FAA8B,sBAAAC,EAAA,6F,kDAE9BD,U,2HAA4B,WAAOvB,GAAP,eAAAwB,EAAA,+EAEFC,GAAsB1B,KAAKC,GAFzB,QAEnBvC,EAFmB,SAKvBiE,uBAAY,WACV,EAAKkE,sBAAwBnI,KANR,oH,6DClEVoI,I,GAGnB,WAAY3E,GAAuB,yBAFnCA,eAEkC,mKAChCC,KAAKD,UAAYA,G,0CAGlBG,c,yEAAwC,Q,yCACxCA,c,wEAA+B,M,8CAE/BE,U,2HAAwB,WAAOP,GAAP,eAAAQ,EAAA,+EAEAC,GAAc1B,KAAKiB,GAFnB,QAEfuE,EAFe,SAKnB7D,uBAAY,WACV,EAAKoE,WAAaP,KAND,oH,qGAcxBhE,U,2HAAsB,WAAOzD,GAAP,eAAA0D,EAAA,kEAEbJ,EAAO,EAAKF,UAAUwC,UAAUtC,KACtCtD,EAAKoC,WAAL,OAAkBkB,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMlB,aACpBpC,EAAKiI,OAASjI,EAAKkI,UAJJ,sBAKX,IAAIC,MACP,EAAKC,UAAY,uCANH,uBASbzE,GAAc3E,QAAQgB,GATT,2H,6DC3BJqI,GAGjB,WAAYjF,GAAuB,yBAFnCA,eAEkC,EAChCC,KAAKD,UAAYA,GCDFkF,I,GAGnB,WAAYlF,GAAuB,yBAFnCA,eAEkC,iKAChCC,KAAKD,UAAYA,G,wCAGlBG,c,yEAAwC,Q,4CACxCA,c,wEAAuC,M,2CAGvCE,U,gHAAqB,WAAOzD,GAAP,SAAA0D,EAAA,+EAEZC,GAAgB7B,OAAO9B,GAFX,sDAIlB6D,QAAQC,IAAI,8BAAZ,MAJkB,wD,qGASrBL,U,2HAAsB,WAAOvB,GAAP,eAAAwB,EAAA,+EAEIC,GAAgB1B,KAAKC,GAFzB,QAEbqG,EAFa,UAGL,EAAKC,aAAeD,GAHf,gDAKnB1E,QAAQC,IAAI,2BAAZ,MALmB,yD,6DCNzB2E,oBAAU,CAAEC,eAAgB,WACrB,IAsCMC,GAAmBC,wBAAc,IApB5C,aAAe,yBAjBfC,mBAiBc,OAhBdjD,eAgBc,OAfd7B,iBAec,OAddE,gBAcc,OAbd6E,kBAac,OAZdC,mBAYc,OAXdC,kBAWc,OAVdC,oBAUc,OATdC,iBASc,OARdC,kBAQc,OAPdC,gBAOc,OANdC,yBAMc,OALdC,iBAKc,OAJdC,iBAIc,OAHdC,iBAGc,OAFdC,mBAEc,EACZpG,KAAKwF,cAAgB,IAAIP,GAAcjF,MACvCA,KAAKoG,cAAgB,IAAIpB,GAAchF,MACvCA,KAAKmG,YAAc,IAAIzB,GAAY1E,MACnCA,KAAKkG,YAAc,IAAI5B,GAAYtE,MACnCA,KAAKgG,oBAAsB,IAAInC,GAAoB7D,MACnDA,KAAKiG,YAAc,IAAIlC,GAAY/D,MACnCA,KAAK+F,WAAa,IAAIvC,GAAWxD,MACjCA,KAAK8F,aAAe,IAAIzC,GAAarD,MACrCA,KAAK6F,YAAc,IAAI1C,GAAYnD,MACnCA,KAAK4F,eAAiB,IAAIjD,GAAe3C,MACzCA,KAAK2F,aAAe,IAAIlD,GAAazC,MACrCA,KAAKyF,aAAe,IAAIlE,GAAavB,MACrCA,KAAKuC,UAAY,IAAIzC,GAAUE,MAC/BA,KAAKY,WAAa,IAAIO,GAAWnB,MACjCA,KAAKU,YAAc,IAAIK,GAAYf,MACnCA,KAAK0F,cAAgB,IAAI9D,GAAc5B,Q,UC9B5BqG,gBAnBQ,WACrB,IAD2B,EACTC,qBAAWhB,IAIf1E,WALa,IAGzBU,MAASD,EAHgB,EAGhBA,KAAM9D,EAHU,EAGVA,KACfsD,EAJyB,EAIzBA,WAEF,OACE,kBAAC0F,GAAA,EAAD,CACEC,UAAU,kBACVnF,KAAMA,EACNnG,UAAQ,EACRuL,QAAS5F,EACT6F,KAAK,QAEL,kBAACH,GAAA,EAAMI,QAAP,KAAgBpJ,O,gGCkBPqJ,GA7BqB,SAAC,GAS9B,IARLC,EAQI,EARJA,MACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAC,EAKI,EALJA,KACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,QAEI,IADJC,KAAQC,EACJ,EADIA,QAASlL,EACb,EADaA,MAEjB,OACE,kBAACmL,GAAA,EAAKC,MAAN,CAAYpL,MAAOkL,KAAalL,EAAO6K,KAAMA,EAAMF,MAAOA,GACxD,+BAAQI,GACR,2CACML,EADN,CAEEM,QAASA,EACTF,YAAaA,EACbT,WAAYO,EAAW,cAAgB,IAAM,IAC7CA,SAAUA,KAEXM,GAAWlL,GACV,kBAACqL,GAAA,EAAD,CAAOC,OAAK,EAACC,MAAM,OAChBvL,K,UCZKwL,GATuB,SAAC,GAAmB,IAAlBxL,EAAiB,EAAjBA,MAAOyL,EAAU,EAAVA,KAC9C,OACE,kBAACC,GAAA,EAAD,CAAS1L,OAAK,GACZ,kBAAC0L,GAAA,EAAQC,OAAT,KAAiB3L,EAAM4L,YACtBH,GAAQ,kBAACC,GAAA,EAAQlB,QAAT,CAAiBxL,QAASyM,MCFnCI,GAAWC,6BAAkB,CACjClK,MAAOmK,sBAAW,SAClBC,SAAUD,sBAAW,cA2DRE,GAxDG,WAChB,IACQC,EADU/B,qBAAWhB,IACD/C,UAApB8F,MACR,OACE,kBAAC,KAAD,CACEC,SAAU,SAAC5K,GAAD,OACR2K,EAAM3K,GAAQ6K,OAAM,SAACpM,GAAD,uBACjBqM,KAAarM,OAGlB6L,SAAUA,GACVS,OAAQ,gBACNC,EADM,EACNA,aACAC,EAFM,EAENA,WACAC,EAHM,EAGNA,YACAC,EAJM,EAINA,QACAC,EALM,EAKNA,SACAC,EANM,EAMNA,qBANM,OAQN,kBAACzB,GAAA,EAAD,CAAMgB,SAAUI,EAAcvM,OAAK,GACjC,kBAAC2L,GAAA,EAAD,CAAQkB,GAAG,KAAK7N,QAAQ,QAAQuM,MAAM,OAAOuB,UAAU,WACvD,kBAAC,KAAD,CACEC,KAAK,QACLC,UAAWvC,GACXK,YAAY,QACZmC,aAAa,kBAEf,kBAAC,KAAD,CACEF,KAAK,WACLC,UAAWvC,GACXK,YAAY,WACZD,KAAK,WACLoC,aAAa,eAEdR,IAAgBG,GACf,kBAAC,GAAD,CACE5M,MAAOyM,EACPhB,KAAK,gCAGT,6BACA,kBAACyB,GAAA,EAAD,CACEC,SAAWT,IAAYE,GAAyBD,EAChDS,QAASZ,EACTjB,MAAM,OACNvM,QAAQ,QACRqO,OAAK,EACLC,KAAK,YAEP,kBAAC,IAAD,CAAMC,GAAG,KAAT,yBClDJ1B,GAAWC,6BAAkB,CAUjClK,MAAOmK,sBAAW,SAClBC,SAAUD,sBAAW,YACrByB,YAAaC,6BACX1B,cACA2B,wBAAa,QAAS,SAFXD,CAGX,gBAEFE,eAAgBF,6BACd1B,cACA2B,wBAAa,WAAY,YAFXD,CAGd,qBAoEWG,GAhEwB,WACrC,IACQxK,EADU+G,qBAAWhB,IACE/C,UAAvBhD,SACR,OACE,kBAAC,KAAD,CACE+I,SAAU,SAAC5K,GAAD,OACR6B,EAAS7B,GAAQ6K,OAAM,SAACpM,GAAD,uBACpBqM,KAAarM,OAGlB6L,SAAUA,GACVS,OAAQ,gBACNC,EADM,EACNA,aACAC,EAFM,EAENA,WACAC,EAHM,EAGNA,YACAC,EAJM,EAINA,QACAC,EALM,EAKNA,SACAC,EANM,EAMNA,qBANM,OAQN,kBAACzB,GAAA,EAAD,CAAMgB,SAAUI,EAAcvM,OAAK,GACjC,kBAAC2L,GAAA,EAAD,CAAQkB,GAAG,KAAK7N,QAAQ,WAAWuM,MAAM,OAAOuB,UAAU,WAC1D,kBAAC,KAAD,CACEC,KAAK,cACLC,UAAWvC,GACXK,YAAY,iBAEd,kBAAC,KAAD,CAAOiC,KAAK,WAAWC,UAAWvC,GAAWK,YAAY,aAEzD,kBAAC,KAAD,CAAOiC,KAAK,QAAQC,UAAWvC,GAAWK,YAAY,UACtD,kBAAC,KAAD,CACEiC,KAAK,cACLC,UAAWvC,GACXK,YAAY,iBAEd,kBAAC,KAAD,CACEiC,KAAK,WACLC,UAAWvC,GACXK,YAAY,WACZD,KAAK,aAEP,kBAAC,KAAD,CACEkC,KAAK,iBACLC,UAAWvC,GACXK,YAAY,kBACZD,KAAK,aAEN4B,IAAgBG,GACf,kBAAC,GAAD,CAAc5M,MAAOyM,EAAahB,KAAK,yBAEzC,6BACA,kBAACyB,GAAA,EAAD,CACEC,SAAWT,IAAYE,GAAyBD,EAChDS,QAASZ,EACTjB,MAAM,OACNvM,QAAQ,SACRqO,OAAK,EACLC,KAAK,gBC5CFpD,gBA3CF,WACX,IAAMvK,EAAQjB,OAAOkB,aAAaC,QAAQ,OACpC+D,EAAYuG,qBAAWhB,IAFZ,EAGYvF,EAAUwC,UAA/BtC,EAHS,EAGTA,KAAM+J,EAHG,EAGHA,WACNC,EAAclK,EAAUa,WAAxBqJ,UAER,OACE,kBAACC,GAAA,EAAD,CAAShP,UAAQ,EAAC+N,UAAU,SAASkB,UAAQ,EAAC3D,UAAU,YACtD,kBAAC4D,GAAA,EAAD,CAAWxC,MAAI,GACb,kBAACE,GAAA,EAAD,CAAQkB,GAAG,KAAK9N,UAAQ,GAAxB,UAIC8O,GAAc/J,GAAQnE,EACrB,kBAAC,WAAD,KACE,kBAACgM,GAAA,EAAD,CAAQkB,GAAG,KAAK9N,UAAQ,EAACC,QAAO,mBAAc8E,EAAKoK,eACnD,kBAAChB,GAAA,EAAD,CAAQL,GAAIsB,IAAMZ,GAAE,WAAMzJ,EAAK9B,KAAK,GAAG2C,cAAnB,cAA8C4F,KAAK,OAAOxL,UAAQ,GAAtF,gBAKF,kBAAC,WAAD,KACE,kBAACmO,GAAA,EAAD,CACEkB,QAAS,kBAAMN,EAAU,kBAAC,GAAD,QACzBvD,KAAK,OACLxL,UAAQ,GAHV,SAOA,kBAACmO,GAAA,EAAD,CACEkB,QAAS,kBAAMN,EAAU,kBAAC,GAAD,QACzBvD,KAAK,OACLxL,UAAQ,GAHV,kB,UCRGmL,gBAhB0B,SAAC,GAGnC,IAFMmE,EAEP,EAFJrB,UACGsB,EACC,8BAEIT,EADU1D,qBAAWhB,IACI/C,UAAzByH,WACR,OACE,kBAAC,IAAD,iBACMS,EADN,CAEEhC,OAAQ,SAACiC,GAAD,OACNV,EAAa,kBAACQ,EAAcE,GAAY,kBAAC,IAAD,CAAUhB,GAAG,a,SCnBhDiB,GAAW,WACtB,OACE,kBAACT,GAAA,EAAD,CAASjD,aAAW,EAACT,UAAU,kBAI7B,kBAACsB,GAAA,EAAD,CAAQ2B,MAAI,GAEZ,kBAAC3B,GAAA,EAAD,CAAQJ,MAAM,QAEZ,oCAGA,kBAACkD,GAAA,EAAD,CAAM1B,KAAK,WAPb,0DAUA,kBAACgB,GAAA,EAAQW,OAAT,KACE,kBAACxB,GAAA,EAAD,CAAQkB,QAAS,kBAAM3N,GAAQkO,UAAUC,SAAO,GAAhD,c,iDCjBaC,G,8MAWnBC,MAAQ,CACNC,UAAW,SACXC,YAAa,MACbzD,MAAO,EAAKgD,MAAMU,SAAW,EAAKV,MAAMU,SAAW,Q,EAGpDC,QAAU,CACTC,aAAc,EACdC,QAAS,O,uDAGT,OACE,yBAAKN,MAAO,CAAEO,QAAS,gBACrB,kBAACC,GAAA,EAAD,CACAnC,UAAWtJ,KAAK0K,MAAMgB,SACtBT,MAAOjL,KAAKqL,QACVM,QACF,kBAACf,GAAA,EAAD,CACElE,KAAM1G,KAAK0K,MAAMhE,KACjBxL,SAAU8E,KAAK0K,MAAMxP,SACrBwM,MAAO1H,KAAK0K,MAAMhD,MAClBwB,KAAMlJ,KAAK0K,MAAMxB,OAEnB/N,QAAS6E,KAAK0K,MAAMkB,eACpBC,SAAS,iBAET,yBACEZ,MAAOjL,KAAKiL,MACZa,OAAQ9L,KAAK0K,MAAMgB,SACnBhE,MAAO1H,KAAK0K,MAAMU,UAEjBpL,KAAK0K,MAAMqB,e,GA1CgBvB,aCgIvBnE,gBAzHoB,SAAC,GAAkB,IAAhB0F,EAAe,EAAfA,SAC9BhM,EAAYuG,qBAAWhB,IACrB9D,EAAoBzB,EAAU0F,aAA9BjE,gBACAvB,EAASF,EAAUwC,UAAnBtC,KAH2C,EAIf+L,mBAAS,aAJM,oBAI5CC,EAJ4C,KAIhCC,EAJgC,KAM7CC,EAAkB,SACtBC,EACAzP,GAFsB,OAGnBuP,EAAcvP,EAAKuM,OAkGxB,OACE,6BACE,yBAAK1C,UAAU,UACb,yBAAKA,WAAYhF,EAAkB,cAAgB,IAAM,QAjG3D,kBAAC6K,GAAA,EAAD,CACEC,MAAM,OACNC,YAAU,EACV/F,WAAYhF,EAAkB,aAAe,IAAM,SACnD2I,UAAQ,GAER,kBAACkC,GAAA,EAAKG,KAAN,CACExD,GAAIsB,IACJZ,GAAI,QACJR,KAAK,YACL7N,OAAuB,cAAf4Q,EACR1B,QAAS4B,GAET,yBAAKlB,MAAO,CAAEvD,MAAO,YAArB,SAGF,kBAAC2E,GAAA,EAAKG,KAAN,CACExD,GAAIsB,IACJZ,GAAE,kBAAMzJ,QAAN,IAAMA,OAAN,EAAMA,EAAM9B,KAAZ,cACF+K,KAAK,YACL7N,OAAuB,cAAf4Q,EACR1B,QAAS4B,GAET,kBAAC,GAAD,CACEP,eAAgB,UAChBF,SAAUlK,EACVtG,UAAU,EACVwL,KAAK,QACL0E,SAAS,UACTlC,KAAK,aANP,cAYF,kBAACmD,GAAA,EAAKG,KAAN,CACExD,GAAIsB,IACJZ,GAAI,mBACJR,KAAK,mBACL7N,OAAuB,qBAAf4Q,EACR1B,QAAS4B,GAET,kBAAC,GAAD,CACEP,eAAgB,UAChBF,SAAUlK,EACVtG,UAAU,EACVwL,KAAK,QACL0E,SAAS,UACTlC,KAAK,YANP,qBAWF,kBAACmD,GAAA,EAAKG,KAAN,CACExD,GAAIsB,IACJZ,GAAI,eACJR,KAAK,eACL7N,OAAuB,iBAAf4Q,EACR1B,QAAS4B,GAET,kBAAC,GAAD,CACEP,eAAe,WACfF,SAAUlK,EACVkF,KAAK,QACLxL,UAAU,EACVkQ,SAAS,UACTlC,KAAK,SANP,iBAYF,kBAACmD,GAAA,EAAKG,KAAN,CACExD,GAAIsB,IACJZ,GAAI,WACJR,KAAK,UACL7N,OAAuB,YAAf4Q,EACR1B,QAAS4B,GAET,kBAAC,GAAD,CACEP,eAAe,UACfF,SAAUlK,EACVkF,KAAK,QACLxL,UAAU,EACVkQ,SAAS,UACTlC,KAAK,UANP,uBAqBF,yBAAK1C,WAAYhF,EAAkB,iBAAmB,IAAM,WACzDuK,Q,oBC9GIU,GAVwB,WACrC,OACE,kBAAChB,GAAA,EAAD,CACEE,QAAS,kBAACf,GAAA,EAAD,CAAMlE,KAAK,QAAQwC,KAAK,OAAOxB,MAAM,SAC9CmE,SAAS,eACTnF,KAAK,OACLgG,QAAM,KC+CGrG,gBAlDmB,WAChC,IADsC,EACpBC,qBAAWhB,IACM/C,UAA3BtC,EAF8B,EAE9BA,KAAM0M,EAFwB,EAExBA,OAEd,OACE,kBAACN,GAAA,EAAD,CAAM7F,UAAU,YACd,kBAAC6F,GAAA,EAAKG,KAAN,CAAWhG,UAAU,YAAY+D,QAAS,cACxC,kBAACK,GAAA,EAAD,CAAM1B,KAAK,UAGb,kBAACmD,GAAA,EAAKA,KAAN,CAAWR,SAAS,SAClB,kBAACQ,GAAA,EAAKG,KAAN,CAAWhG,UAAU,YAAYqF,SAAS,SACxC,kBAAC,GAAD,MAEA,kBAACrE,GAAA,EAAD,CACEhB,UAAU,kBACVkB,MAAM,OACNhB,KAAM,OACNkG,UAAQ,EACRC,UAAQ,GALV,MAUD5M,GACC,kBAACoM,GAAA,EAAKG,KAAN,CAAWX,SAAS,SAClB,kBAACiB,GAAA,EAAD,CACED,UAAQ,EACRnG,KAAM,OACNqG,IAAI,gEAEN,6BACA,kBAACC,GAAA,EAAD,CAAUpF,KAAM3H,EAAKoK,YAAa4C,QAAM,EAACC,UAAU,QACjD,kBAACF,GAAA,EAASX,KAAV,CAAepB,MAAO,CAAEkC,UAAW,KACjC,kBAACH,GAAA,EAASR,KAAV,CACExD,GAAIsB,IACJZ,GAAE,QACF9B,KAAK,aACL6B,KAAK,SAEP,kBAACuD,GAAA,EAASR,KAAV,CAAejC,QAASoC,EAAQ/E,KAAK,SAAS6B,KAAK,kBC7BpDpD,gBAXuB,SAAC,GAAkB,IAAhB0F,EAAe,EAAfA,SACvC,OACE,yBAAKvF,UAAU,eACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,gBACb,kBAAC,GAAD,KAAWuF,QCNJqB,GAJiC,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAC9C,OAAO,kBAAC,GAAD,KAAcA,ICwCVsB,GAlCgB,WAC7B,IAAMtN,EAAYuG,qBAAWhB,IACrBrF,EAASF,EAAUwC,UAAnBtC,KAF2B,EAGUF,EAAUiG,oBAA/CsH,EAH2B,EAG3BA,kBAH2B,KAGRxJ,cACGkI,oBAAS,IAJJ,oBAInBuB,GAJmB,WAUnC,OAJAC,qBAAU,WACRF,EAAkBrN,GAAO3C,MAAK,kBAAMiQ,GAAW,QAC9C,CAACD,EAAmBrN,IAGrB,kBAAC,GAAD,KAeE,kBAACiK,GAAA,EAAD,Q,6BClCOuD,GAAWC,uBAAY,CAChCC,YAAa,CACXC,OAAQ,IAERC,SAAU,IACVC,YAAa,KACbC,WAAY,QCqHH1H,gBAjHU,WAAO,IACtB2H,EAAyBP,GAAzBO,qBADqB,EAGOhC,mBAAS,QAHhB,oBAGtBC,EAHsB,KAGVC,EAHU,KAKrBjM,EADUqG,qBAAWhB,IACF/C,UAAnBtC,KAEFkM,EAAkB,SACtBC,EACAzP,GAEAuP,EAAcvP,EAAKuM,OAOrB,OAJAsE,qBAAU,WACRtB,EAAcrR,OAAOC,SAASmT,YAC7B,CAAC/B,IAEkB,UAAd,OAAJjM,QAAI,IAAJA,OAAA,EAAAA,EAAM9B,KAAK,IAEX,kBAAC6P,EAAD,KACE,kBAACE,GAAA,EAAD,CAAMC,UAAQ,EAACC,QAAQ,KACrB,kBAACF,GAAA,EAAKG,OAAN,KACE,kBAAChC,GAAA,EAAD,CAAMiC,UAAQ,EAACC,WAAS,EAAC/E,OAAK,GAC5B,kBAAC6C,GAAA,EAAKG,KAAN,CACEtD,KAAK,QACL7N,OAAuB,UAAf4Q,EACR1B,QAAS4B,EACTnD,GAAIsB,IACJZ,GAAE,QACFvO,QAAQ,SAEV,kBAACkR,GAAA,EAAKG,KAAN,CACEtD,KAAK,aACL7N,OAAuB,eAAf4Q,EACR1B,QAAS4B,EACTnD,GAAIsB,IACJZ,GAAE,eAGe,WAAd,OAAJzJ,QAAI,IAAJA,OAAA,EAAAA,EAAM9B,KAAK,KACV,kBAACkO,GAAA,EAAKG,KAAN,CACEtD,KAAK,mBACL7N,OAAuB,qBAAf4Q,EACR1B,QAAS4B,EACTnD,GAAIsB,IACJZ,GAAI,qBAIW,WAAd,OAAJzJ,QAAI,IAAJA,OAAA,EAAAA,EAAM9B,KAAK,KACV,kBAACkO,GAAA,EAAKG,KAAN,CACEtD,KAAK,qBACL7N,OAAuB,uBAAf4Q,EACR1B,QAAS4B,EACTnD,GAAIsB,IACJZ,GAAI,uBAGW,WAAd,OAAJzJ,QAAI,IAAJA,OAAA,EAAAA,EAAM9B,KAAK,KACV,kBAACkO,GAAA,EAAKG,KAAN,CACEtD,KAAK,sBACL7N,OAAuB,wBAAf4Q,EACR1B,QAAS4B,EACTnD,GAAIsB,IACJZ,GAAI,wBAKW,aAAd,OAAJzJ,QAAI,IAAJA,OAAA,EAAAA,EAAM9B,KAAK,KACV,kBAACkO,GAAA,EAAKG,KAAN,CACEtD,KAAK,sBACL7N,OAAuB,wBAAf4Q,EACR1B,QAAS4B,EACTnD,GAAIsB,IACJZ,GAAI,4BAUhB,kBAACsE,EAAD,KACE,kBAACE,GAAA,EAAD,CAAQE,QAAQ,KACd,kBAACF,GAAA,EAAKG,OAAN,KACE,kBAAChC,GAAA,EAAD,CAAMiC,UAAQ,EAACC,WAAS,EAAC/E,OAAK,GAC5B,kBAAC6C,GAAA,EAAKG,KAAN,CACEtD,KAAK,mBACL7N,OAAuB,qBAAf4Q,EACR1B,QAAS4B,EACTnD,GAAIsB,IACJZ,GAAE,mBACFvO,QAAQ,SAEL,kBAACkR,GAAA,EAAKG,KAAN,CACHtD,KAAK,oBACL7N,OAAuB,sBAAf4Q,EACR1B,QAAS4B,EACTnD,GAAIsB,IACJZ,GAAE,oBACFvO,QAAQ,4B,UCnFTkL,gBAvB4B,SAAC,GAA6B,IAA3B0G,EAA0B,EAA1BA,IAAKrG,EAAqB,EAArBA,KAAMqF,EAAe,EAAfA,SASvD,OACE,yBAAKd,MAAO,CAAEO,QAAS,gBACrB,kBAACsB,GAAA,EAAD,CACE7B,MAPkB,CACtBuD,WAAY,IAORC,cAAc,SACd1B,IAAKA,EACLrG,KAAMA,EACNmG,UAAQ,IAEV,yBAAK5B,MAjBU,CACjBC,UAAW,SACXC,YAAa,SAeSY,OC8BX1F,gBAhDS,WAItB,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,MACA,yBAAKG,UAAU,iBACb,kBAAC0H,GAAA,EAAD,CAAO1H,UAAU,IACf,kBAAC0H,GAAA,EAAKG,OAAN,CAAavH,MAAO,IAClB,kBAAC,GAAD,CACEiG,IAAI,8DACJrG,KAAK,SAEL,kBAACgI,GAAA,EAAD,cCHCrI,gBAZyB,SAAC,GAAkB,IAAhB0F,EAAe,EAAfA,SACzC,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,MACA,kBAAC3B,GAAA,EAAD,KACE,kBAAC,GAAD,MACC2B,OCAM4C,GAVK,WAChB,OACG,kBAAC,GAAD,O,8BC+EQC,GAlFgB,WAC7B,OACE,6BACJ,kBAACC,GAAA,EAAD,MAGM,kBAACC,GAAA,EAAD,CAAOrH,MAAM,QACX,kBAACqH,GAAA,EAAMhH,OAAP,KACE,kBAACgH,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,WAAP,aACA,kBAACF,GAAA,EAAME,WAAP,wBACA,kBAACF,GAAA,EAAME,WAAP,eACA,kBAACF,GAAA,EAAME,WAAP,QAIJ,kBAACF,GAAA,EAAMG,KAAP,KACE,kBAACH,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,YACA,kBAACJ,GAAA,EAAMI,KAAP,yBACA,kBAACJ,GAAA,EAAMI,KAAP,0BACA,kBAACJ,GAAA,EAAMI,KAAP,KACA,kBAAC7F,GAAA,EAAD,CAAQ3B,MAAM,SAASyH,cAAc,OAAO1F,KAAK,MAAOT,GAAIsB,IAAMZ,GAAE,oBAAe0F,gBAAYjU,QAAQ,WAGzG,kBAAC2T,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,sBACA,kBAACJ,GAAA,EAAMI,KAAP,yBACA,kBAACJ,GAAA,EAAMI,KAAP,mCACA,kBAACJ,GAAA,EAAMI,KAAP,KACE,kBAAC7F,GAAA,EAAD,CAAQ3B,MAAM,SAASyH,cAAc,OAAO1F,KAAK,MAAMT,GAAIsB,IAAMZ,GAAE,oBAAe0F,gBAAYjU,QAAQ,WAG1G,kBAAC2T,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,iBACA,kBAACJ,GAAA,EAAMI,KAAP,yBACA,kBAACJ,GAAA,EAAMI,KAAP,mCACA,kBAACJ,GAAA,EAAMI,KAAP,KACA,kBAAC7F,GAAA,EAAD,CAAQ3B,MAAM,SAASyH,cAAc,OAAO1F,KAAK,MAAOT,GAAIsB,IAAMZ,GAAE,oBAAe0F,gBAAYjU,QAAQ,WAGzG,kBAAC2T,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,iBACA,kBAACJ,GAAA,EAAMI,KAAP,qBACA,kBAACJ,GAAA,EAAMI,KAAP,8BACA,kBAACJ,GAAA,EAAMI,KAAP,KACA,kBAAC7F,GAAA,EAAD,CAAQ3B,MAAM,SAASyH,cAAc,OAAO1F,KAAK,MAAOT,GAAIsB,IAAMZ,GAAE,oBAAe0F,gBAAYjU,QAAQ,WAGzG,kBAAC2T,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,kBACA,kBAACJ,GAAA,EAAMI,KAAP,2BACA,kBAACJ,GAAA,EAAMI,KAAP,2BACA,kBAACJ,GAAA,EAAMI,KAAP,KACA,kBAAC7F,GAAA,EAAD,CAAQ3B,MAAM,SAASyH,cAAc,OAAO1F,KAAK,MAAOT,GAAIsB,IAAMZ,GAAE,oBAAe0F,gBAAYjU,QAAQ,YAI3G,kBAAC2T,GAAA,EAAMO,OAAP,KACE,kBAACP,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,WAAP,CAAkBM,QAAQ,KACxB,kBAACjD,GAAA,EAAD,CAAMkD,YAAU,GACd,kBAAClD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,IAAIS,MAAI,GACpB,kBAACmB,GAAA,EAAD,CAAM1B,KAAK,kBAEb,kBAACmD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,KAAd,KACA,kBAACqD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,KAAd,KACA,kBAACqD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,KAAd,KACA,kBAACqD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,KAAd,KACA,kBAACqD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,IAAIS,MAAI,GACpB,kBAACmB,GAAA,EAAD,CAAM1B,KAAK,qBAIjB,kBAAC4F,GAAA,EAAME,WAAP,W,qBClEGQ,GATiB,WAC5B,OACE,kBAACtF,GAAA,EAAD,CAASxC,MAAM,OAAOlB,UAAU,2BAC9B,kBAACsB,GAAA,EAAD,CAAQ3M,QAAQ,yBAChB,kBAAC2R,GAAA,EAAD,CAAOC,IAAK0C,KAAI/I,KAAK,a,UCiCdL,gBAlCQ,WACrB,OACE,kBAAC,WAAD,KACE,kBAAC6D,GAAA,EAAD,CAASxC,MAAM,OAAOlB,UAAU,2BAC9B,kBAACsB,GAAA,EAAD,CAAQ3M,QAAQ,oBAEhB,kBAACuU,GAAA,EAAD,CAAMhJ,KAAK,SACT,kBAACgJ,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKlI,MAAN,CAAYoI,MAAM,gEAClB,kBAACF,GAAA,EAAK/I,QAAN,KACE,kBAAC+I,GAAA,EAAKG,QAAN,CACE1U,QAAQ,4CACR2U,KAAK,gBAIX,6BACA,kBAACJ,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKlI,MAAN,CAAYoI,MAAM,gEAClB,kBAACF,GAAA,EAAK/I,QAAN,KACE,kBAAC+I,GAAA,EAAKG,QAAN,CACE1U,QAAQ,6CAIV,kBAACuU,GAAA,EAAK7N,KAAN,2B,qBClBCkO,GAVqB,WAChC,OACE,kBAAC7F,GAAA,EAAD,CAASxC,MAAM,QACb,kBAACI,GAAA,EAAD,CAAQ3M,QAAQ,8BAChB,kBAAC2R,GAAA,EAAD,CAAOC,IAAKiD,KAAItJ,KAAK,aCIrBsH,GAAyBP,GAAzBO,qBA+BOiC,GA9BwB,WACrC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC/B,GAAA,EAAD,CAAME,QAAQ,KACZ,kBAACF,GAAA,EAAKG,OAAN,CAAavH,MAAM,KACjB,kBAAC,GAAD,OAEF,kBAACoH,GAAA,EAAKG,OAAN,CAAavH,MAAM,KACjB,kBAAC,GAAD,QAIJ,kBAACoH,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKG,OAAN,CAAavH,MAAM,MACjB,kBAACoD,GAAA,EAAD,CAASxC,MAAM,QACb,kBAACI,GAAA,EAAD,CAAQ3M,QAAQ,oBAChB,6BACA,kBAAC,GAAD,QAGJ,kBAAC+S,GAAA,EAAKG,OAAN,CAAavH,MAAM,KACjB,kBAAC,GAAD,WC2DGT,gBA1Ee,WAC5B,IACQ6J,EADU5J,qBAAWhB,IACKE,cAA1B0K,YACR,OACE,6BACE,kBAAC,KAAD,CACE5H,SAAU,SAAC5K,GAAD,OACRwS,EAAYxS,GAAQ6K,OAAM,SAACpM,GAAD,uBACvBqM,KAAarM,OAIlBsM,OAAQ,gBACNC,EADM,EACNA,aACAC,EAFM,EAENA,WAEAE,GAJM,EAGND,YAHM,EAINC,SACAC,EALM,EAKNA,SACAC,EANM,EAMNA,qBANM,OAQN,kBAACzB,GAAA,EAAD,CAAMgB,SAAUI,EAAcvM,OAAK,GACjC,kBAACmL,GAAA,EAAK6I,MAAN,CAAYC,OAAO,SACjB,kBAAC,KAAD,CACElH,KAAK,gBACLC,UAAWvC,GACXK,YAAY,mBAIhB,kBAACK,GAAA,EAAK6I,MAAN,CAAYC,OAAO,SACjB,kBAAC,KAAD,CACElH,KAAK,QACLlC,KAAK,QACLmC,UAAWvC,GACXK,YAAY,kBAGd,kBAAC,KAAD,CACEiC,KAAK,cACLC,UAAWvC,GACXI,KAAK,QACLC,YAAY,0BAIhB,kBAACK,GAAA,EAAK6I,MAAN,CAAYC,OAAO,SACjB,kBAAC,KAAD,CACElH,KAAK,SACLC,UAAWvC,GACXK,YAAY,iBAEd,kBAAC,KAAD,CACEiC,KAAK,mBACLC,UAAWvC,GACXK,YAAY,sBAIhB,6BACA,kBAACoC,GAAA,EAAD,CACEC,SAAWT,IAAYE,GAAyBD,EAChDS,QAASZ,EACTjB,MAAM,OACNvM,QAAQ,SACRqO,OAAK,EACLC,KAAK,gBCrDJ4G,GAvBkB,WAC7B,OACE,kBAAC,GAAD,KAEE,kBAACnC,GAAA,EAAD,CAAME,QAAQ,KACZ,kBAACF,GAAA,EAAKG,OAAN,CAAavH,MAAM,KACjB,kBAACoD,GAAA,EAAD,KACE,kBAACpC,GAAA,EAAD,CAAQ3M,QAAQ,mBAChB,kBAAC,GAAD,QAIJ,kBAAC+S,GAAA,EAAKG,OAAN,CAAavH,MAAM,KACjB,kBAACoD,GAAA,EAAD,KACE,kBAACpC,GAAA,EAAD,CAAQ3M,QAAQ,qBAChB,kBAAC,GAAD,WCMCmV,GAvB0B,SAAC,GAAe,EAAdpL,SACvC,OACE,6BAGA,kBAACwJ,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK5G,OAAN,cACA,kBAAC4G,GAAA,EAAK6B,YAAN,0BACA,kBAAC7B,GAAA,EAAK5G,OAAN,qBACA,kBAAC4G,GAAA,EAAK6B,YAAN,oBACA,kBAAC7B,GAAA,EAAK5G,OAAN,oBACA,kBAAC4G,GAAA,EAAK6B,YAAN,yBACA,kBAAC7B,GAAA,EAAK5G,OAAN,YACA,kBAAC4G,GAAA,EAAK6B,YAAN,0B,qBCZOC,GAJO,WACpB,OAAO,kBAAC1D,GAAA,EAAD,CAAOC,IAAK0D,KAAK/J,KAAK,WCsIhBgK,GAtIS,WACtB,OACE,kBAACxG,GAAA,EAAD,KACE,kBAACpC,GAAA,EAAD,CAAQ3M,QAAQ,qBAAqB6N,GAAG,OAExC,kBAAC8F,GAAA,EAAD,CAAOrH,MAAM,OAAOjB,UAAU,yBAAyB4H,QAAQ,KAC7D,kBAACU,GAAA,EAAMhH,OAAP,KACE,kBAACgH,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,WAAP,aACA,kBAACF,GAAA,EAAME,WAAP,QAGJ,kBAACF,GAAA,EAAMG,KAAP,KACE,kBAACH,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,gBACA,kBAACJ,GAAA,EAAMI,KAAP,KACE,kBAAC7F,GAAA,EAAD,CACI3B,MAAM,SACRsB,GAAIsB,IACJb,KAAK,MACL0F,cAAc,OACdzF,GAAE,oBAAe0F,gBACjBjU,QAAQ,WAId,kBAAC2T,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,uBACA,kBAACJ,GAAA,EAAMI,KAAP,KACA,kBAAC7F,GAAA,EAAD,CACM3B,MAAM,SACRsB,GAAIsB,IACJb,KAAK,MACL0F,cAAc,OACdzF,GAAE,oBAAe0F,gBACjBjU,QAAQ,WAId,kBAAC2T,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,0BAEA,kBAACJ,GAAA,EAAMI,KAAP,KACA,kBAAC7F,GAAA,EAAD,CACM3B,MAAM,SACRsB,GAAIsB,IACJb,KAAK,MACL0F,cAAc,OACdzF,GAAE,oBAAe0F,gBACjBjU,QAAQ,WAId,kBAAC2T,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,sBAEA,kBAACJ,GAAA,EAAMI,KAAP,KACA,kBAAC7F,GAAA,EAAD,CACM3B,MAAM,SACRsB,GAAIsB,IACJb,KAAK,MACL0F,cAAc,OACdzF,GAAE,oBAAe0F,gBACjBjU,QAAQ,WAId,kBAAC2T,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,wBAEA,kBAACJ,GAAA,EAAMI,KAAP,KACA,kBAAC7F,GAAA,EAAD,CACM3B,MAAM,SACRsB,GAAIsB,IACJb,KAAK,MACL0F,cAAc,OACdzF,GAAE,oBAAe0F,gBACjBjU,QAAQ,WAId,kBAAC2T,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,wBAEA,kBAACJ,GAAA,EAAMI,KAAP,KACA,kBAAC7F,GAAA,EAAD,CACM3B,MAAM,SACRsB,GAAIsB,IACJb,KAAK,MACL0F,cAAc,OACdzF,GAAE,oBAAe0F,gBACjBjU,QAAQ,WAId,kBAAC2T,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,wBAEA,kBAACJ,GAAA,EAAMI,KAAP,KACA,kBAAC7F,GAAA,EAAD,CACI3B,MAAM,SACNsB,GAAIsB,IACJb,KAAK,MACL0F,cAAc,OACdzF,GAAE,oBAAe0F,gBACjBjU,QAAQ,YAKhB,kBAAC2T,GAAA,EAAMO,OAAP,KACE,kBAACP,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,WAAP,CAAkBM,QAAQ,KACxB,kBAACjD,GAAA,EAAD,CAAMkD,YAAU,GACd,kBAAClD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,IAAIS,MAAI,GACpB,kBAACmB,GAAA,EAAD,CAAM1B,KAAK,kBAEb,kBAACmD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,KAAd,KACA,kBAACqD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,KAAd,KACA,kBAACqD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,KAAd,KACA,kBAACqD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,KAAd,KACA,kBAACqD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,IAAIS,MAAI,GACpB,kBAACmB,GAAA,EAAD,CAAM1B,KAAK,qBAIjB,kBAAC4F,GAAA,EAAME,WAAP,W,8BCxHN2B,GAAiB,CACrBC,OAAQ,aACRC,YAAa,OACbvF,aAAc,MACdwF,WAAY,MACZ7H,UAAW,SACX8H,OAAQ,SAGJC,GAAiB,CACrBH,YAAa,SAwCAI,GArCwB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEhCC,EADU7K,qBAAWhB,IACSI,cAA9ByL,gBAEFC,EAASC,uBACb,SAACC,GACC,IAAMxP,EAAOwP,EAAcb,KAAI,SAAC3O,GAAD,OAC7ByP,OAAOC,OAAO1P,EAAM,CAAE2P,QAASC,IAAIC,gBAAgB7P,QAGrDqP,EAAgBG,GAEhBJ,EAASpP,KAEX,CAACoP,IAdoD,EAqBnDU,aAAY,CAAER,SAAQS,OAAO,gBAJ/BC,EAjBqD,EAiBrDA,aACAC,EAlBqD,EAkBrDA,cACAC,EAnBqD,EAmBrDA,aAnBqD,EAoBrDV,cAGF,OACE,yCACMQ,IADN,CAEE7G,MACE+G,EAAY,6BAAQrB,IAAmBK,IAAmBL,KAG5D,0BAAYoB,KACZ,kBAACnH,GAAA,EAAD,CAAM1B,KAAK,eAAexC,KAAK,SAC/B,kBAACoB,GAAA,EAAD,CAAQ3M,QAAQ,kBCDP8W,GA/CQ,WAAO,IAAD,EACDjG,mBAAkB,IADjB,oBACpBkG,EADoB,KACbhB,EADa,KAE3B,OACE,6BACE,kBAAChH,GAAA,EAAD,KACE,kBAACpC,GAAA,EAAD,CAAQ3M,QAAQ,kBAAkB6N,GAAG,OAyBrC,kBAAC,GAAD,CAAckI,SAAUA,KAGR,IAAjBgB,EAAMC,QACL,kBAACjI,GAAA,EAAD,KACE,kBAAC,KAAD,CACE9M,IAAK8U,EAAM,GAAGT,QACd3K,MAAM,OACNiK,OAAO,QACPlF,SAAS,gBCDNuG,GAnCM,WACnB,OACE,kBAAC,GAAD,KACE,yBAAK5L,UAAU,2BACb,sCAEF,kBAAC0D,GAAA,EAAD,CAAS1D,UAAU,8BACjB,kBAAC0H,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKG,OAAN,CAAavH,MAAM,KACjB,kBAAC,GAAD,OAGF,kBAACoH,GAAA,EAAKG,OAAN,CAAavH,MAAM,KACjB,kBAAC,GAAD,SAKN,kBAACoH,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKG,OAAN,CAAavH,MAAM,KACjB,kBAAC,GAAD,OAEF,kBAACoH,GAAA,EAAKG,OAAN,CAAavH,MAAM,KAMjB,kBAAC,GAAD,U,UCJKuL,GA1BuB,SAAC,GAOhC,IANLxL,EAMI,EANJA,MACAC,EAKI,EALJA,MACAwL,EAII,EAJJA,QACA/I,EAGI,EAHJA,QACAtC,EAEI,EAFJA,YAEI,IADJG,KAAQC,EACJ,EADIA,QAASlL,EACb,EADaA,MAEjB,OACE,kBAACmL,GAAA,EAAKC,MAAN,CAAYpL,MAAOkL,KAAalL,EAAO2K,MAAOA,GAC5C,kBAACyL,GAAA,EAAD,CACAhJ,QAASA,EACPiJ,MAAO3L,EAAM2L,MACbC,SAAU,SAACC,EAAG/V,GAAJ,OAAakK,EAAM4L,SAAS9V,EAAK6V,QAC3CvL,YAAaA,EACbqL,QAASA,IAEVjL,GAAWlL,GACV,kBAACqL,GAAA,EAAD,CAAOC,OAAK,EAACC,MAAM,OAChBvL,KCnBH6R,GAAyBP,GAAzBO,qBAkCO3H,gBAhCwB,SAAC,GAAkB,IAAhB0F,EAAe,EAAfA,SACxC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACmC,GAAA,EAAD,CAAME,QAAQ,KACZ,kBAACF,GAAA,EAAKG,OAAN,CAAavH,MAAM,MAChBiF,GAKH,kBAACmC,GAAA,EAAKG,OAAN,CAAavH,MAAM,IAAIN,UAAU,uBAC/B,kBAAC0D,GAAA,EAAD,KACE,kBAACpC,GAAA,EAAD,CAAQkB,GAAG,KAAK7N,QAAQ,WACxB,kBAACkO,GAAA,EAAD,CACEI,KAAK,OACL/B,MAAM,QACNyH,cAAc,OACdnG,GAAIsB,IACJZ,GAAG,YACHF,OAAK,EACLrO,QAAQ,gBCFlB6M,GAAWC,6BAAkB,CACjClK,MAAOmK,sBAAW,SAClB/J,KAAM+J,sBAAW,QAEjBlK,UAAWkK,sBAAW,cACtBjK,SAAUiK,sBAAW,aACrByK,OAAQzK,sBAAW,UACnBpK,aAAcoK,sBAAW,cAEzByB,YAAaC,6BACX1B,cACA2B,wBAAa,QAAS,SAFXD,CAGX,kBAGEgJ,GAAmB3K,6BAAkB,IAsJ5B5B,gBAnJuB,SAACqE,GAErC,IAAM3K,EAAYuG,qBAAWhB,IAFuB,EAMhDvF,EAAU2F,cAFZmN,EAJkD,EAIlDA,sBACA7Q,EALkD,EAKlDA,UAGAkC,EACEnE,EAAUkG,YADZ/B,eARkD,EAgBhDnE,EAAUmG,YAhBsC,KAYlD4M,cAZkD,EAalDtO,gBAbkD,EAclDuO,mBAdkD,EAelDtO,sBAOE1E,EAAUgG,YAtBsC,KAkBlDrC,QAlBkD,EAmBlDsP,iBAnBkD,EAoBlDC,iBApBkD,EAqBlDrP,aAGoDoI,oBAAS,IAxBX,oBAwB7CkH,EAxB6C,aAyBZlH,oBAAS,IAzBG,oBAyB7CmH,EAzB6C,KAyB/BC,EAzB+B,OA0BxBpH,mBAAS,IA1Be,oBA0B7CqH,EA1B6C,KA0BrCC,EA1BqC,KA4B5CtY,EAAU0P,EAAV1P,MACFuY,EAAWvY,EAAMwY,OAAjBD,OACAE,EAASzY,EAATyY,KAWN,OATAjG,qBAAU,WACJiG,EAAKC,SAAS,iBAAiBJ,EAAU,eAEzCG,EAAKC,SAAS,eAChBN,GAAgB,GAChBE,EAAU,cACLA,EAAU,cAChB,CAACC,EAAQD,EAAWG,IAGrB,kBAAC,GAAD,KACE,kBAACvJ,GAAA,EAAD,KACE,kBAAC,KAAD,CACE5B,SAAU,SAAC5K,GAAD,OACRmV,EAAsBnV,GAAQ6K,OAAM,SAACpM,GAAD,uBACjCqM,KAAarM,OAGlB6L,SAAUmL,EAAeP,GAAmB5K,GAC5CS,OAAQ,gBACNC,EADM,EACNA,aACAC,EAFM,EAENA,WAEAE,GAJM,EAGND,YAHM,EAINC,SACAC,EALM,EAKNA,SACAC,EANM,EAMNA,qBANM,OAQN,kBAACzB,GAAA,EAAD,CAAMgB,SAAUI,EAAcvM,OAAK,GACjC,kBAAC2L,GAAA,EAAD,CAAQkB,GAAG,KAAK7N,QAASkY,IAEzB,kBAACvL,GAAA,EAAD,CAAQkB,GAAG,KAAK7N,QAAQ,iBAExB,kBAACmM,GAAA,EAAK6I,MAAN,CAAYC,OAAO,SACjB,kBAAC,KAAD,CACElH,KAAK,YACLC,UAAWvC,GACXK,YAAY,aACZF,SAAUoM,IAEZ,kBAAC,KAAD,CACEjK,KAAK,WACLC,UAAWvC,GACXK,YAAY,YACZF,SAAUoM,KAId,kBAAC7L,GAAA,EAAK6I,MAAN,CAAYC,OAAO,SACjB,kBAAC,KAAD,CACElH,KAAK,QACLlC,KAAK,QACLmC,UAAWvC,GACXK,YAAY,gBACZF,SAAUoM,IAGZ,kBAAC,KAAD,CACEjK,KAAK,cACLC,UAAWvC,GACXI,KAAK,QACLC,YAAY,uBACZF,SAAUoM,KAId,kBAAC7L,GAAA,EAAK6I,MAAN,CAAYC,OAAO,SACjB,kBAAC,KAAD,CACElH,KAAK,OACLC,UAAWkJ,GACXpL,YAAY,OACZqL,QAAStQ,EACT+E,SAAUoM,IAGZ,kBAAC,KAAD,CACE3M,UAC4B,IAA1BtC,EAAeiO,OAAe,uBAAyB,GAEzDjJ,KAAK,eACLC,UAAWkJ,GACXpL,YAAY,aACZqC,SAAoC,IAA1BpF,EAAeiO,OACzB5I,QAAS2J,EACTZ,QAASpO,EACT6C,SAAUoM,KAId,6BACCA,EACC,kBAAC9J,GAAA,EAAD,CACEkB,QAAS,kBAAM3N,GAAQkO,UACvBC,SAAO,EACP5P,QAAQ,SACRqO,OAAK,EACLC,KAAK,eAGP,kBAACJ,GAAA,EAAD,CACEC,SAAWT,IAAYE,GAAyBD,EAChDS,QAASZ,EACTjB,MAAM,OACNvM,QAAQ,SACRqO,OAAK,EACLC,KAAK,iBC3BRkK,GAvJG,WACd,OACE,kBAACzJ,GAAA,EAAD,KACE,kBAACpC,GAAA,EAAD,CAAS3M,QAAQ,cACjB,kBAAC0T,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CACErH,MAAM,OACNmM,SAAO,EACPpN,UAAU,YACV4H,QAAQ,KAER,kBAACU,GAAA,EAAMhH,OAAP,KACE,kBAACgH,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,WAAP,CAAkB7T,QAAQ,SAC1B,kBAAC2T,GAAA,EAAME,WAAP,CAAkB7T,QAAQ,UAC1B,kBAAC2T,GAAA,EAAME,WAAP,CAAkB7T,QAAQ,SAC1B,kBAAC2T,GAAA,EAAME,WAAP,QAGJ,kBAACF,GAAA,EAAMG,KAAP,KACE,kBAACH,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,CAAY/T,QAAQ,kBACpB,kBAAC2T,GAAA,EAAMI,KAAP,CAAY/T,QAAQ,2BACpB,kBAAC2T,GAAA,EAAMI,KAAP,CAAY/T,QAAQ,UACpB,kBAAC2T,GAAA,EAAMI,KAAP,CAAY1I,UAAU,WACpB,kBAAC6C,GAAA,EAAD,CACE3B,MAAM,SACNsB,GAAIsB,IACJZ,GAAE,qBAAgB0F,gBAClB3F,KAAK,QAGP,kBAACJ,GAAA,EAAD,CACEI,KAAK,OACLsB,SAAO,EACP/B,GAAIsB,IACJZ,GAAE,uBAAkB0F,kBAEtB,kBAAC/F,GAAA,EAAD,CACEI,KAAK,QACL/B,MAAM,MACNsB,GAAIsB,IACJZ,GAAE,uBAAkB0F,oBAK1B,kBAACN,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,CAAY/T,QAAQ,mBACpB,kBAAC2T,GAAA,EAAMI,KAAP,CAAY/T,QAAQ,qBACpB,kBAAC2T,GAAA,EAAMI,KAAP,CAAY/T,QAAQ,SACpB,kBAAC2T,GAAA,EAAMI,KAAP,CAAY1I,UAAU,WACtB,kBAAC6C,GAAA,EAAD,CACI3B,MAAM,SACNsB,GAAIsB,IACJZ,GAAE,qBAAgB0F,gBAClB3F,KAAK,QAGP,kBAACJ,GAAA,EAAD,CACEI,KAAK,OACLsB,SAAO,EACP/B,GAAIsB,IACJZ,GAAE,uBAAkB0F,kBAEtB,kBAAC/F,GAAA,EAAD,CACEI,KAAK,QACL/B,MAAM,MACNsB,GAAIsB,IACJZ,GAAE,uBAAkB0F,oBAI1B,kBAACN,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,CAAY/T,QAAQ,kBACpB,kBAAC2T,GAAA,EAAMI,KAAP,CAAY/T,QAAQ,yBACpB,kBAAC2T,GAAA,EAAMI,KAAP,CAAY/T,QAAQ,YACpB,kBAAC2T,GAAA,EAAMI,KAAP,CAAY1I,UAAU,WACtB,kBAAC6C,GAAA,EAAD,CACI3B,MAAM,SACNsB,GAAIsB,IACJZ,GAAE,qBAAgB0F,gBAClB3F,KAAK,QAGP,kBAACJ,GAAA,EAAD,CACEI,KAAK,OACLsB,SAAO,EACP/B,GAAIsB,IACJZ,GAAE,uBAAkB0F,kBAEtB,kBAAC/F,GAAA,EAAD,CACEI,KAAK,QACL/B,MAAM,MACNsB,GAAIsB,IACJZ,GAAE,uBAAkB0F,oBAI1B,kBAACN,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAMI,KAAP,CAAY/T,QAAQ,iBACpB,kBAAC2T,GAAA,EAAMI,KAAP,CAAY/T,QAAQ,0BACpB,kBAAC2T,GAAA,EAAMI,KAAP,CAAY/T,QAAQ,SACpB,kBAAC2T,GAAA,EAAMI,KAAP,CAAY1I,UAAU,WACrB,kBAAC6C,GAAA,EAAD,CACG3B,MAAM,SACNsB,GAAIsB,IACJZ,GAAE,qBAAgB0F,gBAClB3F,KAAK,QAGP,kBAACJ,GAAA,EAAD,CACEI,KAAK,OACLsB,SAAO,EACP/B,GAAIsB,IACJZ,GAAE,uBAAkB0F,kBAEtB,kBAAC/F,GAAA,EAAD,CACEI,KAAK,QACL/B,MAAM,MACNsB,GAAIsB,IACJZ,GAAE,uBAAkB0F,qBAM5B,kBAACN,GAAA,EAAMO,OAAP,KACE,kBAACP,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,WAAP,CAAkBM,QAAQ,KACxB,kBAACjD,GAAA,EAAD,CAAMkD,YAAU,GACd,kBAAClD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,IAAIS,MAAI,GACpB,kBAACmB,GAAA,EAAD,CAAM1B,KAAK,kBAEb,kBAACmD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,KAAd,KACA,kBAACqD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,KAAd,KACA,kBAACqD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,KAAd,KACA,kBAACqD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,KAAd,KACA,kBAACqD,GAAA,EAAKG,KAAN,CAAWxD,GAAG,IAAIS,MAAI,GACpB,kBAACmB,GAAA,EAAD,CAAM1B,KAAK,qBAIjB,kBAAC4F,GAAA,EAAME,WAAP,WCnIC3I,gBAXK,WAClB,OACE,kBAAC,GAAD,KACE,6BAEE,kBAAC,GAAD,WCwFOwN,eAAWxN,aAjEJ,WACpB,IAAMtG,EAAYuG,qBAAWhB,IADH,EAEiBvF,EAAUW,YAA7C5E,EAFkB,EAElBA,MAAOgY,EAFW,EAEXA,aAAc5S,EAFH,EAEGA,UACrBsB,EAAYzC,EAAUwC,UAAtBC,QAUR,OARAgL,qBAAU,WACJ1R,EACF0G,IAAUuR,SAAQ,kBAAMD,OAExBA,MAED,CAACtR,EAASsR,EAAchY,IAEtBoF,EAEH,kBAAC,WAAD,KACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8S,OAAK,EAACP,KAAK,IAAItK,UAAW8K,KACjC,kBAAC,GAAD,CAAgBR,KAAK,sBAAsBtK,UAAWkE,KACtD,kBAAC,GAAD,CAAgBoG,KAAK,sBAAsBtK,UAAWkE,KACtD,kBAAC,GAAD,CAAgBoG,KAAK,mBAAmBtK,UAAW8G,KACnD,kBAAC,GAAD,CAAgBwD,KAAK,kBAAkBtK,UAAWwF,KAClD,kBAAC,GAAD,CAAgB8E,KAAK,qBAAqBtK,UAAW8G,KACrD,kBAAC,GAAD,CAAgBwD,KAAK,mBAAmBtK,UAAWkH,KACnD,kBAAC,GAAD,CACEoD,KAAK,wBACLtK,UAAWiJ,KAEb,kBAAC,GAAD,CAAgBqB,KAAK,eAAetK,UAAW+K,KAC/C,kBAAC,GAAD,CACET,KAAK,YACLtK,UAAWgL,KAEb,kBAAC,GAAD,CACEV,KAAK,uBACLtK,UAAWgL,KAEX,kBAAC,GAAD,CACAV,KAAK,qBACLtK,UAAWgL,KAEb,kBAAC,IAAD,CAAOV,KAAK,yBAAyBtK,UAAWmH,KAChD,kBAAC,IAAD,CAAOmD,KAAK,IAAItK,UAAWwB,QA/BZ,kBAAC,EAAD,CAAgBxP,QAAQ,mBCrChDiZ,MAEM,IAAMxX,GAAUyX,cACvBC,IAAS7L,OACP,kBAAC,IAAD,CAAQ7L,QAASA,IAIb,kBAAC,GAAD,OAGJ2X,SAASC,eAAe,S5DsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrX,MAAK,SAAAsX,GACJA,EAAaC,gBAEdtM,OAAM,SAAApM,GACLqE,QAAQrE,MAAMA,EAAMK,c","file":"static/js/main.a7875f7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/g1.1534633c.png\";","module.exports = __webpack_public_path__ + \"static/media/g2.696fa322.png\";","module.exports = __webpack_public_path__ + \"static/media/map.6127d781.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\nconst LoadingSpinner: React.FC<{ inverted?: boolean; content?: string }> = ({\r\n  inverted = true,\r\n  content\r\n}) => {\r\n  return (\r\n\r\n    <Dimmer active inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;","import axios, { AxiosResponse } from \"axios\";\r\nimport { IUser, IUserFormValues, IRole } from \"../models/usersModels/user\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  IEmployeeFormValues,\r\n  IEmployeeData,\r\n  IDepartment,\r\n  IEmployeeDetails,\r\n  IAddEmployeeValues,\r\n  IDocuments,\r\n} from \"../models/employeeModels/employee\";\r\nimport { IAddSubmitCompany, ICompany } from \"../models/companyModels/ICompany\";\r\nimport { IOffice, IOfficeList } from \"../models/companyModels/IOffices\";\r\nimport {\r\n  IJobTitle,\r\n  IJobTitleItemList,\r\n  ISchedulePolicy,\r\n  ISchedulePolicyItemList,\r\n} from \"../models/commonModels/companyPolicies\";\r\nimport { ILeaves, ILeavesRequest } from \"../models/employeeModels/leaves\";\r\nimport { ICustomer } from \"../models/customerModels/customer\";\r\n// default\r\naxios.defaults.baseURL = \"http://localhost:5000/api\";\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(undefined, (error) => {\r\n  if (error.message === \"Network Error\" && !error.response) {\r\n    toast.error(\"Network error - make sure API is running!\");\r\n  }\r\n  const { status, data, config, headers } = error.response;\r\n  if (status === 404) {\r\n    history.push(\"/ups\");\r\n  }\r\n  if (\r\n    status === 401 &&\r\n    headers[\"www-authenticate\"] ===\r\n      'Bearer error=\"invalid_token\", error_description=\"The token is expired\"'\r\n  ) {\r\n    window.localStorage.removeItem(\"jwt\");\r\n    history.push(\"/\");\r\n    toast.info(\"Your session has expired, please login again\");\r\n  }\r\n  if (\r\n    status === 400 &&\r\n    config.method === \"get\" &&\r\n    data.errors.hasOwnProperty(\"id\")\r\n  ) {\r\n    history.push(\"/ups\");\r\n  }\r\n  if (status === 500) {\r\n    toast.error(\"Server error - check the terminal for more info!\");\r\n  }\r\n  throw error.response;\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\n/**\r\n * only manager will be abe to see the employees docs and personal information\r\n * maybe department manager wont be able to see bank details - need to discuss this\r\n *\r\n * */\r\n\r\nconst request = {\r\n  get: (url: string) => axios.get(url).then(responseBody),\r\n  post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n  put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n  delete: (url: string) => axios.delete(url).then(responseBody),\r\n  employeeForm: (url: string, values: IAddEmployeeValues) => {\r\n    var formData = new FormData();\r\n    formData.append(\"departmentId\", values.departmentId);\r\n    formData.append(\"email\", values.email);\r\n    formData.append(\"firstName\", values.firstName);\r\n    formData.append(\"lastName\", values.lastName);\r\n    formData.append(\"reportsTo\", values.reportsTo);\r\n    formData.append(\"role\", values.role);\r\n    formData.append(\"salary\", values.salary.toString());\r\n    formData.append(\"schedulePolicy\", values.schedulePolicy);\r\n    //formData.append(\"startingDate\", values.startingDate.toString());\r\n    formData.append(\"title\", values.title);\r\n    formData.append(\"contractDoc\", values.contractDoc[0]);\r\n\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { \"Content-type\": \"multipart/form-data\" },\r\n      })\r\n      .then(responseBody);\r\n  },\r\n};\r\n\r\n// all the methods to support the user functionality\r\nconst user = {\r\n  Current: (): Promise<IUser> => request.get(\"/user/current-user\"),\r\n  login: (data: IUserFormValues): Promise<IUser> =>\r\n    request.post(\"/user/login\", data),\r\n  register: (data: IUserFormValues) => request.post(\"/account/register\", data),\r\n  //retrieve docs\r\n  //submit docs\r\n  //remove doc\r\n};\r\n\r\n//load non basic users - admin & managers\r\nconst nonBasicUsers = {\r\n  list: (companyId: string): Promise<IUser[]> =>\r\n    request.get(`system/get-non-basic-users/${companyId}`),\r\n};\r\n\r\nconst employee = {\r\n  getDetails: (employeeId: string): Promise<IEmployeeData> =>\r\n    request.get(`/employee/get-details/${employeeId}`),\r\n  create: (data: IAddEmployeeValues) =>\r\n    request.employeeForm(\"/employee/add-employee\", data),\r\n  update: (employeeId: string, data: IEmployeeFormValues) =>\r\n    request.put(`/employee/update-employee/${employeeId}`, data),\r\n  search: (data: string): Promise<IEmployeeFormValues[]> =>\r\n    request.get(`/employee/search/${data}`),\r\n};\r\n\r\nconst department = {\r\n  create: (data: IDepartment) => request.post(`/admin/add-department/`, data),\r\n  find: (departmentId: string): Promise<IDepartment> =>\r\n    request.get(`/managerProfile/department/${departmentId}`),\r\n  update: (departmentId: string, data: IOffice) =>\r\n    request.put(`/admin/update-department-details/${departmentId}`, data),\r\n  findAll: (officeId: string): Promise<IDepartment[]> =>\r\n    request.get(`/system/get-departments-by-office/${officeId}`),\r\n};\r\n\r\nconst office = {\r\n  create: (data: IOffice) => request.post(\"/admin/add-office\", data),\r\n  update: (officeId: string, data: IOffice) =>\r\n    request.put(`/admin/update-office-details/${officeId}`, data),\r\n  find: (officeId: string): Promise<IOffice[]> =>\r\n    request.get(`/admin/get-office-details/${officeId}`),\r\n  getAll: (employeeID: string): Promise<IOfficeList[]> =>\r\n    request.get(`/system/get-offices/${employeeID}`),\r\n};\r\n\r\nconst company = {\r\n  create: (data: IAddSubmitCompany) =>\r\n    request.post(\"/company/add-company\", data),\r\n  find: (employeeId: string): Promise<ICompany> =>\r\n    request.get(`/admin/get-company-details/${employeeId}`),\r\n  listEmployees: (companyId: string): Promise<IEmployeeDetails[]> =>\r\n    request.get(`/admin/get-company-employees/${companyId}`),\r\n};\r\n\r\nconst search = {\r\n  employee: (query: string, companyId: string): Promise<IEmployeeDetails[]> =>\r\n    request.get(`/search/search-employee/${companyId}/${query}`),\r\n};\r\n\r\nconst schedulePolicy = {\r\n  create: (data: any): Promise<AxiosResponse> =>\r\n    request.post(`/system/create-schedule-policy`, data),\r\n  update: (schedulePolicyId: string, data: any): Promise<AxiosResponse> =>\r\n    request.put(`/system/create-schedule-titles/${schedulePolicyId}`, data),\r\n  get: (jobTitleId: string): Promise<ISchedulePolicy> =>\r\n    request.get(`/system/get-job-titles/${jobTitleId}`),\r\n  list: (companyId: string): Promise<ISchedulePolicyItemList[]> =>\r\n    request.get(`/system/list-schedule-policy/${companyId}`),\r\n};\r\n\r\nconst jobTitle = {\r\n  create: (data: any): Promise<AxiosResponse> =>\r\n    request.post(`/system/create-job-titles`, data),\r\n  edit: (jobTitleId: string, data: IJobTitle): Promise<AxiosResponse> =>\r\n    request.put(`/system/create-job-titles/${jobTitleId}`, data),\r\n  list: (companyId: string): Promise<IJobTitleItemList[]> =>\r\n    request.get(`/system/list-job-titles/${companyId}`),\r\n  get: (jobTitleId: string): Promise<IJobTitle> =>\r\n    request.get(`/system/get-job-titles/${jobTitleId}`),\r\n};\r\n\r\nconst expenseClaim = {};\r\n\r\nconst leaves = {\r\n  request: (data: ILeavesRequest): Promise<AxiosResponse> =>\r\n    request.post(\"/employee/leave-request\", data),\r\n  list: (employeeId: string): Promise<ILeaves> =>\r\n    request.get(`/employee/get-leaves-data/${employeeId}`),\r\n};\r\n\r\nconst roles = {\r\n  list: (): Promise<IRole[]> => request.get(\"/system/get-roles\"),\r\n};\r\n\r\nconst customer = {\r\n  create: (data: ICustomer): Promise<AxiosResponse> =>\r\n    request.post(`/customer/crate-customer`, data),\r\n  update: (customerId: string, data: ICompany): Promise<AxiosResponse> =>\r\n    request.put(`/customer/update-customer-details/${customerId}`, data),\r\n  list: (companyId: string): Promise<ICustomer[]> =>\r\n    request.get(`/customer/list-customers/${companyId}`),\r\n  // customer documents\r\n  listCustomerDocs: (customerId: string): Promise<IDocuments[]> =>\r\n    request.get(`/customer/list-customers-documents/${customerId}`),\r\n\r\n};\r\n\r\nexport default {\r\n  customer,\r\n  expenseClaim,\r\n  leaves,\r\n  employee,\r\n  jobTitle,\r\n  schedulePolicy,\r\n  user,\r\n  company,\r\n  department,\r\n  office,\r\n  search,\r\n  roles,\r\n  nonBasicUsers,\r\n};\r\n","import { observable, computed, action, runInAction } from \"mobx\";\r\nimport { IUser, IUserFormValues } from \"../models/usersModels/user\";\r\nimport agents from \"../API/agents\";\r\nimport { RootStore } from \"./rootStore\";\r\nimport { history } from \"../..\";\r\nimport { IRegisterFormValues } from \"../models/companyModels/company\";\r\n\r\nexport default class UserStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable user: IUser | null = null;\r\n\r\n  @computed get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  @action Login = async (values: IUserFormValues) => {\r\n    try {\r\n      const user = await agents.user.login(values);\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n      console.log(\"user after login: \", this.user);\r\n\r\n      this.rootStore.commonStore.setToken(user.token);\r\n      this.rootStore.modalStore.closeModal();\r\n\r\n\r\n \r\n        history.push(`/${this.user?.role[0].toLowerCase()}/dashboard/`);\r\n\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  @action register = async (values: IRegisterFormValues) => {\r\n    try { \r\n      const user = await agents.user.register(values);\r\n      //this.rootStore.commonStore.setToken(user.token);\r\n      this.rootStore.modalStore.closeModal();\r\n      // history.push(\"/dashboard\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  @action getUser = async () => {\r\n    try {\r\n      const user = await agents.user.Current();\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  @action logout = () => {\r\n    this.rootStore.commonStore.setToken(null);\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n}\r\n","import {RootStore} from './rootStore';\r\nimport { observable, action, reaction } from 'mobx';\r\n\r\nexport default class CommonStore {\r\n    rootStore: RootStore;\r\n    constructor(rootStore: RootStore) {\r\n        this.rootStore = rootStore;\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt', token);\r\n                } else {\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    @observable token: string | null = window.localStorage.getItem('jwt');\r\n    @observable appLoaded = false;\r\n\r\n    @action setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    @action setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { RootStore } from \"./rootStore\";\r\nimport { observable, action } from \"mobx\";\r\n\r\nexport default class ModalStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable.shallow modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  @action openModal = (content: any) => {\r\n    this.modal.body = content;\r\n    this.modal.open = true;\r\n  };\r\n\r\n  @action closeModal = () => {\r\n    this.modal.body = null;\r\n    this.modal.open = false;\r\n  };\r\n\r\n\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction } from \"mobx\";\r\n\r\nexport default class MenuBarStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n  @observable sideMenuVisible: boolean = false;\r\n  @observable searchBarVisible: boolean = true;\r\n  @observable employeeMenuItemVis: boolean = false;\r\n\r\n  @action toggleSideMenu = async () =>\r\n    runInAction(() => (this.sideMenuVisible = !this.sideMenuVisible));\r\n\r\n\r\n    @action toggleEmployeeMenuItem = async () =>\r\n    runInAction(() => (this.employeeMenuItemVis = !this.employeeMenuItemVis));\r\n\r\n\r\n\r\n  @action autoToggleSideMenu = async (screenSize: number) => {\r\n    if (screenSize < 700) {\r\n      runInAction(() => (this.searchBarVisible = false));\r\n      runInAction(() => (this.sideMenuVisible = true));\r\n    } else {\r\n      runInAction(() => (this.sideMenuVisible = false));\r\n      runInAction(() => (this.searchBarVisible = true));\r\n    }\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction } from \"mobx\";\r\nimport {\r\n  IEmployeeFormValues,\r\n  EmployeeFormValues,\r\n  IAddEmployeeValues,\r\n} from \"../models/employeeModels/employee\";\r\nimport agents from \"../API/agents\";\r\nimport { IRole } from \"../models/usersModels/user\";\r\n\r\nexport default class EmployeeStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable tabIndex: string = \"0\";\r\n  @observable stackButtons: boolean = false;\r\n  @observable userRoles: IRole[] = [];\r\n  @observable contractFile: Blob[] = [];\r\n  @observable startDate: Date = new Date();\r\n\r\n  @observable employee: EmployeeFormValues | null = null;\r\n\r\n  @action setContractFile = async (file: any) => {\r\n    this.contractFile = file;\r\n  };\r\n\r\n  @action loadUserRole = async () => {\r\n    try {\r\n      const data = await agents.roles.list();\r\n\r\n      if (data)\r\n        runInAction(() => {\r\n          this.userRoles = data;\r\n        });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  @action SetStartDate = async (newDate: Date) => {\r\n    runInAction(() => {\r\n      this.startDate = newDate;\r\n    });\r\n  };\r\n  @action loadMyData = async (employeeID: string) => {\r\n    try {\r\n      let employee: any = await agents.employee.getDetails(employeeID);\r\n      if (employee)\r\n        runInAction(() => {\r\n          this.employee = employee;\r\n        });\r\n      return employee;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  @action ChangeTab = async (tabSelected: string) => {\r\n    runInAction(() => {\r\n      this.tabIndex = tabSelected;\r\n    });\r\n  };\r\n  @action UpdateEmployeeDetails = async (\r\n    employeeId: string,\r\n    formValues: IEmployeeFormValues\r\n  ) => {\r\n    try {\r\n      const result = await agents.employee.update(employeeId, formValues);\r\n      if (result) this.rootStore.userStore.getUser();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  @action SubmitEmployeeDetails = async (data: IAddEmployeeValues) => {\r\n    try {\r\n\r\n\r\n\r\n\r\n      data.contractDoc = this.contractFile;\r\n\r\n      console.log(data);\r\n\r\n     await agents.employee.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { action, runInAction, observable } from \"mobx\";\r\nimport agents from \"../API/agents\";\r\nimport {\r\n  IAddFormDataCompany,\r\n  IAddSubmitCompany,\r\n} from \"../models/companyModels/ICompany\";\r\n\r\nexport default class CompanyStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable CompanyData: IAddSubmitCompany | null = null;\r\n\r\n  @action autoStackButtonsDisplay = async (screenSize: number) => {\r\n    if (screenSize < 700) runInAction(() => {});\r\n    else runInAction(() => {});\r\n  };\r\n\r\n  @action SubmitCompanyDetails = async (data: IAddFormDataCompany) => {\r\n    try {\r\n      runInAction(() => {\r\n        // this.CompanyData = {\r\n        //   company: {\r\n        //     name: data.companyName,\r\n        //     phoneNumber: data.phoneNumber,\r\n        //     fiscalNumber: data.fiscalNumber,\r\n        //   },\r\n\r\n        //   office: {\r\n        //     officeName: data.officeName,\r\n        //     code: data.code,\r\n        //     address: {\r\n        //       addressLine1: data.addressLine1,\r\n        //       addressLine2: data.addressLine2,\r\n        //       postCode: data.postCode,\r\n        //       country: data.country,\r\n        //       county: data.county,\r\n        //     },\r\n        //   },\r\n        // };\r\n      });\r\n\r\n      let unit = await agents.company.create(this.CompanyData!);\r\n      if (unit) console.log(\"Added\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction } from \"mobx\";\r\n// import { getDate } from \"date-fns/esm\";\r\nimport { getWeek, startOfWeek, addDays, endOfWeek, format } from \"date-fns\";\r\n\r\nexport default class TimeSheetStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable currentWeek: number = getWeek(Date.now());\r\n  @observable weekDateRange: string[] = [];\r\n\r\n  @action calculateDates = async () => {\r\n    try {\r\n      runInAction(() => {\r\n        this.weekDateRange[0] = format(\r\n          new Date(startOfWeek(Date.now())),\r\n          \"MM/dd\"\r\n        );\r\n        this.weekDateRange[1] = format(\r\n          new Date(addDays(startOfWeek(Date.now()), 1)),\r\n          \"MM/dd\"\r\n        );\r\n        this.weekDateRange[2] = format(\r\n          new Date(addDays(startOfWeek(Date.now()), 2)),\r\n          \"MM/dd\"\r\n        );\r\n        this.weekDateRange[3] = format(\r\n          new Date(addDays(startOfWeek(Date.now()), 3)),\r\n          \"MM/dd\"\r\n        );\r\n        this.weekDateRange[4] = format(\r\n          new Date(addDays(startOfWeek(Date.now()), 4)),\r\n          \"MM/dd\"\r\n        );\r\n        this.weekDateRange[5] = format(\r\n          new Date(addDays(startOfWeek(Date.now()), 5)),\r\n          \"MM/dd\"\r\n        );\r\n        this.weekDateRange[6] = format(\r\n          new Date(endOfWeek(Date.now())),\r\n          \"MM/dd\"\r\n        );\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  @action submitTime = async (data: any) => {\r\n\r\n    console.log(data);\r\n    \r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction } from \"mobx\";\r\n// import { IEmployeeFormValue } from \"../models/employeeModels/employee\";\r\n// import agents from \"../API/agents\";\r\n\r\nexport default class MyDataStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable readOnlyFlag: boolean = false;\r\n\r\n  @action setEditTrue = async () => {\r\n    runInAction(() => {\r\n      this.readOnlyFlag = !this.readOnlyFlag;\r\n    });\r\n  };\r\n\r\n  \r\n  @action SageChanges = async () => {\r\n    runInAction(() => {\r\n      this.readOnlyFlag = !this.readOnlyFlag;\r\n\r\n    });\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction } from \"mobx\";\r\nimport { IDepartment } from \"../models/employeeModels/employee\";\r\nimport agents from \"../API/agents\";\r\nimport { IUser } from \"../models/usersModels/user\";\r\n\r\nexport default class ManagerStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable tabIndex: string = \"0\";\r\n  @observable departmentData: IDepartment | null = null\r\n\r\n  @action ChangeTab = async (tabSelected: string) => {\r\n    runInAction(() => {\r\n      this.tabIndex = tabSelected;\r\n    });\r\n  };\r\n\r\n  @action loadDepartmentData = async (user: IUser) => {\r\n    try {\r\n\r\n\r\n      if(user.role[0] === 'Manager')\r\n          var department = await agents.department.find(user.departmentId);\r\n\r\n      else \r\n// run the admin method to get all the employees in the c\r\n\r\n\r\n        runInAction(() => {\r\n            this.departmentData = department;\r\n          });   \r\n        } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction } from \"mobx\";\r\nimport agents from \"../API/agents\";\r\nimport { ICompany } from \"../models/companyModels/ICompany\";\r\nimport { IUser } from \"../models/usersModels/user\";\r\n\r\nexport default class AdminStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable company: ICompany | null = null;\r\n  @observable managersList: IUser[] = [];\r\n\r\n  @action GetCompanyDetail = async (employeeId: string) => {\r\n    try {\r\n      const companyData = await agents.company.find(employeeId);\r\n      if (companyData) {\r\n        runInAction(() => {\r\n          this.company = companyData;\r\n        });\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  @action GetNonBasicUsers = async (companyId: string) => {\r\n    try {\r\n      const tempManagersList = await agents.nonBasicUsers.list(companyId);\r\n\r\n      if (tempManagersList) {\r\n        runInAction(() => {\r\n          this.managersList = tempManagersList;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction, ObservableMap } from \"mobx\";\r\nimport {\r\n  IDepartment,\r\n  IEmployeeDetails,\r\n} from \"../models/employeeModels/employee\";\r\nimport agents from \"../API/agents\";\r\nimport { IUser } from \"../models/usersModels/user\";\r\n \r\n\r\nexport default class ManageEmployeeStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n  @observable departmentData: IDepartment | null = null;\r\n  @observable employeesData: IEmployeeDetails[] = [];\r\n\r\n  @action loadEmployeesData = async (user: IUser) => {\r\n\r\n    \r\n\r\n\r\n    try {\r\n    //   if (user.role[0] !== \"Manager\") {\r\n    //     let departmentData = await agents.department.find(user.companyId);\r\n    //     if (departmentData != null)\r\n    //       runInAction(() => {\r\n    //         this.departmentData = departmentData;\r\n    //       });\r\n    //   }\r\n    //   // run the admin method to get all the employees in the company\r\n    //   else {\r\n    // console.log(user);\r\n\r\n        let employeesData = await agents.company.listEmployees(user.companyId);\r\n\r\n        if (employeesData)\r\n          runInAction(() => {\r\n            this.employeesData = employeesData;\r\n          });\r\n     // }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction } from \"mobx\";\r\nimport agents from \"../API/agents\";\r\nimport { IOffice, IOfficeList } from \"../models/companyModels/IOffices\";\r\nimport { IDepartment } from \"../models/employeeModels/employee\";\r\nimport { IAddress } from \"../models/commonModels/IAddress\";\r\n\r\nexport default class OfficeStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n  @observable isMainHQ: boolean = false;\r\n  @observable officeList: IOfficeList[] = [];\r\n  @observable departmentList: IDepartment[] = [];\r\n  @observable officeAddress: IAddress | null = null;\r\n  @action mainHQChange = () => {\r\n    this.isMainHQ = !this.isMainHQ;\r\n  };\r\n  @action loadDepartments = async (officeId: string) => {\r\n    try {\r\n      const departments = await agents.department.findAll(officeId);\r\n      if (departments) {\r\n        runInAction(() => {\r\n          this.departmentList = departments;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  @action createOffice = async (data: IOffice) => {\r\n    try {\r\n \r\n \r\n\r\n      data.isMainHR = this.isMainHQ;\r\n\r\n     const response = await agents.office.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  @action\r\n  resetDepartmentList = async () =>\r\n    runInAction(() => {\r\n      this.departmentList = [];\r\n    });\r\n\r\n  @action loadOffices = async () => {\r\n    try {\r\n      let result = await agents.office.getAll(\r\n        this.rootStore.userStore.user?.employeeId!\r\n      );\r\n      if (result) {\r\n        runInAction(() => {\r\n          this.officeList = result;\r\n        });\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  // department methods\r\n  @action creatDepartment = async (data: IDepartment) => {\r\n    try {\r\n      console.log(data);\r\n\r\n      const result = await agents.department.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction } from \"mobx\";\r\nimport {\r\n  IJobTitle,\r\n  IJobTitleItemList,\r\n  ISchedulePolicy,\r\n  ISchedulePolicyItemList,\r\n} from \"../models/commonModels/companyPolicies\";\r\nimport agents from \"../API/agents\";\r\n\r\nexport default class PolicyStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n  @observable jobTitleOptions: IJobTitleItemList[] = [];\r\n  @observable schedulePolicyOptions: ISchedulePolicyItemList[] = [];\r\n  // add - job title\r\n  @action submitJobTitle = async (data: IJobTitle) => {\r\n    try {\r\n      const result = await agents.jobTitle.create(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  //update - job title\r\n  @action updateJobTitle = async (titleId: string, data: IJobTitle) => {\r\n    try {\r\n      const result = await agents.jobTitle.edit(titleId, data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  //get - job title\r\n  @action getJobTitle = async (titleId: string) => {\r\n    try {\r\n      const result = await agents.jobTitle.get(titleId);\r\n      console.log(result);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  //list - job title\r\n  @action listJobTitles = async (companyId: string) => {\r\n    try {\r\n\r\n      console.log(companyId);\r\n      \r\n      const result = await agents.jobTitle.list(companyId);\r\n      if (result)\r\n        runInAction(() => {\r\n          this.jobTitleOptions = result;\r\n        });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // schedule policy\r\n  //add\r\n  @action submitSchedulePolicy = async (data: ISchedulePolicy) => {\r\n    console.log(data);\r\n\r\n    const response = await agents.schedulePolicy.create(data);\r\n  };\r\n  //get\r\n  @action getSchedulePolicy = async () => {};\r\n  //update\r\n  @action updateSchedulePolicy = async () => {};\r\n  //list\r\n  @action listSchedulePolicy = async (companyId: string) => {\r\n    try {\r\n      const response = await agents.schedulePolicy.list(companyId);\r\n\r\n      if (response) {\r\n        runInAction(() => {\r\n          this.schedulePolicyOptions = response;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n","import { action, observable, ObservableMap, runInAction } from \"mobx\";\r\nimport agents from \"../API/agents\";\r\nimport { ILeaves, ILeavesRequest } from \"../models/employeeModels/leaves\";\r\nimport { RootStore } from \"./rootStore\";\r\n\r\nexport default class LeavesStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable leavesData: ILeaves | null = null;\r\n  @observable dateError: string = \"\";\r\n\r\n  @action loadLeavesData = async (employeeID: string) => {\r\n    try {\r\n      const result = await agents.leaves.list(employeeID);\r\n\r\n      if (result) {\r\n        runInAction(() => {\r\n          this.leavesData = result;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  @action requestLeave = async (data: ILeavesRequest) => {\r\n    try {\r\n      const user = this.rootStore.userStore.user;\r\n      data.employeeId = user?.employeeId!;\r\n      if (data.toDate < data.fromDate)\r\n        throw new Error(\r\n          (this.dateError = \"Date to cannot be before date from!\")\r\n        );\r\n\r\n      await agents.leaves.request(data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\n\r\nexport default class FinancesStore {\r\n    rootStore: RootStore;\r\n  \r\n    constructor(rootStore: RootStore) {\r\n      this.rootStore = rootStore;\r\n    }\r\n\r\n\r\n\r\n    // submit claim\r\n\r\n    // get history - list all expenses claims for a given user\r\n\r\n\r\n    // get history for manager - list all the expenses claimed by users in the department (manager)\r\n\r\n    // authorize \r\n\r\n}","import { action, observable } from \"mobx\";\r\nimport agents from \"../API/agents\";\r\nimport { ICustomer } from \"../models/customerModels/customer\";\r\nimport { RootStore } from \"./rootStore\";\r\n\r\nexport default class CustomerStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable customer: ICustomer | null = null;\r\n  @observable customerList: ICustomer[] = [];\r\n\r\n  // add customer\r\n  @action addCustomer = async (data: ICustomer) => {\r\n    try {\r\n      await agents.customer.create(data);\r\n    } catch (ex) {\r\n      console.log(\"Submitting Customer ERROR: \", ex);\r\n    }\r\n  };\r\n\r\n  // list customer\r\n  @action listCustomer = async (companyId: string) => {\r\n    try {\r\n      const customer = await agents.customer.list(companyId);\r\n      if (customer) this.customerList = customer;\r\n    } catch (ex) {\r\n      console.log(\"Listing Customer ERROR: \", ex);\r\n    }\r\n  };\r\n\r\n\r\n  \r\n}\r\n","import { createContext } from \"react\";\r\nimport UserStore from \"./userStore\";\r\nimport { configure } from \"mobx\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport MenuBarStore from \"./menuBarStore\";\r\nimport EmployeeStore from \"./employeeStore\";\r\nimport CompanyStore from \"./companyStore\";\r\nimport TimeSheetStore from \"./timeSheetStore\";\r\nimport MyDataStore from \"./myDataStore\";\r\nimport ManagerStore from \"./managerStore\";\r\nimport AdminStore from \"./adminStore\";\r\nimport ManageEmployeeStore from \"./manageEmployeeStore\";\r\nimport OfficeStore from \"./officeStore\";\r\nimport PolicyStore from \"./policyStore\";\r\nimport LeavesStore from \"./leavesStore\";\r\nimport FinancesStore from './financesStore'\r\nimport CustomerStore from './customerStore'\r\n\r\nconfigure({ enforceActions: \"always\" });\r\nexport class RootStore {\r\n  customerStore: CustomerStore\r\n  userStore: UserStore;\r\n  commonStore: CommonStore;\r\n  modalStore: ModalStore;\r\n  menuBarStore: MenuBarStore;\r\n  employeeStore: EmployeeStore;\r\n  companyStore: CompanyStore;\r\n  timeSheetStore: TimeSheetStore;\r\n  myDataStore: MyDataStore;\r\n  managerStore: ManagerStore;\r\n  adminStore: AdminStore;\r\n  manageEmployeeStore: ManageEmployeeStore\r\n  officeStore: OfficeStore\r\n  policyStore: PolicyStore\r\n  leavesStore: LeavesStore\r\n  expensesStore: FinancesStore;\r\n\r\n  constructor() {\r\n    this.customerStore = new CustomerStore(this)\r\n    this.expensesStore = new FinancesStore(this)\r\n    this.leavesStore = new LeavesStore(this)\r\n    this.policyStore = new PolicyStore(this)\r\n    this.manageEmployeeStore = new ManageEmployeeStore(this)\r\n    this.officeStore = new OfficeStore(this)\r\n    this.adminStore = new AdminStore(this)\r\n    this.managerStore = new ManagerStore(this);\r\n    this.myDataStore = new MyDataStore(this);\r\n    this.timeSheetStore = new TimeSheetStore(this);\r\n    this.companyStore = new CompanyStore(this);\r\n    this.menuBarStore = new MenuBarStore(this);\r\n    this.userStore = new UserStore(this);\r\n    this.modalStore = new ModalStore(this);\r\n    this.commonStore = new CommonStore(this);\r\n    this.employeeStore = new EmployeeStore(this);\r\n  }\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore());\r\n","import React, { useContext } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ModalContainer = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    modal: { open, body },\r\n    closeModal,\r\n  } = rootStore.modalStore;\r\n  return (\r\n    <Modal\r\n      className=\"modal-container\"\r\n      open={open}\r\n      inverted\r\n      onClose={closeModal}\r\n      size=\"mini\"\r\n    >\r\n      <Modal.Content>{body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalContainer);\r\n","import React from \"react\";\r\nimport { FieldRenderProps } from \"react-final-form\";\r\nimport { FormFieldProps, Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<string, HTMLElement>,\r\n    FormFieldProps {}\r\n\r\nconst TextInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  readOnly,\r\n  type,\r\n  placeholder,\r\n  label,\r\n  pattern,\r\n  meta: { touched, error },\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} type={type} width={width}>\r\n      <label>{label}</label>\r\n      <input\r\n        {...input}\r\n        pattern={pattern}\r\n        placeholder={placeholder}\r\n        className={(readOnly ? \"is-readOnly\" : \"\") + \" \"}\r\n        readOnly={readOnly}\r\n      />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\nimport { AxiosResponse } from \"axios\";\r\n\r\ninterface IProps {\r\n    error: AxiosResponse,\r\n    text: string\r\n}\r\n\r\nconst ErrorMessage: React.FC<IProps> = ({error, text}) => {\r\n  return (\r\n    <Message error>\r\n      <Message.Header>{error.statusText}</Message.Header>\r\n      {text && <Message.Content content={text} />}\r\n    </Message>\r\n  );\r\n};\r\n\r\nexport default  ErrorMessage;\r\n","import React, { useContext } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Form, Button, Header } from \"semantic-ui-react\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport { combineValidators, isRequired } from \"revalidate\";\r\nimport TextInput from \"../../common/form/TextInput\";\r\nimport { IUserFormValues } from \"../../models/usersModels/user\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ErrorMessage from \"../../layout/common/ErrorMessage\";\r\n\r\nconst validate = combineValidators({\r\n  email: isRequired(\"Email\"),\r\n  password: isRequired(\"Password\"),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { Login } = rootStore.userStore;\r\n  return (\r\n    <FinalForm\r\n      onSubmit={(values: IUserFormValues) =>\r\n        Login(values).catch((error) => ({\r\n          [FORM_ERROR]: error,\r\n        }))\r\n      }\r\n      validate={validate}\r\n      render={({\r\n        handleSubmit,\r\n        submitting,\r\n        submitError,\r\n        invalid,\r\n        pristine,\r\n        dirtySinceLastSubmit,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Header as=\"h2\" content=\"Login\" color=\"teal\" textAlign=\"center\" />\r\n          <Field\r\n            name=\"email\"\r\n            component={TextInput}\r\n            placeholder=\"Email\"\r\n            defaultValue=\"julios@ms.com\"\r\n          />\r\n          <Field\r\n            name=\"password\"\r\n            component={TextInput}\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            defaultValue=\"Opel2010..\"\r\n          />\r\n          {submitError && !dirtySinceLastSubmit && (\r\n            <ErrorMessage\r\n              error={submitError}\r\n              text=\"Password ou Email Incorrect\"\r\n            />\r\n          )}\r\n          <br />\r\n          <Button\r\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\r\n            loading={submitting}\r\n            color=\"teal\"\r\n            content=\"Login\"\r\n            fluid\r\n            icon=\"sign in\"\r\n          />\r\n          <Link to=\"#\">Recover Password</Link>\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useContext } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Form, Button, Header } from \"semantic-ui-react\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport {\r\n  combineValidators,\r\n  isRequired,\r\n  matchesField,\r\n  composeValidators,\r\n} from \"revalidate\";\r\nimport TextInput from \"../../common/form/TextInput\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\nimport ErrorMessage from \"../../layout/common/ErrorMessage\";\r\nimport { IRegisterFormValues } from \"../../models/companyModels/company\";\r\n\r\nconst validate = combineValidators({\r\n  // email: createValidator(\r\n  //   message => value => {\r\n  //     if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n  //       return message\r\n  //     }\r\n  //   },\r\n  //   'Invalid email address'\r\n  // ),\r\n\r\n  email: isRequired(\"Email\"),\r\n  password: isRequired(\"Password\"),\r\n  repeatEmail: composeValidators(\r\n    isRequired,\r\n    matchesField(\"email\", \"Email\")\r\n  )(\"Repeat Email\"),\r\n\r\n  repeatPassword: composeValidators(\r\n    isRequired,\r\n    matchesField(\"password\", \"Password\")\r\n  )(\"Repeat Password\"),\r\n});\r\ninterface IProps {}\r\n\r\nconst RegisterForm: React.FC<IProps> = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { register } = rootStore.userStore;\r\n  return (\r\n    <FinalForm\r\n      onSubmit={(values: IRegisterFormValues) =>\r\n        register(values).catch((error) => ({\r\n          [FORM_ERROR]: error,\r\n        }))\r\n      }\r\n      validate={validate}\r\n      render={({\r\n        handleSubmit,\r\n        submitting,\r\n        submitError,\r\n        invalid,\r\n        pristine,\r\n        dirtySinceLastSubmit,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Header as=\"h2\" content=\"Register\" color=\"teal\" textAlign=\"center\" />\r\n          <Field\r\n            name=\"companyName\"\r\n            component={TextInput}\r\n            placeholder=\"Company Name\"\r\n          />\r\n          <Field name=\"Username\" component={TextInput} placeholder=\"Username\" />\r\n\r\n          <Field name=\"email\" component={TextInput} placeholder=\"Email\" />\r\n          <Field\r\n            name=\"repeatEmail\"\r\n            component={TextInput}\r\n            placeholder=\"Repeat Email\"\r\n          />\r\n          <Field\r\n            name=\"password\"\r\n            component={TextInput}\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n          />\r\n          <Field\r\n            name=\"repeatPassword\"\r\n            component={TextInput}\r\n            placeholder=\"Repeat Password\"\r\n            type=\"password\"\r\n          />\r\n          {submitError && !dirtySinceLastSubmit && (\r\n            <ErrorMessage error={submitError} text=\"Something went wrong\" />\r\n          )}\r\n          <br />\r\n          <Button\r\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\r\n            loading={submitting}\r\n            color=\"teal\"\r\n            content=\"Submit\"\r\n            fluid\r\n            icon=\"pencil\"\r\n          />\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { RootStoreContext } from \"../stores/rootStore\";\r\nimport { Segment, Container, Header, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginForm from \"../features/forms/LoginForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport RegisterForm from \"../features/forms/registerForm\";\r\n\r\nconst Home = () => {\r\n  const token = window.localStorage.getItem(\"jwt\");\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { user, isLoggedIn } = rootStore.userStore;\r\n  const { openModal } = rootStore.modalStore;\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          Tekoom\r\n        </Header>\r\n\r\n        {isLoggedIn && user && token ? (\r\n          <Fragment>\r\n            <Header as=\"h2\" inverted content={`Welcome, ${user.displayName}`} />\r\n            <Button as={Link} to={`/${user.role[0].toLowerCase()}/dashboard`} size=\"huge\" inverted>\r\n              myDashboard\r\n            </Button>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <Button\r\n              onClick={() => openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              onClick={() => openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(Home);\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  RouteProps,\r\n  RouteComponentProps,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RootStoreContext } from \"../stores/rootStore\";\r\n\r\ninterface IProps extends RouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>>;\r\n}\r\nconst AuthorizeRoute: React.FC<IProps> = ({\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { isLoggedIn } = rootStore.userStore;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(AuthorizeRoute);\r\n","import React from \"react\";\r\nimport { Button, Segment, Header, Icon } from \"semantic-ui-react\";\r\nimport { history } from \"../../..\";\r\n\r\nexport const NotFound = () => {\r\n  return (\r\n    <Segment placeholder className='not-found-page'>\r\n\r\n\r\n\r\n      <Header icon>\r\n\r\n      <Header color='teal'>\r\n\r\n        <h1>404</h1>\r\n      </Header>\r\n\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked everywhere but couldn't find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button onClick={() => history.goBack()} primary>\r\n          Go Back\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\n\r\nexport default class TextIcon extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    hideText: PropTypes.bool.isRequired,\r\n    color: PropTypes.string,\r\n    size: PropTypes.string.isRequired,\r\n    inverted: PropTypes.bool,\r\n    colorTxt: PropTypes.string,\r\n    toolTipContent: PropTypes.string\r\n  };\r\n\r\n  style = {\r\n    alignSelf: \"center\",\r\n    paddingLeft: \"5px\",\r\n    color: this.props.colorTxt ? this.props.colorTxt : \"#000\",\r\n  };\r\n\r\n   styleTT = {\r\n    borderRadius: 0,\r\n    padding: '2em',\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"inline-flex\" }}>\r\n        <Popup\r\n        disabled={!this.props.hideText}\r\n        style={this.styleTT}\r\n          trigger={\r\n        <Icon\r\n          size={this.props.size}\r\n          inverted={this.props.inverted}\r\n          color={this.props.color}\r\n          name={this.props.name}\r\n        />}\r\n        content={this.props.toolTipContent}\r\n        position='right center'\r\n      />\r\n        <div\r\n          style={this.style}\r\n          hidden={this.props.hideText}\r\n          color={this.props.colorTxt}\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Menu, MenuItemProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\nimport TextIcon from \"../../components/TextIcon\";\r\n\r\ninterface IProps {\r\n  children: any;\r\n}\r\n\r\nconst SideMenu: React.FC<IProps> = ({ children }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { sideMenuVisible } = rootStore.menuBarStore;\r\n  const { user } = rootStore.userStore;\r\n  const [activeItem, setActiveItem] = useState(\"dashboard\");\r\n\r\n  const handleItemClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    data: MenuItemProps\r\n  ) => setActiveItem(data.name!);\r\n\r\n  const getAdminMenu = () => {\r\n    return (\r\n      <Menu\r\n        fixed=\"left\"\r\n        borderless\r\n        className={(sideMenuVisible ? \"small-side\" : \"\") + \" side \"}\r\n        vertical\r\n      >\r\n        <Menu.Item\r\n          as={Link}\r\n          to={\"/home\"}\r\n          name=\"dashboard\"\r\n          active={activeItem === \"dashboard\"}\r\n          onClick={handleItemClick}\r\n        >\r\n          <div style={{ color: \"#E9E9E9\" }}>LOGO</div>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          as={Link}\r\n          to={`/${user?.role}/dashboard`}\r\n          name=\"dashboard\"\r\n          active={activeItem === \"dashboard\"}\r\n          onClick={handleItemClick}\r\n        >\r\n          <TextIcon\r\n            toolTipContent={\"Profile\"}\r\n            hideText={sideMenuVisible}\r\n            inverted={true}\r\n            size=\"small\"\r\n            colorTxt=\"#E9E9E9\"\r\n            name=\"dashboard\"\r\n          >\r\n            Dashboard\r\n          </TextIcon>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          as={Link}\r\n          to={\"/manage-customer\"}\r\n          name=\"/manage-customer\"\r\n          active={activeItem === \"/manage-customer\"}\r\n          onClick={handleItemClick}\r\n        >\r\n          <TextIcon\r\n            toolTipContent={\"Profile\"}\r\n            hideText={sideMenuVisible}\r\n            inverted={true}\r\n            size=\"small\"\r\n            colorTxt=\"#E9E9E9\"\r\n            name=\"industry\"\r\n          >\r\n            Manage Customers\r\n          </TextIcon>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          as={Link}\r\n          to={\"/manage-user\"}\r\n          name=\"/manage-user\"\r\n          active={activeItem === \"/manage-user\"}\r\n          onClick={handleItemClick}\r\n        >\r\n          <TextIcon\r\n            toolTipContent=\"industry\"\r\n            hideText={sideMenuVisible}\r\n            size=\"small\"\r\n            inverted={true}\r\n            colorTxt=\"#E9E9E9\"\r\n            name=\"users\"\r\n          >\r\n            Manage Users\r\n          </TextIcon>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          as={Link}\r\n          to={\"/profile\"}\r\n          name=\"profile\"\r\n          active={activeItem === \"profile\"}\r\n          onClick={handleItemClick}\r\n        >\r\n          <TextIcon\r\n            toolTipContent=\"Profile\"\r\n            hideText={sideMenuVisible}\r\n            size=\"small\"\r\n            inverted={true}\r\n            colorTxt=\"#E9E9E9\"\r\n            name=\"folder\"\r\n          >\r\n            Manage Companies\r\n          </TextIcon>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"parent\">\r\n        <div className={(sideMenuVisible ? \"small-side \" : \"\") + \"side\"}>\r\n          {getAdminMenu()}\r\n        </div>\r\n        <div className={(sideMenuVisible ? \"small-content \" : \"\") + \"content\"}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(SideMenu);\r\n","import React from \"react\";\r\nimport { Popup, Icon, Card, Image } from \"semantic-ui-react\";\r\n\r\ninterface IProps {}\r\n\r\nconst Notification: React.FC<IProps> = () => {\r\n  return (\r\n    <Popup\r\n      trigger={<Icon size=\"large\" name=\"bell\" color=\"grey\" />}\r\n      position=\"bottom right\"\r\n      size=\"huge\"\r\n      pinned\r\n    ></Popup>\r\n  );\r\n};\r\nexport default Notification;\r\n","import React, { useContext } from \"react\";\r\nimport { Image, Label, Menu, Dropdown, Icon } from \"semantic-ui-react\";\r\nimport Notification from \"./Notification\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\ninterface IProps {}\r\n\r\nconst TopMenu: React.FC<IProps> = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { user, logout } = rootStore.userStore;\r\n\r\n  return (\r\n    <Menu className=\"top-menu\">\r\n      <Menu.Item className=\"no-border\" onClick={() => {}}>\r\n        <Icon name=\"bars\" />\r\n      </Menu.Item>\r\n\r\n      <Menu.Menu position=\"right\">\r\n        <Menu.Item className=\"no-border\" position=\"right\">\r\n          <Notification />\r\n\r\n          <Label\r\n            className=\"label-on-corner\"\r\n            color=\"teal\"\r\n            size={\"mini\"}\r\n            floating\r\n            circular\r\n          >\r\n            1\r\n          </Label>\r\n        </Menu.Item>\r\n        {user && (\r\n          <Menu.Item position=\"right\">\r\n            <Image\r\n              circular\r\n              size={\"mini\"}\r\n              src=\"https://react.semantic-ui.com/images/avatar/large/steve.jpg\"\r\n            />\r\n            <br />\r\n            <Dropdown text={user.displayName} simple direction=\"left\">\r\n              <Dropdown.Menu style={{ marginTop: 20 }}>\r\n                <Dropdown.Item\r\n                  as={Link}\r\n                  to={`/home`}\r\n                  text=\"My profile\"\r\n                  icon=\"user\"\r\n                />\r\n                <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )}\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default observer(TopMenu);\r\n","import React from \"react\";\r\nimport SideMenu from \"../common/SideMenu\";\r\nimport TopMenu from \"../common/TopMenu\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps {\r\n  children: any;\r\n}\r\nconst AdminLayout: React.FC<IProps> = ({ children }) => {\r\n  return (\r\n    <div className='margin-left'>\r\n      <TopMenu/>\r\n      <div className=\"main-content\">\r\n        <SideMenu>{children}</SideMenu>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(AdminLayout);\r\n","import React from 'react'\r\nimport AdminLayout from './adminLayout'\r\n\r\nconst ProfileLayout:React.FC<{children: any}> = ({children}) => {\r\n    return <AdminLayout>{children}</AdminLayout>;\r\n}\r\n\r\nexport default ProfileLayout\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Segment, Dropdown, Table, Icon } from \"semantic-ui-react\";\r\n\r\nimport { RootStoreContext } from \"../stores/rootStore\";\r\n\r\nimport { format } from \"date-fns\";\r\nimport ProfileLayout from \"../layout/admin/ProfileLayout\";\r\nimport UploadWidget from \"../common/upload/UploadWidget\";\r\nimport UploadDocuments from \"../features/user/forms/UploadDocuments\";\r\n\r\nconst EmployeeList: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { user } = rootStore.userStore;\r\n  const { loadEmployeesData, employeesData } = rootStore.manageEmployeeStore;\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadEmployeesData(user!).then(() => setLoading(false));\r\n  }, [loadEmployeesData, user]);\r\n\r\n  return (\r\n    <ProfileLayout>\r\n      {/* <Segment loading={loading}>\r\n        <br />\r\n        <Dropdown\r\n          clearable\r\n          selection\r\n          search\r\n          placeholder=\"Search for a...\"\r\n          fluid\r\n          basic\r\n          noResultsMessage=\"Try another search.\"\r\n          options={[]}\r\n        />\r\n        <br /> \r\n      </Segment> */}\r\n      <Segment>\r\n{/* <UploadDocuments/> */}\r\n</Segment>\r\n\r\n    </ProfileLayout>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;\r\n","import { createMedia } from \"@artsy/fresnel\";\r\n\r\nexport const AppMedia = createMedia({\r\n    breakpoints: {\r\n      mobile: 320,\r\n     // tablet: 70,\r\n      computer: 992,\r\n      largeScreen: 1200,\r\n      widescreen: 1920\r\n    }\r\n  });\r\n\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  Menu,\r\n  MenuItemProps,\r\n  Grid,\r\n\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootStoreContext } from \"../stores/rootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { AppMedia } from \"../constants/MediaScreen\";\r\n\r\nconst MyMenu: React.FC = () => {\r\n  const { MediaContextProvider } = AppMedia;\r\n\r\n  const [activeItem, setActiveItem] = useState(\"home\");\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { user } = rootStore.userStore;\r\n\r\n  const handleItemClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\r\n    data: MenuItemProps\r\n  ) => {\r\n    setActiveItem(data.name!);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setActiveItem(window.location.pathname);\r\n  }, [setActiveItem]);\r\n\r\n  if (user?.role[0] !== \"User\")\r\n    return (\r\n      <MediaContextProvider>\r\n        <Grid centered columns=\"1\">\r\n          <Grid.Column>\r\n            <Menu pointing secondary fluid>\r\n              <Menu.Item\r\n                name=\"/home\"\r\n                active={activeItem === \"/home\"}\r\n                onClick={handleItemClick}\r\n                as={Link}\r\n                to={`/home`}\r\n                content=\"Home\"\r\n              />\r\n              <Menu.Item\r\n                name=\"/dashboard\"\r\n                active={activeItem === \"/dashboard\"}\r\n                onClick={handleItemClick}\r\n                as={Link}\r\n                to={`/dashboard`}\r\n              />\r\n\r\n              {user?.role[0] === \"Admin\" && (\r\n                <Menu.Item\r\n                  name=\"/manage-policies\"\r\n                  active={activeItem === \"/manage-policies\"}\r\n                  onClick={handleItemClick}\r\n                  as={Link}\r\n                  to={\"/manage-policies\"}\r\n                />\r\n              )}\r\n\r\n              {user?.role[0] === \"Admin\" && (\r\n                <Menu.Item\r\n                  name=\"/company-directory\"\r\n                  active={activeItem === \"/company-directory\"}\r\n                  onClick={handleItemClick}\r\n                  as={Link}\r\n                  to={\"/company-directory\"}\r\n                />\r\n              )}\r\n              {user?.role[0] === \"Admin\" && (\r\n                <Menu.Item\r\n                  name=\"/employee-directory\"\r\n                  active={activeItem === \"/employee-directory\"}\r\n                  onClick={handleItemClick}\r\n                  as={Link}\r\n                  to={\"/employee-directory\"}\r\n                />\r\n              )}\r\n\r\n              {/* manager */}\r\n              {user?.role[0] === \"Manager\" && (\r\n                <Menu.Item\r\n                  name=\"/employee-directory\"\r\n                  active={activeItem === \"/employee-directory\"}\r\n                  onClick={handleItemClick}\r\n                  as={Link}\r\n                  to={\"/employee-directory\"}\r\n                />\r\n              )}\r\n            </Menu>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </MediaContextProvider>\r\n    );\r\n  else\r\n    return (\r\n      <MediaContextProvider>\r\n        <Grid   columns=\"1\">\r\n          <Grid.Column>\r\n            <Menu pointing secondary fluid>\r\n              <Menu.Item\r\n                name=\"/user/dashboard/\"\r\n                active={activeItem === \"/user/dashboard/\"}\r\n                onClick={handleItemClick}\r\n                as={Link}\r\n                to={`/user/dashboard/`}\r\n                content=\"Home\"\r\n              />\r\n                   <Menu.Item\r\n                name=\"/Manage Documents\"\r\n                active={activeItem === \"/Manage Documents\"}\r\n                onClick={handleItemClick}\r\n                as={Link}\r\n                to={`/Manage Documents`}\r\n                content=\"Manage Documents\"\r\n              />\r\n            </Menu>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </MediaContextProvider>\r\n    );\r\n};\r\n\r\nexport default observer(MyMenu);\r\n","import React from \"react\";\r\nimport { Image } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps {\r\n  size: any;\r\n  src: any;\r\n  children: any;\r\n}\r\n\r\nconst ProfilePhotoText: React.FC<IProps> = ({ src, size, children }) => {\r\n  const style: any = {\r\n    alignSelf: \"center\",\r\n    paddingLeft: \"40px\",\r\n  };\r\n  const imageStyle: any = {\r\n    marginLeft: 35,\r\n  \r\n  };\r\n  return (\r\n    <div style={{ display: \"inline-flex\" }}>\r\n      <Image\r\n        style={imageStyle}\r\n        verticalAlign=\"middle\"\r\n        src={src}\r\n        size={size}\r\n        circular\r\n      />\r\n      <div style={style}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePhotoText);\r\n\r\n","\r\nimport React, { Fragment, useContext } from \"react\";\r\n// import { RootStoreContext } from \"../stores/rootStore\";\r\nimport TopMenu from \"../layout/common/TopMenu\";\r\nimport { Grid, List } from \"semantic-ui-react\";\r\nimport ProfilePhotoText from \"./ProfilePhotoText\";\r\n// import TextIcon from \"./TextIcon\";\r\nimport { observer } from \"mobx-react-lite\";\r\n// import {} from 'react-social-icons'\r\n\r\n  const ProfileHeader = () => {\r\n  // const rootStore = useContext(RootStoreContext);\r\n  // const { user } = rootStore.userStore;\r\n\r\n  return (\r\n    <Fragment>\r\n      <TopMenu />\r\n      <div className=\"profileTopBox\">\r\n        <Grid  className=\"\">\r\n          <Grid.Column width={15}>\r\n            <ProfilePhotoText\r\n              src=\"https://react.semantic-ui.com/images/avatar/large/steve.jpg\"\r\n              size=\"small\"\r\n            >\r\n              <List>\r\n                {/* <List.Item>\r\n                  <TextIcon inverted={false} size=\"larger\" name=\"user\">\r\n                    <h4> {user?.displayName}</h4>{\" \"}\r\n                  </TextIcon>\r\n                </List.Item>\r\n                <List.Item>\r\n                  <TextIcon inverted={false} size=\"larger\" name=\"map pin\">\r\n                    <h4>{user?.username}</h4>{\" \"}\r\n                  </TextIcon>\r\n                </List.Item>\r\n                <List.Item>\r\n                  <TextIcon inverted={false} size=\"larger\" name=\"legal\">\r\n                    <h4>Role</h4>\r\n                  </TextIcon>\r\n                </List.Item>\r\n                <List.Item>\r\n                  <TextIcon\r\n                    inverted={false}\r\n                    size=\"larger\"\r\n                    name=\"legal\"\r\n                  ></TextIcon>\r\n                </List.Item> */}\r\n              </List>\r\n            </ProfilePhotoText>\r\n          </Grid.Column>\r\n     \r\n        </Grid>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n\r\nexport default observer(ProfileHeader)","import React, { Fragment } from \"react\";\r\nimport MyMenu from \"../../components/MyMenu\";\r\nimport ProfileHeader from '../../components/ProfileHeader'\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  children: any;\r\n}\r\nconst ProfileLayout: React.FC<IProps> = ({ children }) => {\r\n  return (\r\n    <Fragment>\r\n      <ProfileHeader/>\r\n      <Container>\r\n        <MyMenu />\r\n        {children}\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileLayout);\r\n","import React from 'react'\r\nimport ProfileLayout from '../layout/common/ProfileLayout'\r\ninterface IProps{}\r\n\r\n\r\nconst UserProfile = () => {\r\n    return (\r\n       <ProfileLayout>\r\n\r\n       </ProfileLayout>\r\n            \r\n       \r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Menu, Search, Table } from \"semantic-ui-react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nconst CustomerList: React.FC = () => {\r\n  return (\r\n    <div>\r\n<Search/>\r\n\r\n\r\n      <Table basic='very'>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Name</Table.HeaderCell>\r\n            <Table.HeaderCell>Date Registered</Table.HeaderCell>\r\n            <Table.HeaderCell>E-mail</Table.HeaderCell>\r\n            <Table.HeaderCell />\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell>H&M</Table.Cell>\r\n            <Table.Cell>January 11, 2014</Table.Cell>\r\n            <Table.Cell>jill.kendu@hm.com</Table.Cell>\r\n            <Table.Cell>\r\n            <Button color='yellow' labelPosition='left' icon='eye'  as={Link} to={`/customer/${uuidv4()}`} content=\"View\" />\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Dunnes Stores</Table.Cell>\r\n            <Table.Cell>January 11, 2014</Table.Cell>\r\n            <Table.Cell>jamieharingonton@yahoo.com</Table.Cell>\r\n            <Table.Cell>\r\n              <Button color='yellow' labelPosition='left' icon='eye' as={Link} to={`/customer/${uuidv4()}`} content=\"View\" />\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Aldi Ltd</Table.Cell>\r\n            <Table.Cell>January 11, 2014</Table.Cell>\r\n            <Table.Cell>jamieharingonton@yahoo.com</Table.Cell>\r\n            <Table.Cell>\r\n            <Button color='yellow' labelPosition='left' icon='eye'  as={Link} to={`/customer/${uuidv4()}`} content=\"View\" />\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Zara Ltd</Table.Cell>\r\n            <Table.Cell>May 11, 2014</Table.Cell>\r\n            <Table.Cell>jilsewris22@yahoo.com</Table.Cell>\r\n            <Table.Cell>\r\n            <Button color='yellow' labelPosition='left' icon='eye'  as={Link} to={`/customer/${uuidv4()}`} content=\"View\" />\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Tesco Inc</Table.Cell>\r\n            <Table.Cell>September 14, 2013</Table.Cell>\r\n            <Table.Cell>jhlilk22@yahoo.com</Table.Cell>\r\n            <Table.Cell>\r\n            <Button color='yellow' labelPosition='left' icon='eye'  as={Link} to={`/customer/${uuidv4()}`} content=\"View\" />\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n        <Table.Footer>\r\n          <Table.Row>\r\n            <Table.HeaderCell colSpan=\"3\">\r\n              <Menu pagination>\r\n                <Menu.Item as=\"a\" icon>\r\n                  <Icon name=\"chevron left\" />\r\n                </Menu.Item>\r\n                <Menu.Item as=\"a\">1</Menu.Item>\r\n                <Menu.Item as=\"a\">2</Menu.Item>\r\n                <Menu.Item as=\"a\">3</Menu.Item>\r\n                <Menu.Item as=\"a\">4</Menu.Item>\r\n                <Menu.Item as=\"a\" icon>\r\n                  <Icon name=\"chevron right\" />\r\n                </Menu.Item>\r\n              </Menu>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell />\r\n          </Table.Row>\r\n        </Table.Footer>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerList;\r\n","import React from 'react'\r\nimport { Header, Image, Segment } from 'semantic-ui-react'\r\nimport g1 from '../../../assets/g1.png'\r\nconst GlobalStorageUsageChart = () => {\r\n    return (\r\n      <Segment color=\"teal\" className='dashboard-chart-segment'>\r\n        <Header content=\"Global Storage Usage\" />\r\n        <Image src={g1} size=\"medium\" />\r\n      </Segment>\r\n    );\r\n}\r\n\r\nexport default GlobalStorageUsageChart\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Segment, Header, Feed, Button } from \"semantic-ui-react\";\r\n\r\n \r\n\r\nconst RecentActivity = () => {\r\n  return (\r\n    <Fragment>\r\n      <Segment color=\"blue\" className=\"recent-activity-segment\">\r\n        <Header content=\"Recent Activity\" />\r\n\r\n        <Feed size='large'>\r\n          <Feed.Event >\r\n            <Feed.Label image=\"https://react.semantic-ui.com/images/avatar/small/steve.jpg\" />\r\n            <Feed.Content>\r\n              <Feed.Summary\r\n                content=\"You registered a new customer: Data Storm\"\r\n                date=\"yesterday\"\r\n              />\r\n            </Feed.Content>\r\n          </Feed.Event>\r\n          <br />\r\n          <Feed.Event>\r\n            <Feed.Label image=\"https://react.semantic-ui.com/images/avatar/small/jenny.jpg\" />\r\n            <Feed.Content>\r\n              <Feed.Summary\r\n                content=\"Jenny has completed her induction tasks.\"\r\n              />\r\n              \r\n      \r\n              <Feed.Date>3 days ago</Feed.Date>\r\n            </Feed.Content>\r\n          </Feed.Event>\r\n        </Feed>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(RecentActivity);\r\n","import React from 'react'\r\nimport { Header, Image, Segment } from 'semantic-ui-react'\r\nimport g2 from '../../../assets/g2.png'\r\nconst StorageUsageByCustomerChart = () => {\r\n    return (\r\n      <Segment color=\"teal\">\r\n        <Header content=\"Storage Usage by Customer\" />\r\n        <Image src={g2} size='medium' />\r\n\r\n      </Segment>\r\n    );\r\n}\r\n\r\nexport default StorageUsageByCustomerChart\r\n","import React from \"react\";\r\nimport { Grid, Header, Segment } from \"semantic-ui-react\";\r\nimport CustomerList from \"../components/customer/CustomerList\";\r\nimport GlobalStorageUsageChart from \"../components/dashnoard/GlobalStorageUsageChart\";\r\nimport RecentActivity from \"../components/dashnoard/RecentActivity\";\r\nimport StorageUsageByCustomerChart from \"../components/dashnoard/StorageUsageByCustomerChart\";\r\nimport { AppMedia } from \"../constants/MediaScreen\";\r\nimport AdminLayout from \"../layout/admin/adminLayout\";\r\n\r\ninterface IProps {}\r\n\r\nconst { MediaContextProvider } = AppMedia;\r\nconst AdminProfile: React.FC<IProps> = () => {\r\n  return (\r\n    <MediaContextProvider>\r\n      <AdminLayout>\r\n        <Grid columns=\"2\">\r\n          <Grid.Column width=\"8\">\r\n            <GlobalStorageUsageChart />\r\n          </Grid.Column>\r\n          <Grid.Column width=\"8\">\r\n            <StorageUsageByCustomerChart />\r\n          </Grid.Column>\r\n        </Grid>\r\n\r\n        <Grid>\r\n          <Grid.Column width=\"10\">\r\n            <Segment color='blue'>\r\n              <Header content=\"Recent Customer\" />\r\n              <br />\r\n              <CustomerList />\r\n            </Segment>\r\n          </Grid.Column>\r\n          <Grid.Column width=\"6\">\r\n            <RecentActivity />\r\n          </Grid.Column>\r\n        </Grid>\r\n      </AdminLayout>\r\n    </MediaContextProvider>\r\n  );\r\n};\r\n\r\nexport default AdminProfile;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Form, Button, Header, Dropdown } from \"semantic-ui-react\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport {\r\n  combineValidators,\r\n  isRequired,\r\n  composeValidators,\r\n  matchesField,\r\n} from \"revalidate\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport SelectInput from \"../../common/form/SelectInput\";\r\n\r\nimport TextInput from \"../../common/form/TextInput\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\nimport DateInput from \"../../common/form/DateInput\";\r\nimport UploadWidget from \"../../common/upload/UploadWidget\";\r\nimport { ICustomer } from \"../../models/customerModels/customer\";\r\n\r\nconst AddCustomer: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { addCustomer } = rootStore.customerStore;\r\n  return (\r\n    <div>\r\n      <FinalForm\r\n        onSubmit={(values: ICustomer) =>\r\n          addCustomer(values).catch((error) => ({\r\n            [FORM_ERROR]: error,\r\n          }))\r\n        }\r\n        //  validate={validate}\r\n        render={({\r\n          handleSubmit,\r\n          submitting,\r\n          submitError,\r\n          invalid,\r\n          pristine,\r\n          dirtySinceLastSubmit,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit} error>\r\n            <Form.Group widths=\"equal\">\r\n              <Field\r\n                name=\"Customer Name\"\r\n                component={TextInput}\r\n                placeholder=\"Customer Name\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group widths=\"equal\">\r\n              <Field\r\n                name=\"email\"\r\n                type=\"email\"\r\n                component={TextInput}\r\n                placeholder=\"Email Address\"\r\n              />\r\n\r\n              <Field\r\n                name=\"repeatEmail\"\r\n                component={TextInput}\r\n                type=\"email\"\r\n                placeholder=\"Repeat Email Address\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group widths=\"equal\">\r\n              <Field\r\n                name=\"salary\"\r\n                component={TextInput}\r\n                placeholder=\"Phone Number\"\r\n              />\r\n              <Field\r\n                name=\"Point of Contact\"\r\n                component={TextInput}\r\n                placeholder=\"Point of contact\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <br />\r\n            <Button\r\n              disabled={(invalid && !dirtySinceLastSubmit) || pristine}\r\n              loading={submitting}\r\n              color=\"teal\"\r\n              content=\"Submit\"\r\n              fluid\r\n              icon=\"add\"\r\n            />\r\n          </Form>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(AddCustomer);\r\n","import React from 'react'\r\nimport { Grid, Header, Segment } from 'semantic-ui-react'\r\nimport CustomerList from '../../components/customer/CustomerList'\r\nimport AddCustomer from '../../features/forms/AddCustomer'\r\nimport AdminLayout from '../../layout/admin/adminLayout'\r\n\r\n\r\n\r\nconst ManageCustomers:React.FC = () => {\r\n    return (\r\n      <AdminLayout>\r\n\r\n        <Grid columns=\"2\">\r\n          <Grid.Column width=\"9\">\r\n            <Segment>\r\n              <Header content=\"Customers List\" />\r\n              <CustomerList />\r\n            </Segment>\r\n          </Grid.Column>\r\n\r\n          <Grid.Column width=\"7\">\r\n            <Segment>\r\n              <Header content=\"Create Customers\" />\r\n              <AddCustomer />\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </AdminLayout>\r\n    );\r\n}\r\n\r\nexport default ManageCustomers\r\n","import React from 'react'\r\nimport { List } from 'semantic-ui-react'\r\nimport { ICustomer } from '../../models/customerModels/customer'\r\ninterface IProps{\r\ncustomer?: ICustomer\r\n}\r\nconst CustomerDetails:React.FC<IProps> = ({customer}) => {\r\n    return (\r\n      <div  >\r\n\r\n   \r\n      <List>\r\n        <List.Header>Email</List.Header>\r\n        <List.Description>jill.kendu@hm.com</List.Description>\r\n        <List.Header>Phone Number</List.Header>\r\n        <List.Description>01 999 0000</List.Description>\r\n        <List.Header>Date Joined</List.Header>\r\n        <List.Description>January 11, 2014</List.Description>\r\n        <List.Header>EPS</List.Header>\r\n        <List.Description>9893 0993 093L</List.Description>\r\n      </List>\r\n \r\n   \r\n\r\n   \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CustomerDetails\r\n","import React from \"react\";\r\nimport { Image } from \"semantic-ui-react\";\r\nimport map from \"../../assets/map.png\";\r\nconst MapsContainer = () => {\r\n  return <Image src={map} size='large' />;\r\n};\r\n\r\nexport default MapsContainer\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Menu, Segment, Table } from \"semantic-ui-react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nconst CustomerDocList = () => {\r\n  return (\r\n    <Segment>\r\n      <Header content=\"Customer Documents\" as=\"h3\" />\r\n\r\n      <Table basic=\"very\" className=\"customer-document-list\" columns=\"1\">\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Name</Table.HeaderCell>\r\n            <Table.HeaderCell />\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell>Contact</Table.Cell>\r\n            <Table.Cell>\r\n              <Button\r\n                  color='yellow'\r\n                as={Link}\r\n                icon='eye'\r\n                labelPosition='left'\r\n                to={`/customer/${uuidv4()}`}\r\n                content=\"View\"\r\n              />\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>October_report</Table.Cell>\r\n            <Table.Cell>\r\n            <Button\r\n                  color='yellow'\r\n                as={Link}\r\n                icon='eye'\r\n                labelPosition='left'\r\n                to={`/customer/${uuidv4()}`}\r\n                content=\"View\"\r\n              />\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>containers_report</Table.Cell>\r\n\r\n            <Table.Cell>\r\n            <Button\r\n                  color='yellow'\r\n                as={Link}\r\n                icon='eye'\r\n                labelPosition='left'\r\n                to={`/customer/${uuidv4()}`}\r\n                content=\"View\"\r\n              />\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>belgium_order</Table.Cell>\r\n\r\n            <Table.Cell>\r\n            <Button\r\n                  color='yellow'\r\n                as={Link}\r\n                icon='eye'\r\n                labelPosition='left'\r\n                to={`/customer/${uuidv4()}`}\r\n                content=\"View\"\r\n              />\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>November_report</Table.Cell>\r\n\r\n            <Table.Cell>\r\n            <Button\r\n                  color='yellow'\r\n                as={Link}\r\n                icon='eye'\r\n                labelPosition='left'\r\n                to={`/customer/${uuidv4()}`}\r\n                content=\"View\"\r\n              />\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>November_report</Table.Cell>\r\n\r\n            <Table.Cell>\r\n            <Button\r\n                  color='yellow'\r\n                as={Link}\r\n                icon='eye'\r\n                labelPosition='left'\r\n                to={`/customer/${uuidv4()}`}\r\n                content=\"View\"\r\n              />\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>November_report</Table.Cell>\r\n\r\n            <Table.Cell>\r\n            <Button\r\n                color='yellow'\r\n                as={Link}\r\n                icon='eye'\r\n                labelPosition='left'\r\n                to={`/customer/${uuidv4()}`}\r\n                content=\"View\"\r\n              />\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n        <Table.Footer>\r\n          <Table.Row>\r\n            <Table.HeaderCell colSpan=\"3\">\r\n              <Menu pagination>\r\n                <Menu.Item as=\"a\" icon>\r\n                  <Icon name=\"chevron left\" />\r\n                </Menu.Item>\r\n                <Menu.Item as=\"a\">1</Menu.Item>\r\n                <Menu.Item as=\"a\">2</Menu.Item>\r\n                <Menu.Item as=\"a\">3</Menu.Item>\r\n                <Menu.Item as=\"a\">4</Menu.Item>\r\n                <Menu.Item as=\"a\" icon>\r\n                  <Icon name=\"chevron right\" />\r\n                </Menu.Item>\r\n              </Menu>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell />\r\n          </Table.Row>\r\n        </Table.Footer>\r\n      </Table>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default CustomerDocList;\r\n","import React, { useCallback, useContext } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Icon, Header } from \"semantic-ui-react\";\r\nimport { IFile } from \"../../models/commonModels/files\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\n\r\ninterface IProps {\r\n  setFiles: (files: IFile[]) => void;\r\n}\r\n\r\nconst dropzoneStyles = {\r\n  border: \"dashed 3px\",\r\n  borderColor: \"#eee\",\r\n  borderRadius: \"5px\",\r\n  paddingTop: \"5px\",\r\n  textAlign: \"center\" as \"center\",\r\n  height: \"120px\",\r\n};\r\n\r\nconst dropzoneActive = {\r\n  borderColor: \"green\",\r\n};\r\n\r\nconst UploadWidget: React.FC<IProps> = ({ setFiles }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { setContractFile } = rootStore.employeeStore;\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles.map((file: object) =>\r\n        Object.assign(file, { preview: URL.createObjectURL(file) })\r\n      );\r\n\r\n      setContractFile(acceptedFiles);\r\n\r\n      setFiles(file);\r\n    },\r\n    [setFiles]\r\n  );\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    acceptedFiles,\r\n  } = useDropzone({ onDrop, accept:'.pdf, .docx' });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps( )}\r\n      style={\r\n        isDragActive ? { ...dropzoneStyles, ...dropzoneActive } : dropzoneStyles\r\n      }\r\n    >\r\n      <input  {...getInputProps()} />\r\n      <Icon name=\"cloud upload\" size=\"huge\" />\r\n      <Header content=\"Drop a file\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadWidget;\r\n","import React, { useState } from \"react\";\r\nimport Iframe from \"react-iframe\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport UploadWidget from \"../../common/upload/UploadWidget\";\r\nimport { IFile } from \"../../models/commonModels/files\";\r\n\r\nconst DocumentUpload = () => {\r\n  const [files, setFiles] = useState<IFile[]>([]);\r\n  return (\r\n    <div>\r\n      <Segment>\r\n        <Header content=\"Document Upload\" as=\"h3\" />\r\n\r\n        {/* <Button\r\n          icon=\"trash\"\r\n          disabled={files.length > 0}\r\n          style={{ background: \"#fff\" }}\r\n        />\r\n\r\n        {files.length > 0 ? (\r\n          <Button\r\n            as={Link}\r\n            icon=\"external alternate\"\r\n            disabled={false}\r\n            style={{ background: \"#fff\" }}\r\n            to={files[0].preview}\r\n            \r\n          />\r\n        ) : (\r\n          <Button\r\n            icon=\"external alternate\"\r\n            disabled={true}\r\n            style={{ background: \"#fff\" }}\r\n          />\r\n        )} */}\r\n\r\n        <UploadWidget setFiles={setFiles} />\r\n      </Segment>\r\n\r\n      {files.length !== 0 && (\r\n        <Segment>\r\n          <Iframe\r\n            url={files[0].preview}\r\n            width=\"100%\"\r\n            height=\"380px\"\r\n            position=\"relative\"\r\n          />\r\n        </Segment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentUpload;\r\n","import React from \"react\";\r\nimport {  Grid,  Segment } from \"semantic-ui-react\";\r\nimport AdminLayout from \"../layout/admin/adminLayout\";\r\n\r\nimport CustomerDetails from \"../components/customer/CustomerDetails\";\r\nimport MapsContainer from \"../components/MapsContainer\";\r\n\r\nimport CustomerDocList from \"../components/customer/CustomerDocList\";\r\nimport DocumentUpload from \"../components/customer/DocumentUpload\";\r\n\r\nconst CustomerPage = () => {\r\n  return (\r\n    <AdminLayout>\r\n      <div className=\"customer-header-section\">\r\n        <h1>H & M</h1>\r\n      </div>\r\n      <Segment className=\"customer-details-container\">\r\n        <Grid>\r\n          <Grid.Column width=\"8\">  \r\n            <CustomerDetails />    \r\n          </Grid.Column>\r\n   \r\n          <Grid.Column width=\"8\"> \r\n            <MapsContainer />\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n\r\n      <Grid>\r\n        <Grid.Column width=\"8\">\r\n          <CustomerDocList />\r\n        </Grid.Column>\r\n        <Grid.Column width=\"8\">\r\n \r\n\r\n \r\n \r\n\r\n          <DocumentUpload />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default CustomerPage;\r\n","import React from 'react'\r\nimport { FieldRenderProps } from 'react-final-form';\r\nimport { FormFieldProps, Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<string, HTMLElement>,\r\n    FormFieldProps {}\r\n\r\nconst SelectInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  options,\r\n  loading,\r\n  placeholder,\r\n  meta: { touched, error },\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} width={width}>\r\n      <Select\r\n      loading={loading}\r\n        value={input.value}\r\n        onChange={(e, data) => input.onChange(data.value)}\r\n        placeholder={placeholder}\r\n        options={options}\r\n      />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default SelectInput","import React from \"react\";\r\nimport { Segment, Grid, Button, Header } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { AppMedia } from \"../../constants/MediaScreen\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AdminLayout from \"./adminLayout\";\r\nimport { history } from \"../../..\";\r\n\r\nconst { MediaContextProvider } = AppMedia;\r\n\r\nconst ManageEmployeeLayout: React.FC = ({ children }) => {\r\n  return (\r\n    <MediaContextProvider>\r\n      <AdminLayout>\r\n        <Grid columns=\"2\">\r\n          <Grid.Column width=\"11\">\r\n            {children}\r\n\r\n            {/* vou fazer desta pagina o layout e depois\r\n           vou ter outra para mostrar todos os usuarios numa tabela  */}\r\n          </Grid.Column>\r\n          <Grid.Column width=\"5\" className=\"manage-user-actions\">\r\n            <Segment>\r\n              <Header as=\"h3\" content=\"Action\" />\r\n              <Button\r\n                icon=\"plus\"\r\n                color=\"green\"\r\n                labelPosition=\"left\"\r\n                as={Link}\r\n                to=\"/add-user\"\r\n                fluid\r\n                content=\"Add\"\r\n              />\r\n         \r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </AdminLayout>\r\n    </MediaContextProvider>\r\n  );\r\n};\r\n\r\nexport default observer(ManageEmployeeLayout);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Header,\r\n  Segment,\r\n  Dropdown,\r\n  DropdownProps,\r\n} from \"semantic-ui-react\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport {\r\n  combineValidators,\r\n  isRequired,\r\n  composeValidators,\r\n  matchesField,\r\n} from \"revalidate\";\r\nimport TextInput from \"../../common/form/TextInput\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\n// import ErrorMessage from \"../../../app/layout/ErrorMessage\";\r\n\r\nimport DateInput from \"../../common/form/DateInput\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { IAddEmployeeValues } from \"../../models/employeeModels/employee\";\r\nimport SelectInput from \"../../common/form/SelectInput\";\r\nimport ManageEmployee from \"../../layout/admin/ManageEmployeeLayout\";\r\nimport UploadWidget from \"../../common/upload/UploadWidget\";\r\nimport { history } from \"../../..\";\r\n\r\nconst validate = combineValidators({\r\n  email: isRequired(\"Email\"),\r\n  role: isRequired(\"Role\"),\r\n\r\n  firstName: isRequired(\"First Name\"),\r\n  lastName: isRequired(\"Last Name\"),\r\n  office: isRequired(\"Office\"),\r\n  departmentId: isRequired(\"Department\"),\r\n\r\n  repeatEmail: composeValidators(\r\n    isRequired,\r\n    matchesField(\"email\", \"Email\")\r\n  )(\"Repeat Email\"),\r\n});\r\n\r\nconst validateViewOnly = combineValidators({});\r\n\r\ninterface IProps {}\r\nconst AddEmployee: React.FC<IProps> = (props: any) => {\r\n\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    SubmitEmployeeDetails,\r\n    userRoles,\r\n  } = rootStore.employeeStore;\r\n  const {\r\n    departmentList,\r\n  } = rootStore.officeStore;\r\n\r\n  const {\r\n    listJobTitles,\r\n    jobTitleOptions,\r\n    listSchedulePolicy,\r\n    schedulePolicyOptions,\r\n  } = rootStore.policyStore;\r\n  const {\r\n    company,\r\n    GetCompanyDetail,\r\n    GetNonBasicUsers,\r\n    managersList,\r\n  } = rootStore.adminStore;\r\n\r\n  const [isDepartmentLoading, setIsDepartmentLoading] = useState(false);\r\n  const [viewUserFlag, setViewUserFlag] = useState(false);\r\n  const [header, setHeader] = useState(\"\");\r\n \r\n  const { match } = props;\r\n  let { userId } = match.params;\r\n  let { path } = match;\r\n\r\n  useEffect(() => {\r\n    if (path.includes(\"/update-user\")) setHeader(\"Update User\");\r\n\r\n    if (path.includes(\"/view-user\")) {\r\n      setViewUserFlag(true);\r\n      setHeader(\"View User\");\r\n    } else setHeader(\"Add User\");\r\n  }, [userId, setHeader, path]);\r\n \r\n  return (\r\n    <ManageEmployee>\r\n      <Segment>\r\n        <FinalForm\r\n          onSubmit={(values: IAddEmployeeValues) =>\r\n            SubmitEmployeeDetails(values).catch((error) => ({\r\n              [FORM_ERROR]: error,\r\n            }))\r\n          }\r\n          validate={viewUserFlag ? validateViewOnly : validate}\r\n          render={({\r\n            handleSubmit,\r\n            submitting,\r\n            submitError,\r\n            invalid,\r\n            pristine,\r\n            dirtySinceLastSubmit,\r\n          }) => (\r\n            <Form onSubmit={handleSubmit} error>\r\n              <Header as=\"h2\" content={header} />\r\n\r\n              <Header as=\"h3\" content=\"User Details\" />\r\n\r\n              <Form.Group widths=\"equal\">\r\n                <Field\r\n                  name=\"firstName\"\r\n                  component={TextInput}\r\n                  placeholder=\"First Name\"\r\n                  readOnly={viewUserFlag}\r\n                />\r\n                <Field\r\n                  name=\"lastName\"\r\n                  component={TextInput}\r\n                  placeholder=\"Last Name\"\r\n                  readOnly={viewUserFlag}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group widths=\"equal\">\r\n                <Field\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  component={TextInput}\r\n                  placeholder=\"Email Address\"\r\n                  readOnly={viewUserFlag}\r\n                />\r\n\r\n                <Field\r\n                  name=\"repeatEmail\"\r\n                  component={TextInput}\r\n                  type=\"email\"\r\n                  placeholder=\"Repeat Email Address\"\r\n                  readOnly={viewUserFlag}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group widths=\"equal\">\r\n                <Field\r\n                  name=\"role\"\r\n                  component={SelectInput}\r\n                  placeholder=\"Role\"\r\n                  options={userRoles}\r\n                  readOnly={viewUserFlag}\r\n                />\r\n\r\n                <Field\r\n                  className={\r\n                    departmentList.length === 0 ? \"is-readOnly-dropdown\" : \"\"\r\n                  }\r\n                  name=\"departmentId\"\r\n                  component={SelectInput}\r\n                  placeholder=\"Department\"\r\n                  disabled={departmentList.length === 0}\r\n                  loading={isDepartmentLoading}\r\n                  options={departmentList}\r\n                  readOnly={viewUserFlag}\r\n                />\r\n              </Form.Group>\r\n\r\n              <br />\r\n              {viewUserFlag ? (\r\n                <Button\r\n                  onClick={() => history.goBack()}\r\n                  primary\r\n                  content=\"Return\"\r\n                  fluid\r\n                  icon=\"arrow left\"\r\n                />\r\n              ) : (\r\n                <Button\r\n                  disabled={(invalid && !dirtySinceLastSubmit) || pristine}\r\n                  loading={submitting}\r\n                  color=\"teal\"\r\n                  content=\"Submit\"\r\n                  fluid\r\n                  icon=\"add\"\r\n                />\r\n              )}\r\n            </Form>\r\n          )}\r\n        />\r\n      </Segment>\r\n    </ManageEmployee>\r\n  );\r\n};\r\n\r\nexport default observer(AddEmployee);\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Icon, Menu, Search, Segment, Table } from \"semantic-ui-react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst UsersList = () => {\r\n    return (\r\n      <Segment>\r\n        <Header  content=\"User List\" />\r\n        <Search />\r\n        <Table\r\n          basic=\"very\"\r\n          striped\r\n          className=\"user-list\"\r\n          columns=\"3\"\r\n        >\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell content=\"Name\" />\r\n              <Table.HeaderCell content=\"Email\" />\r\n              <Table.HeaderCell content=\"Role\" />\r\n              <Table.HeaderCell />\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            <Table.Row>\r\n              <Table.Cell content=\"Julios Mokoko\" />\r\n              <Table.Cell content=\"julios.mokoko@mcpit.ie\" />\r\n              <Table.Cell content=\"Admin\" />\r\n              <Table.Cell className='actions' >\r\n                <Button\r\n                  color=\"yellow\"\r\n                  as={Link}\r\n                  to={`/view-user/${uuidv4()}`}\r\n                  icon=\"eye\"\r\n                />\r\n               \r\n                <Button\r\n                  icon=\"redo\"\r\n                  primary\r\n                  as={Link}\r\n                  to={`/update-user/${uuidv4()}`}\r\n                />\r\n                <Button\r\n                  icon=\"trash\"\r\n                  color='red'\r\n                  as={Link}\r\n                  to={`/update-user/${uuidv4()}`}\r\n                />\r\n              </Table.Cell>\r\n            </Table.Row>\r\n\r\n            <Table.Row>\r\n              <Table.Cell content=\"Kim Parnassian\" />\r\n              <Table.Cell content=\"kim.par@mcpit.ie\" />\r\n              <Table.Cell content=\"User\" />\r\n              <Table.Cell className='actions' >\r\n              <Button\r\n                  color=\"yellow\"\r\n                  as={Link}\r\n                  to={`/view-user/${uuidv4()}`}\r\n                  icon=\"eye\"\r\n                />\r\n               \r\n                <Button\r\n                  icon=\"redo\"\r\n                  primary\r\n                  as={Link}\r\n                  to={`/update-user/${uuidv4()}`}\r\n                />\r\n                <Button\r\n                  icon=\"trash\"\r\n                  color='red'\r\n                  as={Link}\r\n                  to={`/update-user/${uuidv4()}`}\r\n                />\r\n              </Table.Cell>\r\n            </Table.Row>\r\n            <Table.Row>\r\n              <Table.Cell content=\"Joaquim Parma\" />\r\n              <Table.Cell content=\"joaquim.par@mcpit.ie\" />\r\n              <Table.Cell content=\"Manager\" />\r\n              <Table.Cell className='actions' >\r\n              <Button\r\n                  color=\"yellow\"\r\n                  as={Link}\r\n                  to={`/view-user/${uuidv4()}`}\r\n                  icon=\"eye\"\r\n                />\r\n               \r\n                <Button\r\n                  icon=\"redo\"\r\n                  primary\r\n                  as={Link}\r\n                  to={`/update-user/${uuidv4()}`}\r\n                />\r\n                <Button\r\n                  icon=\"trash\"\r\n                  color='red'\r\n                  as={Link}\r\n                  to={`/update-user/${uuidv4()}`}\r\n                />\r\n              </Table.Cell>\r\n            </Table.Row>\r\n            <Table.Row>\r\n              <Table.Cell content=\"James Marcus\" />\r\n              <Table.Cell content=\"james.marcus@mcpit.ie\" />\r\n              <Table.Cell content=\"User\" />\r\n              <Table.Cell className='actions' >\r\n               <Button\r\n                  color=\"yellow\"\r\n                  as={Link}\r\n                  to={`/view-user/${uuidv4()}`}\r\n                  icon=\"eye\"\r\n                />\r\n               \r\n                <Button\r\n                  icon=\"redo\"\r\n                  primary\r\n                  as={Link}\r\n                  to={`/update-user/${uuidv4()}`}\r\n                />\r\n                <Button\r\n                  icon=\"trash\"\r\n                  color='red'\r\n                  as={Link}\r\n                  to={`/update-user/${uuidv4()}`}\r\n                />\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          </Table.Body>\r\n\r\n          <Table.Footer>\r\n            <Table.Row>\r\n              <Table.HeaderCell colSpan=\"3\">\r\n                <Menu pagination>\r\n                  <Menu.Item as=\"a\" icon>\r\n                    <Icon name=\"chevron left\" />\r\n                  </Menu.Item>\r\n                  <Menu.Item as=\"a\">1</Menu.Item>\r\n                  <Menu.Item as=\"a\">2</Menu.Item>\r\n                  <Menu.Item as=\"a\">3</Menu.Item>\r\n                  <Menu.Item as=\"a\">4</Menu.Item>\r\n                  <Menu.Item as=\"a\" icon>\r\n                    <Icon name=\"chevron right\" />\r\n                  </Menu.Item>\r\n                </Menu>\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell />\r\n            </Table.Row>\r\n          </Table.Footer>\r\n        </Table>\r\n      </Segment>\r\n    );\r\n}\r\n\r\nexport default UsersList\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport UsersList from '../../components/user/UsersList';\r\nimport ManageEmployeeLayout from '../../layout/admin/ManageEmployeeLayout'\r\n\r\n\r\nconst ManageUsers = () => {\r\n  return (\r\n    <ManageEmployeeLayout>\r\n      <div>\r\n   \r\n        <UsersList />\r\n      </div>\r\n    </ManageEmployeeLayout>\r\n  );\r\n};\r\n\r\nexport default observer(ManageUsers);\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport \"../../styles/App.css\";\r\nimport \"../../styles/dashboard.css\";\r\nimport \"../../styles/protocols.css\";\r\nimport \"../../styles/NavMenu.css\";\r\nimport \"../../styles/profile.css\";\r\nimport \"../../styles/timeInput.css\";\r\nimport \"../../styles/customer.css\";\r\nimport \"../../styles/manageUser.css\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\nimport ModalContainer from \"../../common/modals/ModalContainer\";\r\nimport home from \"../../views/home\";\r\nimport AuthorizeRoute from \"../../authentication/AuthorizeRoute\";\r\nimport { NotFound } from \"../../common/error/NotFound\";\r\nimport EmployeeList from \"../../components/EmployeeList\";\r\nimport \"mobx-react-lite/batchingForReactDom\";\r\nimport UserProfile from \"../../views/UserProfile\";\r\nimport AdminProfile from \"../../views/AdminProfile\";\r\n\r\nimport ManageCustomers from \"../../views/admin/ManageCustomers\";\r\nimport CustomerPage from \"../../views/CustomerPage\";\r\nimport CustomerDetails from \"../../components/customer/CustomerDetails\";\r\nimport AddEmployee from \"../../features/forms/AddEmployee\";\r\nimport ManageUsers from \"../../views/admin/ManageUsers\";\r\n\r\nconst App: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { token, setAppLoaded, appLoaded } = rootStore.commonStore;\r\n  const { getUser } = rootStore.userStore;\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      getUser().finally(() => setAppLoaded());\r\n    } else {\r\n      setAppLoaded();\r\n    }\r\n  }, [getUser, setAppLoaded, token]);\r\n\r\n  if (!appLoaded) return <LoadingSpinner content=\"Loading...\" />;\r\n  return (\r\n    <Fragment>\r\n      <ModalContainer />\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={home} />\r\n          <AuthorizeRoute path=\"/employee-directory\" component={EmployeeList} />\r\n          <AuthorizeRoute path=\"/employee-directory\" component={EmployeeList} />\r\n          <AuthorizeRoute path=\"/admin/dashboard\" component={AdminProfile} />\r\n          <AuthorizeRoute path=\"/user/dashboard\" component={UserProfile} />\r\n          <AuthorizeRoute path=\"/manager/dashboard\" component={AdminProfile} />\r\n          <AuthorizeRoute path=\"/manage-customer\" component={ManageCustomers} />\r\n          <AuthorizeRoute\r\n            path=\"/customer/:customerId\"\r\n            component={CustomerPage}\r\n          />\r\n          <AuthorizeRoute path=\"/manage-user\" component={ManageUsers} />\r\n          <AuthorizeRoute\r\n            path=\"/add-user\"\r\n            component={AddEmployee }\r\n          />\r\n          <AuthorizeRoute\r\n            path=\"/update-user/:userId\"\r\n            component={AddEmployee}\r\n          />\r\n            <AuthorizeRoute\r\n            path=\"/view-user/:userId\"\r\n            component={AddEmployee}\r\n          />\r\n          <Route path=\"/customer-registration\" component={CustomerDetails} />\r\n          <Route path=\"*\" component={NotFound} />\r\n\r\n          {/* <AuthorizeRoute path=\"/dashboard\" component={manageCompanyDetails} />\r\n          \r\n          <AuthorizeRoute path=\"/employee-directory\" component={EmployeeList} />\r\n          <AuthorizeRoute exact path=\"/add-employee\" component={AddEmployee} />\r\n          <AuthorizeRoute exact path=\"/manage-policies\" component={AddPolicy} />\r\n          <AuthorizeRoute exact path=\"/company-directory\" component={AddDepartment} />\r\n          <AuthorizeRoute exact path=\"/add-policies\" component={AddPolicy} />\r\n          <AuthorizeRoute exact path=\"/update-policies\" component={UpdatePolicy}/>\r\n          <AuthorizeRoute exact path=\"/add-department\" component={AddDepartment}/>\r\n          <AuthorizeRoute exact path=\"/log-hours\" component={LogHours} />\r\n          <AuthorizeRoute exact path=\"/submit-leaves\" component={AddLeaves} />\r\n          <AuthorizeRoute exact path=\"/my-docs\" component={MyDocs} />\r\n          <AuthorizeRoute exact path=\"/my-finances\" component={MyFiances} /> */}\r\n        </Switch>\r\n      </Router>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(observer(App));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../src/app/styles/index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router';\r\nimport {createBrowserHistory} from 'history';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport dateFnsLocalizer from 'react-widgets-date-fns';\r\nimport App from './app/layout/common/App';\r\n\r\n dateFnsLocalizer();\r\n\r\nexport const history = createBrowserHistory();\r\nReactDOM.render(\r\n  <Router history={history}>\r\n {/* <React.StrictMode>     </React.StrictMode> */}\r\n    \r\n\r\n      <App/>\r\n \r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}