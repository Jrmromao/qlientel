{"version":3,"sources":["assets/g1.png","assets/g2.png","assets/map.png","serviceWorker.ts","app/layout/common/LoadingSpinner.tsx","app/API/agents.ts","app/stores/userStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/menuBarStore.ts","app/stores/employeeStore.ts","app/stores/companyStore.ts","app/stores/timeSheetStore.ts","app/stores/myDataStore.ts","app/stores/managerStore.ts","app/stores/adminStore.ts","app/stores/manageEmployeeStore.ts","app/stores/officeStore.ts","app/stores/policyStore.ts","app/stores/leavesStore.ts","app/stores/financesStore.ts","app/stores/customerStore.ts","app/stores/rootStore.ts","app/common/modals/ModalContainer.tsx","app/common/form/TextInput.tsx","app/layout/common/ErrorMessage.tsx","app/features/forms/LoginForm.tsx","app/features/forms/registerForm.tsx","app/views/home.tsx","app/authentication/AuthorizeRoute.tsx","app/common/error/NotFound.tsx","app/components/TextIcon.jsx","app/layout/common/SideMenu.tsx","app/layout/common/Notification.tsx","app/layout/common/TopMenu.tsx","app/layout/admin/adminLayout.tsx","app/layout/admin/ProfileLayout.tsx","app/components/EmployeeList.tsx","app/constants/MediaScreen.ts","app/components/MyMenu.tsx","app/components/ProfilePhotoText.tsx","app/components/ProfileHeader.tsx","app/layout/common/ProfileLayout.tsx","app/views/UserProfile.tsx","app/components/customer/CustomerList.tsx","app/components/dashnoard/GlobalStorageUsageChart.tsx","app/components/dashnoard/RecentActivity.tsx","app/components/dashnoard/StorageUsageByCustomerChart.tsx","app/views/AdminProfile.tsx","app/features/forms/AddCustomer.tsx","app/views/admin/ManageCustomers.tsx","app/components/customer/CustomerDetails.tsx","app/components/MapsContainer.tsx","app/components/customer/CustomerDocList.tsx","app/common/upload/UploadWidget.tsx","app/components/customer/DocumentUpload.tsx","app/views/CustomerPage.tsx","app/common/form/SelectInput.tsx","app/layout/admin/ManageEmployeeLayout.tsx","app/features/forms/AddEmployee.tsx","app/components/user/UsersList.tsx","app/views/admin/ManageUsers.tsx","app/layout/common/App.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","LoadingSpinner","inverted","content","Dimmer","active","Loader","axios","defaults","baseURL","process","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","undefined","message","toast","status","data","history","push","removeItem","info","method","errors","hasOwnProperty","responseBody","url","get","then","body","post","put","values","formData","FormData","append","departmentId","email","firstName","lastName","reportsTo","role","salary","toString","schedulePolicy","title","contractDoc","create","update","customerId","list","companyId","listCustomerDocs","employeeId","getDetails","search","edit","jobTitleId","schedulePolicyId","Current","login","register","find","listEmployees","findAll","officeId","getAll","employeeID","UserStore","rootStore","this","user","observable","computed","action","a","agents","runInAction","commonStore","setToken","modalStore","closeModal","toLowerCase","console","log","CommonStore","reaction","setItem","appLoaded","ModalStore","shallow","open","modal","MenuBarStore","sideMenuVisible","employeeMenuItemVis","screenSize","searchBarVisible","EmployeeStore","Date","file","contractFile","userRoles","newDate","startDate","employee","tabSelected","tabIndex","formValues","userStore","getUser","CompanyStore","CompanyData","TimeSheetStore","getWeek","now","weekDateRange","format","startOfWeek","addDays","endOfWeek","MyDataStore","readOnlyFlag","ManagerStore","department","departmentData","AdminStore","companyData","company","tempManagersList","managersList","ManageEmployeeStore","employeesData","OfficeStore","isMainHQ","departments","departmentList","isMainHR","result","officeList","PolicyStore","titleId","jobTitleOptions","schedulePolicyOptions","LeavesStore","leavesData","toDate","fromDate","Error","dateError","FinancesStore","CustomerStore","customer","customerList","configure","enforceActions","RootStoreContext","createContext","customerStore","menuBarStore","employeeStore","companyStore","timeSheetStore","myDataStore","managerStore","adminStore","manageEmployeeStore","officeStore","policyStore","leavesStore","expensesStore","observer","useContext","Modal","className","onClose","size","Content","TextInput","input","width","readOnly","type","placeholder","label","pattern","meta","touched","Form","Field","Label","basic","color","ErrorMessage","text","Message","Header","statusText","validate","combineValidators","isRequired","password","LoginForm","Login","onSubmit","catch","FORM_ERROR","render","handleSubmit","submitting","submitError","invalid","pristine","dirtySinceLastSubmit","as","textAlign","name","component","Button","disabled","loading","fluid","icon","to","repeatEmail","composeValidators","matchesField","repeatPassword","RegisterForm","isLoggedIn","openModal","Segment","vertical","Container","displayName","Link","onClick","Component","rest","props","NotFound","Icon","Inline","goBack","primary","TextIcon","style","alignSelf","paddingLeft","colorTxt","styleTT","borderRadius","padding","display","Popup","hideText","trigger","toolTipContent","position","hidden","children","useState","activeItem","setActiveItem","handleItemClick","event","Menu","fixed","borderless","Item","Notification","pinned","logout","floating","circular","Image","src","Dropdown","simple","direction","marginTop","ProfileLayout","EmployeeList","loadEmployeesData","setLoading","useEffect","AppMedia","createMedia","breakpoints","mobile","computer","largeScreen","widescreen","MediaContextProvider","pathname","Grid","centered","columns","Column","pointing","secondary","marginLeft","verticalAlign","List","UserProfile","CustomerList","Search","Table","Row","HeaderCell","Body","Cell","labelPosition","uuidv4","Footer","colSpan","pagination","GlobalStorageUsageChart","g1","Feed","Event","image","Summary","date","StorageUsageByCustomerChart","g2","AdminProfile","addCustomer","Group","widths","ManageCustomers","CustomerDetails","Description","MapsContainer","map","CustomerDocList","dropzoneStyles","border","borderColor","paddingTop","height","dropzoneActive","UploadWidget","setFiles","setContractFile","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","accept","getRootProps","getInputProps","isDragActive","DocumentUpload","files","length","CustomerPage","SelectInput","options","Select","value","onChange","e","office","validateViewOnly","SubmitEmployeeDetails","listJobTitles","listSchedulePolicy","GetCompanyDetail","GetNonBasicUsers","isDepartmentLoading","viewUserFlag","setViewUserFlag","header","setHeader","userId","params","path","includes","UsersList","striped","withRouter","setAppLoaded","finally","exact","home","ManageUsers","AddEmployee","dateFnsLocalizer","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79aab8fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/g1.1534633c.png\";","module.exports = __webpack_public_path__ + \"static/media/g2.696fa322.png\";","module.exports = __webpack_public_path__ + \"static/media/map.6127d781.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nconst LoadingSpinner: React.FC<{ inverted?: boolean; content?: string }> = ({\n  inverted = true,\n  content\n}) => {\n  return (\n\n    <Dimmer active inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n\n  );\n};\n\nexport default LoadingSpinner;","import axios, { AxiosResponse } from \"axios\";\r\nimport { IUser, IUserFormValues, IRole } from \"../models/usersModels/user\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  IEmployeeFormValues,\r\n  IEmployeeData,\r\n  IDepartment,\r\n  IEmployeeDetails,\r\n  IAddEmployeeValues,\r\n  IDocuments,\r\n} from \"../models/employeeModels/employee\";\r\nimport { IAddSubmitCompany, ICompany } from \"../models/companyModels/ICompany\";\r\nimport { IOffice, IOfficeList } from \"../models/companyModels/IOffices\";\r\nimport {\r\n  IJobTitle,\r\n  IJobTitleItemList,\r\n  ISchedulePolicy,\r\n  ISchedulePolicyItemList,\r\n} from \"../models/commonModels/companyPolicies\";\r\nimport { ILeaves, ILeavesRequest } from \"../models/employeeModels/leaves\";\r\nimport { ICustomer } from \"../models/customerModels/customer\";\r\n// default\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\n\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(undefined, (error) => {\r\n  if (error.message === \"Network Error\" && !error.response) {\r\n    toast.error(\"Network error - make sure API is running!\");\r\n  }\r\n  const { status, data, config, headers } = error.response;\r\n  if (status === 404) {\r\n    history.push(\"/ups\");\r\n  }\r\n  if (\r\n    status === 401 &&\r\n    headers[\"www-authenticate\"] ===\r\n      'Bearer error=\"invalid_token\", error_description=\"The token is expired\"'\r\n  ) {\r\n    window.localStorage.removeItem(\"jwt\");\r\n    history.push(\"/\");\r\n    toast.info(\"Your session has expired, please login again\");\r\n  }\r\n  if (\r\n    status === 400 &&\r\n    config.method === \"get\" &&\r\n    data.errors.hasOwnProperty(\"id\")\r\n  ) {\r\n    history.push(\"/ups\");\r\n  }\r\n  if (status === 500) {\r\n    toast.error(\"Server error - check the terminal for more info!\");\r\n  }\r\n  throw error.response;\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\n/**\r\n * only manager will be abe to see the employees docs and personal information\r\n * maybe department manager wont be able to see bank details - need to discuss this\r\n *\r\n * */\r\n\r\nconst request = {\r\n  get: (url: string) => axios.get(url).then(responseBody),\r\n  post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n  put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n  delete: (url: string) => axios.delete(url).then(responseBody),\r\n  employeeForm: (url: string, values: IAddEmployeeValues) => {\r\n    var formData = new FormData();\r\n    formData.append(\"departmentId\", values.departmentId);\r\n    formData.append(\"email\", values.email);\r\n    formData.append(\"firstName\", values.firstName);\r\n    formData.append(\"lastName\", values.lastName);\r\n    formData.append(\"reportsTo\", values.reportsTo);\r\n    formData.append(\"role\", values.role);\r\n    formData.append(\"salary\", values.salary.toString());\r\n    formData.append(\"schedulePolicy\", values.schedulePolicy);\r\n    //formData.append(\"startingDate\", values.startingDate.toString());\r\n    formData.append(\"title\", values.title);\r\n    formData.append(\"contractDoc\", values.contractDoc[0]);\r\n\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { \"Content-type\": \"multipart/form-data\" },\r\n      })\r\n      .then(responseBody);\r\n  },\r\n};\r\n\r\n// all the methods to support the user functionality\r\nconst user = {\r\n  Current: (): Promise<IUser> => request.get(\"/user/current-user\"),\r\n  login: (data: IUserFormValues): Promise<IUser> =>\r\n    request.post(\"/user/login\", data),\r\n  register: (data: IUserFormValues) => request.post(\"/account/register\", data),\r\n  //retrieve docs\r\n  //submit docs\r\n  //remove doc\r\n};\r\n\r\n//load non basic users - admin & managers\r\nconst nonBasicUsers = {\r\n  list: (companyId: string): Promise<IUser[]> =>\r\n    request.get(`system/get-non-basic-users/${companyId}`),\r\n};\r\n\r\nconst employee = {\r\n  getDetails: (employeeId: string): Promise<IEmployeeData> =>\r\n    request.get(`/employee/get-details/${employeeId}`),\r\n  create: (data: IAddEmployeeValues) =>\r\n    request.employeeForm(\"/employee/add-employee\", data),\r\n  update: (employeeId: string, data: IEmployeeFormValues) =>\r\n    request.put(`/employee/update-employee/${employeeId}`, data),\r\n  search: (data: string): Promise<IEmployeeFormValues[]> =>\r\n    request.get(`/employee/search/${data}`),\r\n};\r\n\r\nconst department = {\r\n  create: (data: IDepartment) => request.post(`/admin/add-department/`, data),\r\n  find: (departmentId: string): Promise<IDepartment> =>\r\n    request.get(`/managerProfile/department/${departmentId}`),\r\n  update: (departmentId: string, data: IOffice) =>\r\n    request.put(`/admin/update-department-details/${departmentId}`, data),\r\n  findAll: (officeId: string): Promise<IDepartment[]> =>\r\n    request.get(`/system/get-departments-by-office/${officeId}`),\r\n};\r\n\r\nconst office = {\r\n  create: (data: IOffice) => request.post(\"/admin/add-office\", data),\r\n  update: (officeId: string, data: IOffice) =>\r\n    request.put(`/admin/update-office-details/${officeId}`, data),\r\n  find: (officeId: string): Promise<IOffice[]> =>\r\n    request.get(`/admin/get-office-details/${officeId}`),\r\n  getAll: (employeeID: string): Promise<IOfficeList[]> =>\r\n    request.get(`/system/get-offices/${employeeID}`),\r\n};\r\n\r\nconst company = {\r\n  create: (data: IAddSubmitCompany) =>\r\n    request.post(\"/company/add-company\", data),\r\n  find: (employeeId: string): Promise<ICompany> =>\r\n    request.get(`/admin/get-company-details/${employeeId}`),\r\n  listEmployees: (companyId: string): Promise<IEmployeeDetails[]> =>\r\n    request.get(`/admin/get-company-employees/${companyId}`),\r\n};\r\n\r\nconst search = {\r\n  employee: (query: string, companyId: string): Promise<IEmployeeDetails[]> =>\r\n    request.get(`/search/search-employee/${companyId}/${query}`),\r\n};\r\n\r\nconst schedulePolicy = {\r\n  create: (data: any): Promise<AxiosResponse> =>\r\n    request.post(`/system/create-schedule-policy`, data),\r\n  update: (schedulePolicyId: string, data: any): Promise<AxiosResponse> =>\r\n    request.put(`/system/create-schedule-titles/${schedulePolicyId}`, data),\r\n  get: (jobTitleId: string): Promise<ISchedulePolicy> =>\r\n    request.get(`/system/get-job-titles/${jobTitleId}`),\r\n  list: (companyId: string): Promise<ISchedulePolicyItemList[]> =>\r\n    request.get(`/system/list-schedule-policy/${companyId}`),\r\n};\r\n\r\nconst jobTitle = {\r\n  create: (data: any): Promise<AxiosResponse> =>\r\n    request.post(`/system/create-job-titles`, data),\r\n  edit: (jobTitleId: string, data: IJobTitle): Promise<AxiosResponse> =>\r\n    request.put(`/system/create-job-titles/${jobTitleId}`, data),\r\n  list: (companyId: string): Promise<IJobTitleItemList[]> =>\r\n    request.get(`/system/list-job-titles/${companyId}`),\r\n  get: (jobTitleId: string): Promise<IJobTitle> =>\r\n    request.get(`/system/get-job-titles/${jobTitleId}`),\r\n};\r\n\r\nconst expenseClaim = {};\r\n\r\nconst leaves = {\r\n  request: (data: ILeavesRequest): Promise<AxiosResponse> =>\r\n    request.post(\"/employee/leave-request\", data),\r\n  list: (employeeId: string): Promise<ILeaves> =>\r\n    request.get(`/employee/get-leaves-data/${employeeId}`),\r\n};\r\n\r\nconst roles = {\r\n  list: (): Promise<IRole[]> => request.get(\"/system/get-roles\"),\r\n};\r\n\r\nconst customer = {\r\n  create: (data: ICustomer): Promise<AxiosResponse> =>\r\n    request.post(`/customer/crate-customer`, data),\r\n  update: (customerId: string, data: ICompany): Promise<AxiosResponse> =>\r\n    request.put(`/customer/update-customer-details/${customerId}`, data),\r\n  list: (companyId: string): Promise<ICustomer[]> =>\r\n    request.get(`/customer/list-customers/${companyId}`),\r\n  // customer documents\r\n  listCustomerDocs: (customerId: string): Promise<IDocuments[]> =>\r\n    request.get(`/customer/list-customers-documents/${customerId}`),\r\n\r\n};\r\n\r\nexport default {\r\n  customer,\r\n  expenseClaim,\r\n  leaves,\r\n  employee,\r\n  jobTitle,\r\n  schedulePolicy,\r\n  user,\r\n  company,\r\n  department,\r\n  office,\r\n  search,\r\n  roles,\r\n  nonBasicUsers,\r\n};\r\n","import { observable, computed, action, runInAction } from \"mobx\";\r\nimport { IUser, IUserFormValues } from \"../models/usersModels/user\";\r\nimport agents from \"../API/agents\";\r\nimport { RootStore } from \"./rootStore\";\r\nimport { history } from \"../..\";\r\nimport { IRegisterFormValues } from \"../models/companyModels/company\";\r\n\r\nexport default class UserStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable user: IUser | null = null;\r\n\r\n  @computed get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  @action Login = async (values: IUserFormValues) => {\r\n    try {\r\n          const user = await agents.user.login(values);\r\n          if (user) {\r\n            runInAction(() => {\r\n              this.user = user;\r\n            });\r\n\r\n            this.rootStore.commonStore.setToken(user.token);\r\n            this.rootStore.modalStore.closeModal();\r\n            history.push(`/${this.user?.role[0].toLowerCase()}/dashboard/`);\r\n          }\r\n        } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  @action register = async (values: IRegisterFormValues) => {\r\n    try { \r\n      const user = await agents.user.register(values);\r\n      //this.rootStore.commonStore.setToken(user.token);\r\n      this.rootStore.modalStore.closeModal();\r\n      // history.push(\"/dashboard\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  @action getUser = async () => {\r\n    try {\r\n      const user = await agents.user.Current();\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  @action logout = () => {\r\n    this.rootStore.commonStore.setToken(null);\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n}\r\n","import {RootStore} from './rootStore';\nimport { observable, action, reaction } from 'mobx';\n\nexport default class CommonStore {\n    rootStore: RootStore;\n    constructor(rootStore: RootStore) {\n        this.rootStore = rootStore;\n\n        reaction(\n            () => this.token,\n            token => {\n                if (token) {\n                    window.localStorage.setItem('jwt', token);\n                } else {\n                    window.localStorage.removeItem('jwt')\n                }\n            }\n        )\n    }\n\n    @observable token: string | null = window.localStorage.getItem('jwt');\n    @observable appLoaded = false;\n\n    @action setToken = (token: string | null) => {\n        this.token = token;\n    }\n\n    @action setAppLoaded = () => {\n        this.appLoaded = true;\n    }\n}","import { RootStore } from \"./rootStore\";\nimport { observable, action } from \"mobx\";\n\nexport default class ModalStore {\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @observable.shallow modal = {\n    open: false,\n    body: null,\n  };\n\n  @action openModal = (content: any) => {\n    this.modal.body = content;\n    this.modal.open = true;\n  };\n\n  @action closeModal = () => {\n    this.modal.body = null;\n    this.modal.open = false;\n  };\n\n\n}\n","import { RootStore } from \"./rootStore\";\nimport { observable, action, runInAction } from \"mobx\";\n\nexport default class MenuBarStore {\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n  @observable sideMenuVisible: boolean = false;\n  @observable searchBarVisible: boolean = true;\n  @observable employeeMenuItemVis: boolean = false;\n\n  @action toggleSideMenu = async () =>\n    runInAction(() => (this.sideMenuVisible = !this.sideMenuVisible));\n\n\n    @action toggleEmployeeMenuItem = async () =>\n    runInAction(() => (this.employeeMenuItemVis = !this.employeeMenuItemVis));\n\n\n\n  @action autoToggleSideMenu = async (screenSize: number) => {\n    if (screenSize < 700) {\n      runInAction(() => (this.searchBarVisible = false));\n      runInAction(() => (this.sideMenuVisible = true));\n    } else {\n      runInAction(() => (this.sideMenuVisible = false));\n      runInAction(() => (this.searchBarVisible = true));\n    }\n  };\n}\n","import { RootStore } from \"./rootStore\";\nimport { observable, action, runInAction } from \"mobx\";\nimport {\n  IEmployeeFormValues,\n  EmployeeFormValues,\n  IAddEmployeeValues,\n} from \"../models/employeeModels/employee\";\nimport agents from \"../API/agents\";\nimport { IRole } from \"../models/usersModels/user\";\n\nexport default class EmployeeStore {\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @observable tabIndex: string = \"0\";\n  @observable stackButtons: boolean = false;\n  @observable userRoles: IRole[] = [];\n  @observable contractFile: Blob[] = [];\n  @observable startDate: Date = new Date();\n\n  @observable employee: EmployeeFormValues | null = null;\n\n  @action setContractFile = async (file: any) => {\n    this.contractFile = file;\n  };\n\n  @action loadUserRole = async () => {\n    try {\n      const data = await agents.roles.list();\n\n      if (data)\n        runInAction(() => {\n          this.userRoles = data;\n        });\n    } catch (error) {\n      throw error;\n    }\n  };\n  @action SetStartDate = async (newDate: Date) => {\n    runInAction(() => {\n      this.startDate = newDate;\n    });\n  };\n  @action loadMyData = async (employeeID: string) => {\n    try {\n      let employee: any = await agents.employee.getDetails(employeeID);\n      if (employee)\n        runInAction(() => {\n          this.employee = employee;\n        });\n      return employee;\n    } catch (error) {\n      throw error;\n    }\n  };\n  @action ChangeTab = async (tabSelected: string) => {\n    runInAction(() => {\n      this.tabIndex = tabSelected;\n    });\n  };\n  @action UpdateEmployeeDetails = async (\n    employeeId: string,\n    formValues: IEmployeeFormValues\n  ) => {\n    try {\n      const result = await agents.employee.update(employeeId, formValues);\n      if (result) this.rootStore.userStore.getUser();\n    } catch (error) {\n      throw error;\n    }\n  };\n  @action SubmitEmployeeDetails = async (data: IAddEmployeeValues) => {\n    try {\n\n\n\n\n      data.contractDoc = this.contractFile;\n\n      console.log(data);\n\n     await agents.employee.create(data);\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n","import { RootStore } from \"./rootStore\";\nimport { action, runInAction, observable } from \"mobx\";\nimport agents from \"../API/agents\";\nimport {\n  IAddFormDataCompany,\n  IAddSubmitCompany,\n} from \"../models/companyModels/ICompany\";\n\nexport default class CompanyStore {\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @observable CompanyData: IAddSubmitCompany | null = null;\n\n  @action autoStackButtonsDisplay = async (screenSize: number) => {\n    if (screenSize < 700) runInAction(() => {});\n    else runInAction(() => {});\n  };\n\n  @action SubmitCompanyDetails = async (data: IAddFormDataCompany) => {\n    try {\n      runInAction(() => {\n        // this.CompanyData = {\n        //   company: {\n        //     name: data.companyName,\n        //     phoneNumber: data.phoneNumber,\n        //     fiscalNumber: data.fiscalNumber,\n        //   },\n\n        //   office: {\n        //     officeName: data.officeName,\n        //     code: data.code,\n        //     address: {\n        //       addressLine1: data.addressLine1,\n        //       addressLine2: data.addressLine2,\n        //       postCode: data.postCode,\n        //       country: data.country,\n        //       county: data.county,\n        //     },\n        //   },\n        // };\n      });\n\n      let unit = await agents.company.create(this.CompanyData!);\n      if (unit) console.log(\"Added\");\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n","import { RootStore } from \"./rootStore\";\nimport { observable, action, runInAction } from \"mobx\";\n// import { getDate } from \"date-fns/esm\";\nimport { getWeek, startOfWeek, addDays, endOfWeek, format } from \"date-fns\";\n\nexport default class TimeSheetStore {\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @observable currentWeek: number = getWeek(Date.now());\n  @observable weekDateRange: string[] = [];\n\n  @action calculateDates = async () => {\n    try {\n      runInAction(() => {\n        this.weekDateRange[0] = format(\n          new Date(startOfWeek(Date.now())),\n          \"MM/dd\"\n        );\n        this.weekDateRange[1] = format(\n          new Date(addDays(startOfWeek(Date.now()), 1)),\n          \"MM/dd\"\n        );\n        this.weekDateRange[2] = format(\n          new Date(addDays(startOfWeek(Date.now()), 2)),\n          \"MM/dd\"\n        );\n        this.weekDateRange[3] = format(\n          new Date(addDays(startOfWeek(Date.now()), 3)),\n          \"MM/dd\"\n        );\n        this.weekDateRange[4] = format(\n          new Date(addDays(startOfWeek(Date.now()), 4)),\n          \"MM/dd\"\n        );\n        this.weekDateRange[5] = format(\n          new Date(addDays(startOfWeek(Date.now()), 5)),\n          \"MM/dd\"\n        );\n        this.weekDateRange[6] = format(\n          new Date(endOfWeek(Date.now())),\n          \"MM/dd\"\n        );\n      });\n    } catch (error) {}\n  };\n\n  @action submitTime = async (data: any) => {\n\n    console.log(data);\n    \n  };\n}\n","import { RootStore } from \"./rootStore\";\nimport { observable, action, runInAction } from \"mobx\";\n// import { IEmployeeFormValue } from \"../models/employeeModels/employee\";\n// import agents from \"../API/agents\";\n\nexport default class MyDataStore {\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @observable readOnlyFlag: boolean = false;\n\n  @action setEditTrue = async () => {\n    runInAction(() => {\n      this.readOnlyFlag = !this.readOnlyFlag;\n    });\n  };\n\n  \n  @action SageChanges = async () => {\n    runInAction(() => {\n      this.readOnlyFlag = !this.readOnlyFlag;\n\n    });\n  };\n}\n","import { RootStore } from \"./rootStore\";\nimport { observable, action, runInAction } from \"mobx\";\nimport { IDepartment } from \"../models/employeeModels/employee\";\nimport agents from \"../API/agents\";\nimport { IUser } from \"../models/usersModels/user\";\n\nexport default class ManagerStore {\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @observable tabIndex: string = \"0\";\n  @observable departmentData: IDepartment | null = null\n\n  @action ChangeTab = async (tabSelected: string) => {\n    runInAction(() => {\n      this.tabIndex = tabSelected;\n    });\n  };\n\n  @action loadDepartmentData = async (user: IUser) => {\n    try {\n\n\n      if(user.role[0] === 'Manager')\n          var department = await agents.department.find(user.departmentId);\n\n      else \n// run the admin method to get all the employees in the c\n\n\n        runInAction(() => {\n            this.departmentData = department;\n          });   \n        } catch (error) {\n      throw error;\n    }\n  };\n}\n","import { RootStore } from \"./rootStore\";\nimport { observable, action, runInAction } from \"mobx\";\nimport agents from \"../API/agents\";\nimport { ICompany } from \"../models/companyModels/ICompany\";\nimport { IUser } from \"../models/usersModels/user\";\n\nexport default class AdminStore {\n  rootStore: RootStore;\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @observable company: ICompany | null = null;\n  @observable managersList: IUser[] = [];\n\n  @action GetCompanyDetail = async (employeeId: string) => {\n    try {\n      const companyData = await agents.company.find(employeeId);\n      if (companyData) {\n        runInAction(() => {\n          this.company = companyData;\n        });\n      }\n    } catch (error) {}\n  };\n\n  @action GetNonBasicUsers = async (companyId: string) => {\n    try {\n      const tempManagersList = await agents.nonBasicUsers.list(companyId);\n\n      if (tempManagersList) {\n        runInAction(() => {\n          this.managersList = tempManagersList;\n        });\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n","import { RootStore } from \"./rootStore\";\nimport { observable, action, runInAction, ObservableMap } from \"mobx\";\nimport {\n  IDepartment,\n  IEmployeeDetails,\n} from \"../models/employeeModels/employee\";\nimport agents from \"../API/agents\";\nimport { IUser } from \"../models/usersModels/user\";\n \n\nexport default class ManageEmployeeStore {\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n  @observable departmentData: IDepartment | null = null;\n  @observable employeesData: IEmployeeDetails[] = [];\n\n  @action loadEmployeesData = async (user: IUser) => {\n\n    \n\n\n    try {\n    //   if (user.role[0] !== \"Manager\") {\n    //     let departmentData = await agents.department.find(user.companyId);\n    //     if (departmentData != null)\n    //       runInAction(() => {\n    //         this.departmentData = departmentData;\n    //       });\n    //   }\n    //   // run the admin method to get all the employees in the company\n    //   else {\n    // console.log(user);\n\n        let employeesData = await agents.company.listEmployees(user.companyId);\n\n        if (employeesData)\n          runInAction(() => {\n            this.employeesData = employeesData;\n          });\n     // }\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n","import { RootStore } from \"./rootStore\";\nimport { observable, action, runInAction } from \"mobx\";\nimport agents from \"../API/agents\";\nimport { IOffice, IOfficeList } from \"../models/companyModels/IOffices\";\nimport { IDepartment } from \"../models/employeeModels/employee\";\nimport { IAddress } from \"../models/commonModels/IAddress\";\n\nexport default class OfficeStore {\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n  @observable isMainHQ: boolean = false;\n  @observable officeList: IOfficeList[] = [];\n  @observable departmentList: IDepartment[] = [];\n  @observable officeAddress: IAddress | null = null;\n  @action mainHQChange = () => {\n    this.isMainHQ = !this.isMainHQ;\n  };\n  @action loadDepartments = async (officeId: string) => {\n    try {\n      const departments = await agents.department.findAll(officeId);\n      if (departments) {\n        runInAction(() => {\n          this.departmentList = departments;\n        });\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  @action createOffice = async (data: IOffice) => {\n    try {\n \n \n\n      data.isMainHR = this.isMainHQ;\n\n     const response = await agents.office.create(data);\n    } catch (error) {\n      throw error;\n    }\n  };\n  @action\n  resetDepartmentList = async () =>\n    runInAction(() => {\n      this.departmentList = [];\n    });\n\n  @action loadOffices = async () => {\n    try {\n      let result = await agents.office.getAll(\n        this.rootStore.userStore.user?.employeeId!\n      );\n      if (result) {\n        runInAction(() => {\n          this.officeList = result;\n        });\n      }\n    } catch (error) {}\n  };\n\n  // department methods\n  @action creatDepartment = async (data: IDepartment) => {\n    try {\n      console.log(data);\n\n      const result = await agents.department.create(data);\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n","import { RootStore } from \"./rootStore\";\nimport { observable, action, runInAction } from \"mobx\";\nimport {\n  IJobTitle,\n  IJobTitleItemList,\n  ISchedulePolicy,\n  ISchedulePolicyItemList,\n} from \"../models/commonModels/companyPolicies\";\nimport agents from \"../API/agents\";\n\nexport default class PolicyStore {\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n  @observable jobTitleOptions: IJobTitleItemList[] = [];\n  @observable schedulePolicyOptions: ISchedulePolicyItemList[] = [];\n  // add - job title\n  @action submitJobTitle = async (data: IJobTitle) => {\n    try {\n      const result = await agents.jobTitle.create(data);\n    } catch (error) {\n      throw error;\n    }\n  };\n  //update - job title\n  @action updateJobTitle = async (titleId: string, data: IJobTitle) => {\n    try {\n      const result = await agents.jobTitle.edit(titleId, data);\n    } catch (error) {\n      throw error;\n    }\n  };\n  //get - job title\n  @action getJobTitle = async (titleId: string) => {\n    try {\n      const result = await agents.jobTitle.get(titleId);\n      console.log(result);\n    } catch (error) {\n      throw error;\n    }\n  };\n  //list - job title\n  @action listJobTitles = async (companyId: string) => {\n    try {\n\n      console.log(companyId);\n      \n      const result = await agents.jobTitle.list(companyId);\n      if (result)\n        runInAction(() => {\n          this.jobTitleOptions = result;\n        });\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // schedule policy\n  //add\n  @action submitSchedulePolicy = async (data: ISchedulePolicy) => {\n    console.log(data);\n\n    const response = await agents.schedulePolicy.create(data);\n  };\n  //get\n  @action getSchedulePolicy = async () => {};\n  //update\n  @action updateSchedulePolicy = async () => {};\n  //list\n  @action listSchedulePolicy = async (companyId: string) => {\n    try {\n      const response = await agents.schedulePolicy.list(companyId);\n\n      if (response) {\n        runInAction(() => {\n          this.schedulePolicyOptions = response;\n        });\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n","import { action, observable, ObservableMap, runInAction } from \"mobx\";\nimport agents from \"../API/agents\";\nimport { ILeaves, ILeavesRequest } from \"../models/employeeModels/leaves\";\nimport { RootStore } from \"./rootStore\";\n\nexport default class LeavesStore {\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @observable leavesData: ILeaves | null = null;\n  @observable dateError: string = \"\";\n\n  @action loadLeavesData = async (employeeID: string) => {\n    try {\n      const result = await agents.leaves.list(employeeID);\n\n      if (result) {\n        runInAction(() => {\n          this.leavesData = result;\n        });\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  @action requestLeave = async (data: ILeavesRequest) => {\n    try {\n      const user = this.rootStore.userStore.user;\n      data.employeeId = user?.employeeId!;\n      if (data.toDate < data.fromDate)\n        throw new Error(\n          (this.dateError = \"Date to cannot be before date from!\")\n        );\n\n      await agents.leaves.request(data);\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n","import { RootStore } from \"./rootStore\";\n\nexport default class FinancesStore {\n    rootStore: RootStore;\n  \n    constructor(rootStore: RootStore) {\n      this.rootStore = rootStore;\n    }\n\n\n\n    // submit claim\n\n    // get history - list all expenses claims for a given user\n\n\n    // get history for manager - list all the expenses claimed by users in the department (manager)\n\n    // authorize \n\n}","import { action, observable } from \"mobx\";\nimport agents from \"../API/agents\";\nimport { ICustomer } from \"../models/customerModels/customer\";\nimport { RootStore } from \"./rootStore\";\n\nexport default class CustomerStore {\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @observable customer: ICustomer | null = null;\n  @observable customerList: ICustomer[] = [];\n\n  // add customer\n  @action addCustomer = async (data: ICustomer) => {\n    try {\n      await agents.customer.create(data);\n    } catch (ex) {\n      console.log(\"Submitting Customer ERROR: \", ex);\n    }\n  };\n\n  // list customer\n  @action listCustomer = async (companyId: string) => {\n    try {\n      const customer = await agents.customer.list(companyId);\n      if (customer) this.customerList = customer;\n    } catch (ex) {\n      console.log(\"Listing Customer ERROR: \", ex);\n    }\n  };\n\n\n  \n}\n","import { createContext } from \"react\";\nimport UserStore from \"./userStore\";\nimport { configure } from \"mobx\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport MenuBarStore from \"./menuBarStore\";\nimport EmployeeStore from \"./employeeStore\";\nimport CompanyStore from \"./companyStore\";\nimport TimeSheetStore from \"./timeSheetStore\";\nimport MyDataStore from \"./myDataStore\";\nimport ManagerStore from \"./managerStore\";\nimport AdminStore from \"./adminStore\";\nimport ManageEmployeeStore from \"./manageEmployeeStore\";\nimport OfficeStore from \"./officeStore\";\nimport PolicyStore from \"./policyStore\";\nimport LeavesStore from \"./leavesStore\";\nimport FinancesStore from './financesStore'\nimport CustomerStore from './customerStore'\n\nconfigure({ enforceActions: \"always\" });\nexport class RootStore {\n  customerStore: CustomerStore\n  userStore: UserStore;\n  commonStore: CommonStore;\n  modalStore: ModalStore;\n  menuBarStore: MenuBarStore;\n  employeeStore: EmployeeStore;\n  companyStore: CompanyStore;\n  timeSheetStore: TimeSheetStore;\n  myDataStore: MyDataStore;\n  managerStore: ManagerStore;\n  adminStore: AdminStore;\n  manageEmployeeStore: ManageEmployeeStore\n  officeStore: OfficeStore\n  policyStore: PolicyStore\n  leavesStore: LeavesStore\n  expensesStore: FinancesStore;\n\n  constructor() {\n    this.customerStore = new CustomerStore(this)\n    this.expensesStore = new FinancesStore(this)\n    this.leavesStore = new LeavesStore(this)\n    this.policyStore = new PolicyStore(this)\n    this.manageEmployeeStore = new ManageEmployeeStore(this)\n    this.officeStore = new OfficeStore(this)\n    this.adminStore = new AdminStore(this)\n    this.managerStore = new ManagerStore(this);\n    this.myDataStore = new MyDataStore(this);\n    this.timeSheetStore = new TimeSheetStore(this);\n    this.companyStore = new CompanyStore(this);\n    this.menuBarStore = new MenuBarStore(this);\n    this.userStore = new UserStore(this);\n    this.modalStore = new ModalStore(this);\n    this.commonStore = new CommonStore(this);\n    this.employeeStore = new EmployeeStore(this);\n  }\n}\n\nexport const RootStoreContext = createContext(new RootStore());\n","import React, { useContext } from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { RootStoreContext } from \"../../stores/rootStore\";\nimport { observer } from \"mobx-react-lite\";\n\nconst ModalContainer = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    modal: { open, body },\n    closeModal,\n  } = rootStore.modalStore;\n  return (\n    <Modal\n      className=\"modal-container\"\n      open={open}\n      inverted\n      onClose={closeModal}\n      size=\"mini\"\n    >\n      <Modal.Content>{body}</Modal.Content>\n    </Modal>\n  );\n};\n\nexport default observer(ModalContainer);\n","import React from \"react\";\nimport { FieldRenderProps } from \"react-final-form\";\nimport { FormFieldProps, Form, Label } from \"semantic-ui-react\";\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLElement>,\n    FormFieldProps {}\n\nconst TextInput: React.FC<IProps> = ({\n  input,\n  width,\n  readOnly,\n  type,\n  placeholder,\n  label,\n  pattern,\n  meta: { touched, error },\n}) => {\n  return (\n    <Form.Field error={touched && !!error} type={type} width={width}>\n      <label>{label}</label>\n      <input\n        {...input}\n        pattern={pattern}\n        placeholder={placeholder}\n        className={(readOnly ? \"is-readOnly\" : \"\") + \" \"}\n        readOnly={readOnly}\n      />\n      {touched && error && (\n        <Label basic color=\"red\">\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport { Message } from \"semantic-ui-react\";\nimport { AxiosResponse } from \"axios\";\n\ninterface IProps {\n    error: AxiosResponse,\n    text: string\n}\n\nconst ErrorMessage: React.FC<IProps> = ({error, text}) => {\n  return (\n    <Message error>\n      <Message.Header>{error.statusText}</Message.Header>\n      {text && <Message.Content content={text} />}\n    </Message>\n  );\n};\n\nexport default  ErrorMessage;\n","import React, { useContext } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Form, Button, Header } from \"semantic-ui-react\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport { combineValidators, isRequired } from \"revalidate\";\r\nimport TextInput from \"../../common/form/TextInput\";\r\nimport { IUserFormValues } from \"../../models/usersModels/user\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ErrorMessage from \"../../layout/common/ErrorMessage\";\r\n\r\nconst validate = combineValidators({\r\n  email: isRequired(\"Email\"),\r\n  password: isRequired(\"Password\"),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { Login } = rootStore.userStore;\r\n  return (\r\n    <FinalForm\r\n      onSubmit={(values: IUserFormValues) =>\r\n        Login(values).catch((error) => ({\r\n          [FORM_ERROR]: error,\r\n        }))\r\n      }\r\n      validate={validate}\r\n      render={({\r\n        handleSubmit,\r\n        submitting,\r\n        submitError,\r\n        invalid,\r\n        pristine,\r\n        dirtySinceLastSubmit,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Header as=\"h2\" content=\"Login\" color=\"teal\" textAlign=\"center\" />\r\n          <Field\r\n            name=\"email\"\r\n            component={TextInput}\r\n            placeholder=\"Email\"\r\n           \r\n          />\r\n          <Field\r\n            name=\"password\"\r\n            component={TextInput}\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            \r\n          />\r\n          {submitError && !dirtySinceLastSubmit && (\r\n            <ErrorMessage\r\n              error={submitError}\r\n              text=\"Password ou Email Incorrect\"\r\n            />\r\n          )}\r\n          <br />\r\n          <Button\r\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\r\n            loading={submitting}\r\n            color=\"teal\"\r\n            content=\"Login\"\r\n            fluid\r\n            icon=\"sign in\"\r\n          />\r\n          <Link to=\"#\">Recover Password</Link>\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useContext } from \"react\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { Form, Button, Header } from \"semantic-ui-react\";\nimport { FORM_ERROR } from \"final-form\";\nimport {\n  combineValidators,\n  isRequired,\n  matchesField,\n  composeValidators,\n} from \"revalidate\";\nimport TextInput from \"../../common/form/TextInput\";\nimport { RootStoreContext } from \"../../stores/rootStore\";\nimport ErrorMessage from \"../../layout/common/ErrorMessage\";\nimport { IRegisterFormValues } from \"../../models/companyModels/company\";\n\nconst validate = combineValidators({\n  // email: createValidator(\n  //   message => value => {\n  //     if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n  //       return message\n  //     }\n  //   },\n  //   'Invalid email address'\n  // ),\n\n  email: isRequired(\"Email\"),\n  password: isRequired(\"Password\"),\n  repeatEmail: composeValidators(\n    isRequired,\n    matchesField(\"email\", \"Email\")\n  )(\"Repeat Email\"),\n\n  repeatPassword: composeValidators(\n    isRequired,\n    matchesField(\"password\", \"Password\")\n  )(\"Repeat Password\"),\n});\ninterface IProps {}\n\nconst RegisterForm: React.FC<IProps> = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { register } = rootStore.userStore;\n  return (\n    <FinalForm\n      onSubmit={(values: IRegisterFormValues) =>\n        register(values).catch((error) => ({\n          [FORM_ERROR]: error,\n        }))\n      }\n      validate={validate}\n      render={({\n        handleSubmit,\n        submitting,\n        submitError,\n        invalid,\n        pristine,\n        dirtySinceLastSubmit,\n      }) => (\n        <Form onSubmit={handleSubmit} error>\n          <Header as=\"h2\" content=\"Register\" color=\"teal\" textAlign=\"center\" />\n          <Field\n            name=\"companyName\"\n            component={TextInput}\n            placeholder=\"Company Name\"\n          />\n          <Field name=\"Username\" component={TextInput} placeholder=\"Username\" />\n\n          <Field name=\"email\" component={TextInput} placeholder=\"Email\" />\n          <Field\n            name=\"repeatEmail\"\n            component={TextInput}\n            placeholder=\"Repeat Email\"\n          />\n          <Field\n            name=\"password\"\n            component={TextInput}\n            placeholder=\"Password\"\n            type=\"password\"\n          />\n          <Field\n            name=\"repeatPassword\"\n            component={TextInput}\n            placeholder=\"Repeat Password\"\n            type=\"password\"\n          />\n          {submitError && !dirtySinceLastSubmit && (\n            <ErrorMessage error={submitError} text=\"Something went wrong\" />\n          )}\n          <br />\n          <Button\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\n            loading={submitting}\n            color=\"teal\"\n            content=\"Submit\"\n            fluid\n            icon=\"pencil\"\n          />\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default RegisterForm;\n","import React, { Fragment, useContext } from \"react\";\r\nimport { RootStoreContext } from \"../stores/rootStore\";\r\nimport { Segment, Container, Header, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginForm from \"../features/forms/LoginForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport RegisterForm from \"../features/forms/registerForm\";\r\n\r\nconst Home = () => {\r\n  const token = window.localStorage.getItem(\"jwt\");\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { user, isLoggedIn } = rootStore.userStore;\r\n  const { openModal } = rootStore.modalStore;\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          Qlientel from pipeline release\r\n        </Header>\r\n\r\n        {isLoggedIn && user && token ? (\r\n          <Fragment>\r\n            <Header as=\"h2\" inverted content={`Welcome, ${user.displayName}`} />\r\n            <Button as={Link} to={`/${user.role[0].toLowerCase()}/dashboard`} size=\"huge\" inverted>\r\n              myDashboard\r\n            </Button>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <Button\r\n              onClick={() => openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              onClick={() => openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(Home);\r\n","import React, { useContext } from \"react\";\nimport {\n  RouteProps,\n  RouteComponentProps,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { RootStoreContext } from \"../stores/rootStore\";\n\ninterface IProps extends RouteProps {\n  component: React.ComponentType<RouteComponentProps<any>>;\n}\nconst AuthorizeRoute: React.FC<IProps> = ({\n  component: Component,\n  ...rest\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const { isLoggedIn } = rootStore.userStore;\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nexport default observer(AuthorizeRoute);\n","import React from \"react\";\nimport { Button, Segment, Header, Icon } from \"semantic-ui-react\";\nimport { history } from \"../../..\";\n\nexport const NotFound = () => {\n  return (\n    <Segment placeholder className='not-found-page'>\n\n\n\n      <Header icon>\n\n      <Header color='teal'>\n\n        <h1>404</h1>\n      </Header>\n\n        <Icon name=\"search\" />\n        Oops - we've looked everywhere but couldn't find this.\n      </Header>\n      <Segment.Inline>\n        <Button onClick={() => history.goBack()} primary>\n          Go Back\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  );\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Icon, Popup } from \"semantic-ui-react\";\n\nexport default class TextIcon extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    hideText: PropTypes.bool.isRequired,\n    color: PropTypes.string,\n    size: PropTypes.string.isRequired,\n    inverted: PropTypes.bool,\n    colorTxt: PropTypes.string,\n    toolTipContent: PropTypes.string\n  };\n\n  style = {\n    alignSelf: \"center\",\n    paddingLeft: \"5px\",\n    color: this.props.colorTxt ? this.props.colorTxt : \"#000\",\n  };\n\n   styleTT = {\n    borderRadius: 0,\n    padding: '2em',\n  }\n  render() {\n    return (\n      <div style={{ display: \"inline-flex\" }}>\n        <Popup\n        disabled={!this.props.hideText}\n        style={this.styleTT}\n          trigger={\n        <Icon\n          size={this.props.size}\n          inverted={this.props.inverted}\n          color={this.props.color}\n          name={this.props.name}\n        />}\n        content={this.props.toolTipContent}\n        position='right center'\n      />\n        <div\n          style={this.style}\n          hidden={this.props.hideText}\n          color={this.props.colorTxt}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState, useContext } from \"react\";\nimport { Menu, MenuItemProps } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { RootStoreContext } from \"../../stores/rootStore\";\nimport TextIcon from \"../../components/TextIcon\";\n\ninterface IProps {\n  children: any;\n}\n\nconst SideMenu: React.FC<IProps> = ({ children }) => {\n  const rootStore = useContext(RootStoreContext);\n  const { sideMenuVisible } = rootStore.menuBarStore;\n  const { user } = rootStore.userStore;\n  const [activeItem, setActiveItem] = useState(\"dashboard\");\n\n  const handleItemClick = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n    data: MenuItemProps\n  ) => setActiveItem(data.name!);\n\n  const getAdminMenu = () => {\n    return (\n      <Menu\n        fixed=\"left\"\n        borderless\n        className={(sideMenuVisible ? \"small-side\" : \"\") + \" side \"}\n        vertical\n      >\n        <Menu.Item\n          as={Link}\n          to={\"/home\"}\n          name=\"dashboard\"\n          active={activeItem === \"dashboard\"}\n          onClick={handleItemClick}\n        >\n          <div style={{ color: \"#E9E9E9\" }}>LOGO</div>\n        </Menu.Item>\n\n        <Menu.Item\n          as={Link}\n          to={`/${user?.role}/dashboard`}\n          name=\"dashboard\"\n          active={activeItem === \"dashboard\"}\n          onClick={handleItemClick}\n        >\n          <TextIcon\n            toolTipContent={\"Profile\"}\n            hideText={sideMenuVisible}\n            inverted={true}\n            size=\"small\"\n            colorTxt=\"#E9E9E9\"\n            name=\"dashboard\"\n          >\n            Dashboard\n          </TextIcon>\n        </Menu.Item>\n\n        <Menu.Item\n          as={Link}\n          to={\"/manage-customer\"}\n          name=\"/manage-customer\"\n          active={activeItem === \"/manage-customer\"}\n          onClick={handleItemClick}\n        >\n          <TextIcon\n            toolTipContent={\"Profile\"}\n            hideText={sideMenuVisible}\n            inverted={true}\n            size=\"small\"\n            colorTxt=\"#E9E9E9\"\n            name=\"industry\"\n          >\n            Manage Customers\n          </TextIcon>\n        </Menu.Item>\n        <Menu.Item\n          as={Link}\n          to={\"/manage-user\"}\n          name=\"/manage-user\"\n          active={activeItem === \"/manage-user\"}\n          onClick={handleItemClick}\n        >\n          <TextIcon\n            toolTipContent=\"industry\"\n            hideText={sideMenuVisible}\n            size=\"small\"\n            inverted={true}\n            colorTxt=\"#E9E9E9\"\n            name=\"users\"\n          >\n            Manage Users\n          </TextIcon>\n        </Menu.Item>\n\n        <Menu.Item\n          as={Link}\n          to={\"/profile\"}\n          name=\"profile\"\n          active={activeItem === \"profile\"}\n          onClick={handleItemClick}\n        >\n          <TextIcon\n            toolTipContent=\"Profile\"\n            hideText={sideMenuVisible}\n            size=\"small\"\n            inverted={true}\n            colorTxt=\"#E9E9E9\"\n            name=\"folder\"\n          >\n            Manage Companies\n          </TextIcon>\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"parent\">\n        <div className={(sideMenuVisible ? \"small-side \" : \"\") + \"side\"}>\n          {getAdminMenu()}\n        </div>\n        <div className={(sideMenuVisible ? \"small-content \" : \"\") + \"content\"}>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default observer(SideMenu);\n","import React from \"react\";\nimport { Popup, Icon, Card, Image } from \"semantic-ui-react\";\n\ninterface IProps {}\n\nconst Notification: React.FC<IProps> = () => {\n  return (\n    <Popup\n      trigger={<Icon size=\"large\" name=\"bell\" color=\"grey\" />}\n      position=\"bottom right\"\n      size=\"huge\"\n      pinned\n    ></Popup>\n  );\n};\nexport default Notification;\n","import React, { useContext } from \"react\";\nimport { Image, Label, Menu, Dropdown, Icon } from \"semantic-ui-react\";\nimport Notification from \"./Notification\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { RootStoreContext } from \"../../stores/rootStore\";\ninterface IProps {}\n\nconst TopMenu: React.FC<IProps> = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { user, logout } = rootStore.userStore;\n\n  return (\n    <Menu className=\"top-menu\" color='teal'>\n      <Menu.Item className=\"no-border\" onClick={() => {}}>\n        <Icon name=\"bars\" />\n      </Menu.Item>\n\n      <Menu.Menu position=\"right\">\n        <Menu.Item className=\"no-border\" position=\"right\">\n          <Notification />\n\n          <Label\n            className=\"label-on-corner\"\n            color=\"teal\"\n            size={\"mini\"}\n            floating\n            circular\n          >\n            1\n          </Label>\n        </Menu.Item>\n        {user && (\n          <Menu.Item position=\"right\">\n            <Image\n              circular\n              size={\"mini\"}\n              src=\"https://react.semantic-ui.com/images/avatar/large/steve.jpg\"\n            />\n            <br />\n            <Dropdown text={user.displayName} simple direction=\"left\">\n              <Dropdown.Menu style={{ marginTop: 20 }}>\n                <Dropdown.Item\n                  as={Link}\n                  to={`/home`}\n                  text=\"My profile\"\n                  icon=\"user\"\n                />\n                <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\n              </Dropdown.Menu>\n            </Dropdown>\n          </Menu.Item>\n        )}\n      </Menu.Menu>\n    </Menu>\n  );\n};\n\nexport default observer(TopMenu);\n","import React from \"react\";\nimport SideMenu from \"../common/SideMenu\";\nimport TopMenu from \"../common/TopMenu\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface IProps {\n  children: any;\n}\nconst AdminLayout: React.FC<IProps> = ({ children }) => {\n  return (\n    <div className='margin-left'>\n      <TopMenu/>\n      <div className=\"main-content\">\n        <SideMenu>{children}</SideMenu>\n      </div>\n    </div>\n  );\n};\n\nexport default observer(AdminLayout);\n","import React from 'react'\nimport AdminLayout from './adminLayout'\n\nconst ProfileLayout:React.FC<{children: any}> = ({children}) => {\n    return <AdminLayout>{children}</AdminLayout>;\n}\n\nexport default ProfileLayout\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Segment, Dropdown, Table, Icon } from \"semantic-ui-react\";\n\nimport { RootStoreContext } from \"../stores/rootStore\";\n\nimport { format } from \"date-fns\";\nimport ProfileLayout from \"../layout/admin/ProfileLayout\";\nimport UploadWidget from \"../common/upload/UploadWidget\";\nimport UploadDocuments from \"../features/user/forms/UploadDocuments\";\n\nconst EmployeeList: React.FC = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { user } = rootStore.userStore;\n  const { loadEmployeesData, employeesData } = rootStore.manageEmployeeStore;\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadEmployeesData(user!).then(() => setLoading(false));\n  }, [loadEmployeesData, user]);\n\n  return (\n    <ProfileLayout>\n      {/* <Segment loading={loading}>\n        <br />\n        <Dropdown\n          clearable\n          selection\n          search\n          placeholder=\"Search for a...\"\n          fluid\n          basic\n          noResultsMessage=\"Try another search.\"\n          options={[]}\n        />\n        <br /> \n      </Segment> */}\n      <Segment>\n{/* <UploadDocuments/> */}\n</Segment>\n\n    </ProfileLayout>\n  );\n};\n\nexport default EmployeeList;\n","import { createMedia } from \"@artsy/fresnel\";\n\nexport const AppMedia = createMedia({\n    breakpoints: {\n      mobile: 320,\n     // tablet: 70,\n      computer: 992,\n      largeScreen: 1200,\n      widescreen: 1920\n    }\n  });\n\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  Menu,\n  MenuItemProps,\n  Grid,\n\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { RootStoreContext } from \"../stores/rootStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { AppMedia } from \"../constants/MediaScreen\";\n\nconst MyMenu: React.FC = () => {\n  const { MediaContextProvider } = AppMedia;\n\n  const [activeItem, setActiveItem] = useState(\"home\");\n  const rootStore = useContext(RootStoreContext);\n  const { user } = rootStore.userStore;\n\n  const handleItemClick = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n    data: MenuItemProps\n  ) => {\n    setActiveItem(data.name!);\n  };\n\n  useEffect(() => {\n    setActiveItem(window.location.pathname);\n  }, [setActiveItem]);\n\n  if (user?.role[0] !== \"User\")\n    return (\n      <MediaContextProvider>\n        <Grid centered columns=\"1\">\n          <Grid.Column>\n            <Menu pointing secondary fluid>\n              <Menu.Item\n                name=\"/home\"\n                active={activeItem === \"/home\"}\n                onClick={handleItemClick}\n                as={Link}\n                to={`/home`}\n                content=\"Home\"\n              />\n              <Menu.Item\n                name=\"/dashboard\"\n                active={activeItem === \"/dashboard\"}\n                onClick={handleItemClick}\n                as={Link}\n                to={`/dashboard`}\n              />\n\n              {user?.role[0] === \"Admin\" && (\n                <Menu.Item\n                  name=\"/manage-policies\"\n                  active={activeItem === \"/manage-policies\"}\n                  onClick={handleItemClick}\n                  as={Link}\n                  to={\"/manage-policies\"}\n                />\n              )}\n\n              {user?.role[0] === \"Admin\" && (\n                <Menu.Item\n                  name=\"/company-directory\"\n                  active={activeItem === \"/company-directory\"}\n                  onClick={handleItemClick}\n                  as={Link}\n                  to={\"/company-directory\"}\n                />\n              )}\n              {user?.role[0] === \"Admin\" && (\n                <Menu.Item\n                  name=\"/employee-directory\"\n                  active={activeItem === \"/employee-directory\"}\n                  onClick={handleItemClick}\n                  as={Link}\n                  to={\"/employee-directory\"}\n                />\n              )}\n\n              {/* manager */}\n              {user?.role[0] === \"Manager\" && (\n                <Menu.Item\n                  name=\"/employee-directory\"\n                  active={activeItem === \"/employee-directory\"}\n                  onClick={handleItemClick}\n                  as={Link}\n                  to={\"/employee-directory\"}\n                />\n              )}\n            </Menu>\n          </Grid.Column>\n        </Grid>\n      </MediaContextProvider>\n    );\n  else\n    return (\n      <MediaContextProvider>\n        <Grid   columns=\"1\">\n          <Grid.Column>\n            <Menu pointing secondary fluid>\n              <Menu.Item\n                name=\"/user/dashboard/\"\n                active={activeItem === \"/user/dashboard/\"}\n                onClick={handleItemClick}\n                as={Link}\n                to={`/user/dashboard/`}\n                content=\"Home\"\n              />\n                   <Menu.Item\n                name=\"/Manage Documents\"\n                active={activeItem === \"/Manage Documents\"}\n                onClick={handleItemClick}\n                as={Link}\n                to={`/Manage Documents`}\n                content=\"Manage Documents\"\n              />\n            </Menu>\n          </Grid.Column>\n        </Grid>\n      </MediaContextProvider>\n    );\n};\n\nexport default observer(MyMenu);\n","import React from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react-lite\";\n\ninterface IProps {\n  size: any;\n  src: any;\n  children: any;\n}\n\nconst ProfilePhotoText: React.FC<IProps> = ({ src, size, children }) => {\n  const style: any = {\n    alignSelf: \"center\",\n    paddingLeft: \"40px\",\n  };\n  const imageStyle: any = {\n    marginLeft: 35,\n  \n  };\n  return (\n    <div style={{ display: \"inline-flex\" }}>\n      <Image\n        style={imageStyle}\n        verticalAlign=\"middle\"\n        src={src}\n        size={size}\n        circular\n      />\n      <div style={style}>{children}</div>\n    </div>\n  );\n};\n\nexport default observer(ProfilePhotoText);\n\n","\nimport React, { Fragment, useContext } from \"react\";\n// import { RootStoreContext } from \"../stores/rootStore\";\nimport TopMenu from \"../layout/common/TopMenu\";\nimport { Grid, List } from \"semantic-ui-react\";\nimport ProfilePhotoText from \"./ProfilePhotoText\";\n// import TextIcon from \"./TextIcon\";\nimport { observer } from \"mobx-react-lite\";\n// import {} from 'react-social-icons'\n\n  const ProfileHeader = () => {\n  // const rootStore = useContext(RootStoreContext);\n  // const { user } = rootStore.userStore;\n\n  return (\n    <Fragment>\n      <TopMenu />\n      <div className=\"profileTopBox\">\n        <Grid  className=\"\">\n          <Grid.Column width={15}>\n            <ProfilePhotoText\n              src=\"https://react.semantic-ui.com/images/avatar/large/steve.jpg\"\n              size=\"small\"\n            >\n              <List>\n                {/* <List.Item>\n                  <TextIcon inverted={false} size=\"larger\" name=\"user\">\n                    <h4> {user?.displayName}</h4>{\" \"}\n                  </TextIcon>\n                </List.Item>\n                <List.Item>\n                  <TextIcon inverted={false} size=\"larger\" name=\"map pin\">\n                    <h4>{user?.username}</h4>{\" \"}\n                  </TextIcon>\n                </List.Item>\n                <List.Item>\n                  <TextIcon inverted={false} size=\"larger\" name=\"legal\">\n                    <h4>Role</h4>\n                  </TextIcon>\n                </List.Item>\n                <List.Item>\n                  <TextIcon\n                    inverted={false}\n                    size=\"larger\"\n                    name=\"legal\"\n                  ></TextIcon>\n                </List.Item> */}\n              </List>\n            </ProfilePhotoText>\n          </Grid.Column>\n     \n        </Grid>\n      </div>\n    </Fragment>\n  );\n};\n\n\nexport default observer(ProfileHeader)","import React, { Fragment } from \"react\";\nimport MyMenu from \"../../components/MyMenu\";\nimport ProfileHeader from '../../components/ProfileHeader'\nimport { observer } from \"mobx-react-lite\";\nimport { Container } from \"semantic-ui-react\";\n\ninterface IProps {\n  children: any;\n}\nconst ProfileLayout: React.FC<IProps> = ({ children }) => {\n  return (\n    <Fragment>\n      <ProfileHeader/>\n      <Container>\n        <MyMenu />\n        {children}\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default observer(ProfileLayout);\n","import React from 'react'\nimport ProfileLayout from '../layout/common/ProfileLayout'\ninterface IProps{}\n\n\nconst UserProfile = () => {\n    return (\n       <ProfileLayout>\n\n       </ProfileLayout>\n            \n       \n    )\n}\n\nexport default UserProfile\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Icon, Menu, Search, Table } from \"semantic-ui-react\";\nimport { v4 as uuidv4 } from 'uuid';\nconst CustomerList: React.FC = () => {\n  return (\n    <div>\n<Search/>\n\n\n      <Table basic='very'>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Date Registered</Table.HeaderCell>\n            <Table.HeaderCell>E-mail</Table.HeaderCell>\n            <Table.HeaderCell />\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>H&M</Table.Cell>\n            <Table.Cell>January 11, 2014</Table.Cell>\n            <Table.Cell>jill.kendu@hm.com</Table.Cell>\n            <Table.Cell>\n            <Button color='yellow' labelPosition='left' icon='eye'  as={Link} to={`/customer/${uuidv4()}`} content=\"View\" />\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Dunnes Stores</Table.Cell>\n            <Table.Cell>January 11, 2014</Table.Cell>\n            <Table.Cell>jamieharingonton@yahoo.com</Table.Cell>\n            <Table.Cell>\n              <Button color='yellow' labelPosition='left' icon='eye' as={Link} to={`/customer/${uuidv4()}`} content=\"View\" />\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Aldi Ltd</Table.Cell>\n            <Table.Cell>January 11, 2014</Table.Cell>\n            <Table.Cell>jamieharingonton@yahoo.com</Table.Cell>\n            <Table.Cell>\n            <Button color='yellow' labelPosition='left' icon='eye'  as={Link} to={`/customer/${uuidv4()}`} content=\"View\" />\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Zara Ltd</Table.Cell>\n            <Table.Cell>May 11, 2014</Table.Cell>\n            <Table.Cell>jilsewris22@yahoo.com</Table.Cell>\n            <Table.Cell>\n            <Button color='yellow' labelPosition='left' icon='eye'  as={Link} to={`/customer/${uuidv4()}`} content=\"View\" />\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Tesco Inc</Table.Cell>\n            <Table.Cell>September 14, 2013</Table.Cell>\n            <Table.Cell>jhlilk22@yahoo.com</Table.Cell>\n            <Table.Cell>\n            <Button color='yellow' labelPosition='left' icon='eye'  as={Link} to={`/customer/${uuidv4()}`} content=\"View\" />\n            </Table.Cell>\n          </Table.Row>\n        </Table.Body>\n        <Table.Footer>\n          <Table.Row>\n            <Table.HeaderCell colSpan=\"3\">\n              <Menu pagination>\n                <Menu.Item as=\"a\" icon>\n                  <Icon name=\"chevron left\" />\n                </Menu.Item>\n                <Menu.Item as=\"a\">1</Menu.Item>\n                <Menu.Item as=\"a\">2</Menu.Item>\n                <Menu.Item as=\"a\">3</Menu.Item>\n                <Menu.Item as=\"a\">4</Menu.Item>\n                <Menu.Item as=\"a\" icon>\n                  <Icon name=\"chevron right\" />\n                </Menu.Item>\n              </Menu>\n            </Table.HeaderCell>\n            <Table.HeaderCell />\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    </div>\n  );\n};\n\nexport default CustomerList;\n","import React from 'react'\nimport { Header, Image, Segment } from 'semantic-ui-react'\nimport g1 from '../../../assets/g1.png'\nconst GlobalStorageUsageChart = () => {\n    return (\n      <Segment color=\"teal\" className='dashboard-chart-segment'>\n        <Header content=\"Global Storage Usage\" />\n        <Image src={g1} size=\"medium\" />\n      </Segment>\n    );\n}\n\nexport default GlobalStorageUsageChart\n","import { observer } from \"mobx-react-lite\";\nimport React, { Fragment } from \"react\";\nimport { Segment, Header, Feed, Button } from \"semantic-ui-react\";\n\n \n\nconst RecentActivity = () => {\n  return (\n    <Fragment>\n      <Segment color=\"blue\" className=\"recent-activity-segment\">\n        <Header content=\"Recent Activity\" />\n\n        <Feed size='large'>\n          <Feed.Event >\n            <Feed.Label image=\"https://react.semantic-ui.com/images/avatar/small/steve.jpg\" />\n            <Feed.Content>\n              <Feed.Summary\n                content=\"You registered a new customer: Data Storm\"\n                date=\"yesterday\"\n              />\n            </Feed.Content>\n          </Feed.Event>\n          <br />\n          <Feed.Event>\n            <Feed.Label image=\"https://react.semantic-ui.com/images/avatar/small/jenny.jpg\" />\n            <Feed.Content>\n              <Feed.Summary\n                content=\"Jenny has completed her induction tasks.\"\n              />\n              \n      \n              <Feed.Date>3 days ago</Feed.Date>\n            </Feed.Content>\n          </Feed.Event>\n        </Feed>\n      </Segment>\n    </Fragment>\n  );\n};\n\nexport default observer(RecentActivity);\n","import React from 'react'\nimport { Header, Image, Segment } from 'semantic-ui-react'\nimport g2 from '../../../assets/g2.png'\nconst StorageUsageByCustomerChart = () => {\n    return (\n      <Segment color=\"teal\">\n        <Header content=\"Storage Usage by Customer\" />\n        <Image src={g2} size='medium' />\n\n      </Segment>\n    );\n}\n\nexport default StorageUsageByCustomerChart\n","import React from \"react\";\nimport { Grid, Header, Segment } from \"semantic-ui-react\";\nimport CustomerList from \"../components/customer/CustomerList\";\nimport GlobalStorageUsageChart from \"../components/dashnoard/GlobalStorageUsageChart\";\nimport RecentActivity from \"../components/dashnoard/RecentActivity\";\nimport StorageUsageByCustomerChart from \"../components/dashnoard/StorageUsageByCustomerChart\";\nimport { AppMedia } from \"../constants/MediaScreen\";\nimport AdminLayout from \"../layout/admin/adminLayout\";\n\ninterface IProps {}\n\nconst { MediaContextProvider } = AppMedia;\nconst AdminProfile: React.FC<IProps> = () => {\n  return (\n    <MediaContextProvider>\n      <AdminLayout>\n        <Grid columns=\"2\">\n          <Grid.Column width=\"8\">\n            <GlobalStorageUsageChart />\n          </Grid.Column>\n          <Grid.Column width=\"8\">\n            <StorageUsageByCustomerChart />\n          </Grid.Column>\n        </Grid>\n\n        <Grid>\n          <Grid.Column width=\"10\">\n            <Segment color='blue'>\n              <Header content=\"Recent Customer\" />\n              <br />\n              <CustomerList />\n            </Segment>\n          </Grid.Column>\n          <Grid.Column width=\"6\">\n            <RecentActivity />\n          </Grid.Column>\n        </Grid>\n      </AdminLayout>\n    </MediaContextProvider>\n  );\n};\n\nexport default AdminProfile;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { Form, Button, Header, Dropdown } from \"semantic-ui-react\";\nimport { FORM_ERROR } from \"final-form\";\nimport {\n  combineValidators,\n  isRequired,\n  composeValidators,\n  matchesField,\n} from \"revalidate\";\nimport { observer } from \"mobx-react-lite\";\nimport SelectInput from \"../../common/form/SelectInput\";\n\nimport TextInput from \"../../common/form/TextInput\";\nimport { RootStoreContext } from \"../../stores/rootStore\";\nimport DateInput from \"../../common/form/DateInput\";\nimport UploadWidget from \"../../common/upload/UploadWidget\";\nimport { ICustomer } from \"../../models/customerModels/customer\";\n\nconst AddCustomer: React.FC = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { addCustomer } = rootStore.customerStore;\n  return (\n    <div>\n      <FinalForm\n        onSubmit={(values: ICustomer) =>\n          addCustomer(values).catch((error) => ({\n            [FORM_ERROR]: error,\n          }))\n        }\n        //  validate={validate}\n        render={({\n          handleSubmit,\n          submitting,\n          submitError,\n          invalid,\n          pristine,\n          dirtySinceLastSubmit,\n        }) => (\n          <Form onSubmit={handleSubmit} error>\n            <Form.Group widths=\"equal\">\n              <Field\n                name=\"Customer Name\"\n                component={TextInput}\n                placeholder=\"Customer Name\"\n              />\n            </Form.Group>\n\n            <Form.Group widths=\"equal\">\n              <Field\n                name=\"email\"\n                type=\"email\"\n                component={TextInput}\n                placeholder=\"Email Address\"\n              />\n\n              <Field\n                name=\"repeatEmail\"\n                component={TextInput}\n                type=\"email\"\n                placeholder=\"Repeat Email Address\"\n              />\n            </Form.Group>\n\n            <Form.Group widths=\"equal\">\n              <Field\n                name=\"salary\"\n                component={TextInput}\n                placeholder=\"Phone Number\"\n              />\n              <Field\n                name=\"Point of Contact\"\n                component={TextInput}\n                placeholder=\"Point of contact\"\n              />\n            </Form.Group>\n\n            <br />\n            <Button\n              disabled={(invalid && !dirtySinceLastSubmit) || pristine}\n              loading={submitting}\n              color=\"teal\"\n              content=\"Submit\"\n              fluid\n              icon=\"add\"\n            />\n          </Form>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default observer(AddCustomer);\n","import React from 'react'\nimport { Grid, Header, Segment } from 'semantic-ui-react'\nimport CustomerList from '../../components/customer/CustomerList'\nimport AddCustomer from '../../features/forms/AddCustomer'\nimport AdminLayout from '../../layout/admin/adminLayout'\n\n\n\nconst ManageCustomers:React.FC = () => {\n    return (\n      <AdminLayout>\n\n        <Grid columns=\"2\">\n          <Grid.Column width=\"9\">\n            <Segment>\n              <Header content=\"Customers List\" />\n              <CustomerList />\n            </Segment>\n          </Grid.Column>\n\n          <Grid.Column width=\"7\">\n            <Segment>\n              <Header content=\"Create Customers\" />\n              <AddCustomer />\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </AdminLayout>\n    );\n}\n\nexport default ManageCustomers\n","import React from 'react'\nimport { List } from 'semantic-ui-react'\nimport { ICustomer } from '../../models/customerModels/customer'\ninterface IProps{\ncustomer?: ICustomer\n}\nconst CustomerDetails:React.FC<IProps> = ({customer}) => {\n    return (\n      <div  >\n\n   \n      <List>\n        <List.Header>Email</List.Header>\n        <List.Description>jill.kendu@hm.com</List.Description>\n        <List.Header>Phone Number</List.Header>\n        <List.Description>01 999 0000</List.Description>\n        <List.Header>Date Joined</List.Header>\n        <List.Description>January 11, 2014</List.Description>\n        <List.Header>EPS</List.Header>\n        <List.Description>9893 0993 093L</List.Description>\n      </List>\n \n   \n\n   \n      </div>\n    )\n}\n\nexport default CustomerDetails\n","import React from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport map from \"../../assets/map.png\";\nconst MapsContainer = () => {\n  return <Image src={map} size='large' />;\n};\n\nexport default MapsContainer\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Menu, Segment, Table } from \"semantic-ui-react\";\nimport { v4 as uuidv4 } from \"uuid\";\nconst CustomerDocList = () => {\n  return (\n    <Segment>\n      <Header content=\"Customer Documents\" as=\"h3\" />\n\n      <Table basic=\"very\" className=\"customer-document-list\" columns=\"1\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell />\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>Contact</Table.Cell>\n            <Table.Cell>\n              <Button\n                  color='yellow'\n                as={Link}\n                icon='eye'\n                labelPosition='left'\n                to={`/customer/${uuidv4()}`}\n                content=\"View\"\n              />\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>October_report</Table.Cell>\n            <Table.Cell>\n            <Button\n                  color='yellow'\n                as={Link}\n                icon='eye'\n                labelPosition='left'\n                to={`/customer/${uuidv4()}`}\n                content=\"View\"\n              />\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>containers_report</Table.Cell>\n\n            <Table.Cell>\n            <Button\n                  color='yellow'\n                as={Link}\n                icon='eye'\n                labelPosition='left'\n                to={`/customer/${uuidv4()}`}\n                content=\"View\"\n              />\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>belgium_order</Table.Cell>\n\n            <Table.Cell>\n            <Button\n                  color='yellow'\n                as={Link}\n                icon='eye'\n                labelPosition='left'\n                to={`/customer/${uuidv4()}`}\n                content=\"View\"\n              />\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>November_report</Table.Cell>\n\n            <Table.Cell>\n            <Button\n                  color='yellow'\n                as={Link}\n                icon='eye'\n                labelPosition='left'\n                to={`/customer/${uuidv4()}`}\n                content=\"View\"\n              />\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>November_report</Table.Cell>\n\n            <Table.Cell>\n            <Button\n                  color='yellow'\n                as={Link}\n                icon='eye'\n                labelPosition='left'\n                to={`/customer/${uuidv4()}`}\n                content=\"View\"\n              />\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>November_report</Table.Cell>\n\n            <Table.Cell>\n            <Button\n                color='yellow'\n                as={Link}\n                icon='eye'\n                labelPosition='left'\n                to={`/customer/${uuidv4()}`}\n                content=\"View\"\n              />\n            </Table.Cell>\n          </Table.Row>\n        </Table.Body>\n        <Table.Footer>\n          <Table.Row>\n            <Table.HeaderCell colSpan=\"3\">\n              <Menu pagination>\n                <Menu.Item as=\"a\" icon>\n                  <Icon name=\"chevron left\" />\n                </Menu.Item>\n                <Menu.Item as=\"a\">1</Menu.Item>\n                <Menu.Item as=\"a\">2</Menu.Item>\n                <Menu.Item as=\"a\">3</Menu.Item>\n                <Menu.Item as=\"a\">4</Menu.Item>\n                <Menu.Item as=\"a\" icon>\n                  <Icon name=\"chevron right\" />\n                </Menu.Item>\n              </Menu>\n            </Table.HeaderCell>\n            <Table.HeaderCell />\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    </Segment>\n  );\n};\n\nexport default CustomerDocList;\n","import React, { useCallback, useContext } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Icon, Header } from \"semantic-ui-react\";\nimport { IFile } from \"../../models/commonModels/files\";\nimport { RootStoreContext } from \"../../stores/rootStore\";\n\ninterface IProps {\n  setFiles: (files: IFile[]) => void;\n}\n\nconst dropzoneStyles = {\n  border: \"dashed 3px\",\n  borderColor: \"#eee\",\n  borderRadius: \"5px\",\n  paddingTop: \"5px\",\n  textAlign: \"center\" as \"center\",\n  height: \"120px\",\n};\n\nconst dropzoneActive = {\n  borderColor: \"green\",\n};\n\nconst UploadWidget: React.FC<IProps> = ({ setFiles }) => {\n  const rootStore = useContext(RootStoreContext);\n  const { setContractFile } = rootStore.employeeStore;\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles.map((file: object) =>\n        Object.assign(file, { preview: URL.createObjectURL(file) })\n      );\n\n      setContractFile(acceptedFiles);\n\n      setFiles(file);\n    },\n    [setFiles]\n  );\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    acceptedFiles,\n  } = useDropzone({ onDrop, accept:'.pdf, .docx' });\n\n  return (\n    <div\n      {...getRootProps( )}\n      style={\n        isDragActive ? { ...dropzoneStyles, ...dropzoneActive } : dropzoneStyles\n      }\n    >\n      <input  {...getInputProps()} />\n      <Icon name=\"cloud upload\" size=\"huge\" />\n      <Header content=\"Drop a file\" />\n    </div>\n  );\n};\n\nexport default UploadWidget;\n","import React, { useState } from \"react\";\nimport Iframe from \"react-iframe\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\nimport UploadWidget from \"../../common/upload/UploadWidget\";\nimport { IFile } from \"../../models/commonModels/files\";\n\nconst DocumentUpload = () => {\n  const [files, setFiles] = useState<IFile[]>([]);\n  return (\n    <div>\n      <Segment>\n        <Header content=\"Document Upload\" as=\"h3\" />\n\n        {/* <Button\n          icon=\"trash\"\n          disabled={files.length > 0}\n          style={{ background: \"#fff\" }}\n        />\n\n        {files.length > 0 ? (\n          <Button\n            as={Link}\n            icon=\"external alternate\"\n            disabled={false}\n            style={{ background: \"#fff\" }}\n            to={files[0].preview}\n            \n          />\n        ) : (\n          <Button\n            icon=\"external alternate\"\n            disabled={true}\n            style={{ background: \"#fff\" }}\n          />\n        )} */}\n\n        <UploadWidget setFiles={setFiles} />\n      </Segment>\n\n      {files.length !== 0 && (\n        <Segment>\n          <Iframe\n            url={files[0].preview}\n            width=\"100%\"\n            height=\"380px\"\n            position=\"relative\"\n          />\n        </Segment>\n      )}\n    </div>\n  );\n};\n\nexport default DocumentUpload;\n","import React from \"react\";\nimport {  Grid,  Segment } from \"semantic-ui-react\";\nimport AdminLayout from \"../layout/admin/adminLayout\";\n\nimport CustomerDetails from \"../components/customer/CustomerDetails\";\nimport MapsContainer from \"../components/MapsContainer\";\n\nimport CustomerDocList from \"../components/customer/CustomerDocList\";\nimport DocumentUpload from \"../components/customer/DocumentUpload\";\n\nconst CustomerPage = () => {\n  return (\n    <AdminLayout>\n      <div className=\"customer-header-section\">\n        <h1>H & M</h1>\n      </div>\n      <Segment className=\"customer-details-container\">\n        <Grid>\n          <Grid.Column width=\"8\">  \n            <CustomerDetails />    \n          </Grid.Column>\n   \n          <Grid.Column width=\"8\"> \n            <MapsContainer />\n          </Grid.Column>\n        </Grid>\n      </Segment>\n\n      <Grid>\n        <Grid.Column width=\"8\">\n          <CustomerDocList />\n        </Grid.Column>\n        <Grid.Column width=\"8\">\n \n\n \n \n\n          <DocumentUpload />\n        </Grid.Column>\n      </Grid>\n    </AdminLayout>\n  );\n};\n\nexport default CustomerPage;\n","import React from 'react'\nimport { FieldRenderProps } from 'react-final-form';\nimport { FormFieldProps, Form, Label, Select } from 'semantic-ui-react';\n\ninterface IProps\n  extends FieldRenderProps<string, HTMLElement>,\n    FormFieldProps {}\n\nconst SelectInput: React.FC<IProps> = ({\n  input,\n  width,\n  options,\n  loading,\n  placeholder,\n  meta: { touched, error },\n}) => {\n  return (\n    <Form.Field error={touched && !!error} width={width}>\n      <Select\n      loading={loading}\n        value={input.value}\n        onChange={(e, data) => input.onChange(data.value)}\n        placeholder={placeholder}\n        options={options}\n      />\n      {touched && error && (\n        <Label basic color=\"red\">\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default SelectInput","import React from \"react\";\nimport { Segment, Grid, Button, Header } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react-lite\";\nimport { AppMedia } from \"../../constants/MediaScreen\";\nimport { Link } from \"react-router-dom\";\nimport AdminLayout from \"./adminLayout\";\nimport { history } from \"../../..\";\n\nconst { MediaContextProvider } = AppMedia;\n\nconst ManageEmployeeLayout: React.FC = ({ children }) => {\n  return (\n    <MediaContextProvider>\n      <AdminLayout>\n        <Grid columns=\"2\">\n          <Grid.Column width=\"11\">\n            {children}\n\n            {/* vou fazer desta pagina o layout e depois\n           vou ter outra para mostrar todos os usuarios numa tabela  */}\n          </Grid.Column>\n          <Grid.Column width=\"5\" className=\"manage-user-actions\">\n            <Segment>\n              <Header as=\"h3\" content=\"Action\" />\n              <Button\n                icon=\"plus\"\n                color=\"green\"\n                labelPosition=\"left\"\n                as={Link}\n                to=\"/add-user\"\n                fluid\n                content=\"Add\"\n              />\n         \n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </AdminLayout>\n    </MediaContextProvider>\n  );\n};\n\nexport default observer(ManageEmployeeLayout);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport {\n  Form,\n  Button,\n  Header,\n  Segment,\n  Dropdown,\n  DropdownProps,\n} from \"semantic-ui-react\";\nimport { FORM_ERROR } from \"final-form\";\nimport {\n  combineValidators,\n  isRequired,\n  composeValidators,\n  matchesField,\n} from \"revalidate\";\nimport TextInput from \"../../common/form/TextInput\";\nimport { RootStoreContext } from \"../../stores/rootStore\";\n// import ErrorMessage from \"../../../app/layout/ErrorMessage\";\n\nimport DateInput from \"../../common/form/DateInput\";\nimport { observer } from \"mobx-react-lite\";\nimport { IAddEmployeeValues } from \"../../models/employeeModels/employee\";\nimport SelectInput from \"../../common/form/SelectInput\";\nimport ManageEmployee from \"../../layout/admin/ManageEmployeeLayout\";\nimport UploadWidget from \"../../common/upload/UploadWidget\";\nimport { history } from \"../../..\";\n\nconst validate = combineValidators({\n  email: isRequired(\"Email\"),\n  role: isRequired(\"Role\"),\n\n  firstName: isRequired(\"First Name\"),\n  lastName: isRequired(\"Last Name\"),\n  office: isRequired(\"Office\"),\n  departmentId: isRequired(\"Department\"),\n\n  repeatEmail: composeValidators(\n    isRequired,\n    matchesField(\"email\", \"Email\")\n  )(\"Repeat Email\"),\n});\n\nconst validateViewOnly = combineValidators({});\n\ninterface IProps {}\nconst AddEmployee: React.FC<IProps> = (props: any) => {\n\n  const rootStore = useContext(RootStoreContext);\n  const {\n    SubmitEmployeeDetails,\n    userRoles,\n  } = rootStore.employeeStore;\n  const {\n    departmentList,\n  } = rootStore.officeStore;\n\n  const {\n    listJobTitles,\n    jobTitleOptions,\n    listSchedulePolicy,\n    schedulePolicyOptions,\n  } = rootStore.policyStore;\n  const {\n    company,\n    GetCompanyDetail,\n    GetNonBasicUsers,\n    managersList,\n  } = rootStore.adminStore;\n\n  const [isDepartmentLoading, setIsDepartmentLoading] = useState(false);\n  const [viewUserFlag, setViewUserFlag] = useState(false);\n  const [header, setHeader] = useState(\"\");\n \n  const { match } = props;\n  let { userId } = match.params;\n  let { path } = match;\n\n  useEffect(() => {\n    if (path.includes(\"/update-user\")) setHeader(\"Update User\");\n\n    if (path.includes(\"/view-user\")) {\n      setViewUserFlag(true);\n      setHeader(\"View User\");\n    } else setHeader(\"Add User\");\n  }, [userId, setHeader, path]);\n \n  return (\n    <ManageEmployee>\n      <Segment>\n        <FinalForm\n          onSubmit={(values: IAddEmployeeValues) =>\n            SubmitEmployeeDetails(values).catch((error) => ({\n              [FORM_ERROR]: error,\n            }))\n          }\n          validate={viewUserFlag ? validateViewOnly : validate}\n          render={({\n            handleSubmit,\n            submitting,\n            submitError,\n            invalid,\n            pristine,\n            dirtySinceLastSubmit,\n          }) => (\n            <Form onSubmit={handleSubmit} error>\n              <Header as=\"h2\" content={header} />\n\n              <Header as=\"h3\" content=\"User Details\" />\n\n              <Form.Group widths=\"equal\">\n                <Field\n                  name=\"firstName\"\n                  component={TextInput}\n                  placeholder=\"First Name\"\n                  readOnly={viewUserFlag}\n                />\n                <Field\n                  name=\"lastName\"\n                  component={TextInput}\n                  placeholder=\"Last Name\"\n                  readOnly={viewUserFlag}\n                />\n              </Form.Group>\n\n              <Form.Group widths=\"equal\">\n                <Field\n                  name=\"email\"\n                  type=\"email\"\n                  component={TextInput}\n                  placeholder=\"Email Address\"\n                  readOnly={viewUserFlag}\n                />\n\n                <Field\n                  name=\"repeatEmail\"\n                  component={TextInput}\n                  type=\"email\"\n                  placeholder=\"Repeat Email Address\"\n                  readOnly={viewUserFlag}\n                />\n              </Form.Group>\n\n              <Form.Group widths=\"equal\">\n                <Field\n                  name=\"role\"\n                  component={SelectInput}\n                  placeholder=\"Role\"\n                  options={userRoles}\n                  readOnly={viewUserFlag}\n                />\n\n                <Field\n                  className={\n                    departmentList.length === 0 ? \"is-readOnly-dropdown\" : \"\"\n                  }\n                  name=\"departmentId\"\n                  component={SelectInput}\n                  placeholder=\"Department\"\n                  disabled={departmentList.length === 0}\n                  loading={isDepartmentLoading}\n                  options={departmentList}\n                  readOnly={viewUserFlag}\n                />\n              </Form.Group>\n\n              <br />\n              {viewUserFlag ? (\n                <Button\n                  onClick={() => history.goBack()}\n                  primary\n                  content=\"Return\"\n                  fluid\n                  icon=\"arrow left\"\n                />\n              ) : (\n                <Button\n                  disabled={(invalid && !dirtySinceLastSubmit) || pristine}\n                  loading={submitting}\n                  color=\"teal\"\n                  content=\"Submit\"\n                  fluid\n                  icon=\"add\"\n                />\n              )}\n            </Form>\n          )}\n        />\n      </Segment>\n    </ManageEmployee>\n  );\n};\n\nexport default observer(AddEmployee);\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Icon, Menu, Search, Segment, Table } from \"semantic-ui-react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst UsersList = () => {\n    return (\n      <Segment>\n        <Header  content=\"User List\" />\n        <Search />\n        <Table\n          basic=\"very\"\n          striped\n          className=\"user-list\"\n          columns=\"3\"\n        >\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell content=\"Name\" />\n              <Table.HeaderCell content=\"Email\" />\n              <Table.HeaderCell content=\"Role\" />\n              <Table.HeaderCell />\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell content=\"Julios Mokoko\" />\n              <Table.Cell content=\"julios.mokoko@mcpit.ie\" />\n              <Table.Cell content=\"Admin\" />\n              <Table.Cell className='actions' >\n                <Button\n                  color=\"yellow\"\n                  as={Link}\n                  to={`/view-user/${uuidv4()}`}\n                  icon=\"eye\"\n                />\n               \n                <Button\n                  icon=\"redo\"\n                  primary\n                  as={Link}\n                  to={`/update-user/${uuidv4()}`}\n                />\n                <Button\n                  icon=\"trash\"\n                  color='red'\n                  as={Link}\n                  to={`/update-user/${uuidv4()}`}\n                />\n              </Table.Cell>\n            </Table.Row>\n\n            <Table.Row>\n              <Table.Cell content=\"Kim Parnassian\" />\n              <Table.Cell content=\"kim.par@mcpit.ie\" />\n              <Table.Cell content=\"User\" />\n              <Table.Cell className='actions' >\n              <Button\n                  color=\"yellow\"\n                  as={Link}\n                  to={`/view-user/${uuidv4()}`}\n                  icon=\"eye\"\n                />\n               \n                <Button\n                  icon=\"redo\"\n                  primary\n                  as={Link}\n                  to={`/update-user/${uuidv4()}`}\n                />\n                <Button\n                  icon=\"trash\"\n                  color='red'\n                  as={Link}\n                  to={`/update-user/${uuidv4()}`}\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell content=\"Joaquim Parma\" />\n              <Table.Cell content=\"joaquim.par@mcpit.ie\" />\n              <Table.Cell content=\"Manager\" />\n              <Table.Cell className='actions' >\n              <Button\n                  color=\"yellow\"\n                  as={Link}\n                  to={`/view-user/${uuidv4()}`}\n                  icon=\"eye\"\n                />\n               \n                <Button\n                  icon=\"redo\"\n                  primary\n                  as={Link}\n                  to={`/update-user/${uuidv4()}`}\n                />\n                <Button\n                  icon=\"trash\"\n                  color='red'\n                  as={Link}\n                  to={`/update-user/${uuidv4()}`}\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell content=\"James Marcus\" />\n              <Table.Cell content=\"james.marcus@mcpit.ie\" />\n              <Table.Cell content=\"User\" />\n              <Table.Cell className='actions' >\n               <Button\n                  color=\"yellow\"\n                  as={Link}\n                  to={`/view-user/${uuidv4()}`}\n                  icon=\"eye\"\n                />\n               \n                <Button\n                  icon=\"redo\"\n                  primary\n                  as={Link}\n                  to={`/update-user/${uuidv4()}`}\n                />\n                <Button\n                  icon=\"trash\"\n                  color='red'\n                  as={Link}\n                  to={`/update-user/${uuidv4()}`}\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"3\">\n                <Menu pagination>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron left\" />\n                  </Menu.Item>\n                  <Menu.Item as=\"a\">1</Menu.Item>\n                  <Menu.Item as=\"a\">2</Menu.Item>\n                  <Menu.Item as=\"a\">3</Menu.Item>\n                  <Menu.Item as=\"a\">4</Menu.Item>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron right\" />\n                  </Menu.Item>\n                </Menu>\n              </Table.HeaderCell>\n              <Table.HeaderCell />\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </Segment>\n    );\n}\n\nexport default UsersList\n","import { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport UsersList from '../../components/user/UsersList';\nimport ManageEmployeeLayout from '../../layout/admin/ManageEmployeeLayout'\n\n\nconst ManageUsers = () => {\n  return (\n    <ManageEmployeeLayout>\n      <div>\n   \n        <UsersList />\n      </div>\n    </ManageEmployeeLayout>\n  );\n};\n\nexport default observer(ManageUsers);\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport \"../../styles/App.css\";\nimport \"../../styles/dashboard.css\";\nimport \"../../styles/protocols.css\";\nimport \"../../styles/NavMenu.css\";\nimport \"../../styles/profile.css\";\nimport \"../../styles/timeInput.css\";\nimport \"../../styles/customer.css\";\nimport \"../../styles/manageUser.css\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  withRouter,\n} from \"react-router-dom\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { observer } from \"mobx-react-lite\";\nimport { RootStoreContext } from \"../../stores/rootStore\";\nimport ModalContainer from \"../../common/modals/ModalContainer\";\nimport home from \"../../views/home\";\nimport AuthorizeRoute from \"../../authentication/AuthorizeRoute\";\nimport { NotFound } from \"../../common/error/NotFound\";\nimport EmployeeList from \"../../components/EmployeeList\";\nimport \"mobx-react-lite/batchingForReactDom\";\nimport UserProfile from \"../../views/UserProfile\";\nimport AdminProfile from \"../../views/AdminProfile\";\n\nimport ManageCustomers from \"../../views/admin/ManageCustomers\";\nimport CustomerPage from \"../../views/CustomerPage\";\nimport CustomerDetails from \"../../components/customer/CustomerDetails\";\nimport AddEmployee from \"../../features/forms/AddEmployee\";\nimport ManageUsers from \"../../views/admin/ManageUsers\";\n\nconst App: React.FC = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { token, setAppLoaded, appLoaded } = rootStore.commonStore;\n  const { getUser } = rootStore.userStore;\n\n  useEffect(() => {\n    if (token) {\n      getUser().finally(() => setAppLoaded());\n    } else {\n      setAppLoaded();\n    }\n  }, [getUser, setAppLoaded, token]);\n\n  if (!appLoaded) return <LoadingSpinner content=\"Loading...\" />;\n  return (\n    <Fragment>\n      <ModalContainer />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={home} />\n          <AuthorizeRoute path=\"/employee-directory\" component={EmployeeList} />\n          <AuthorizeRoute path=\"/employee-directory\" component={EmployeeList} />\n          <AuthorizeRoute path=\"/admin/dashboard\" component={AdminProfile} />\n          <AuthorizeRoute path=\"/user/dashboard\" component={UserProfile} />\n          <AuthorizeRoute path=\"/manager/dashboard\" component={AdminProfile} />\n          <AuthorizeRoute path=\"/manage-customer\" component={ManageCustomers} />\n          <AuthorizeRoute\n            path=\"/customer/:customerId\"\n            component={CustomerPage}\n          />\n          <AuthorizeRoute path=\"/manage-user\" component={ManageUsers} />\n          <AuthorizeRoute\n            path=\"/add-user\"\n            component={AddEmployee }\n          />\n          <AuthorizeRoute\n            path=\"/update-user/:userId\"\n            component={AddEmployee}\n          />\n            <AuthorizeRoute\n            path=\"/view-user/:userId\"\n            component={AddEmployee}\n          />\n          <Route path=\"/customer-registration\" component={CustomerDetails} />\n          <Route path=\"*\" component={NotFound} />\n\n          {/* <AuthorizeRoute path=\"/dashboard\" component={manageCompanyDetails} />\n          \n          <AuthorizeRoute path=\"/employee-directory\" component={EmployeeList} />\n          <AuthorizeRoute exact path=\"/add-employee\" component={AddEmployee} />\n          <AuthorizeRoute exact path=\"/manage-policies\" component={AddPolicy} />\n          <AuthorizeRoute exact path=\"/company-directory\" component={AddDepartment} />\n          <AuthorizeRoute exact path=\"/add-policies\" component={AddPolicy} />\n          <AuthorizeRoute exact path=\"/update-policies\" component={UpdatePolicy}/>\n          <AuthorizeRoute exact path=\"/add-department\" component={AddDepartment}/>\n          <AuthorizeRoute exact path=\"/log-hours\" component={LogHours} />\n          <AuthorizeRoute exact path=\"/submit-leaves\" component={AddLeaves} />\n          <AuthorizeRoute exact path=\"/my-docs\" component={MyDocs} />\n          <AuthorizeRoute exact path=\"/my-finances\" component={MyFiances} /> */}\n        </Switch>\n      </Router>\n    </Fragment>\n  );\n};\n\nexport default withRouter(observer(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/app/styles/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from 'react-router';\nimport {createBrowserHistory} from 'history';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport dateFnsLocalizer from 'react-widgets-date-fns';\nimport App from './app/layout/common/App';\n\n dateFnsLocalizer();\n\nexport const history = createBrowserHistory();\nReactDOM.render(\n  <Router history={history}>\n {/* <React.StrictMode>     </React.StrictMode> */}\n    \n\n      <App/>\n \n  </Router>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}